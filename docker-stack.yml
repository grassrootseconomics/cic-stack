networks:
  traefik-public:
    external: false
services:
  bee:
    command: start --swap-enable=false --standalone
    container_name: bee
    environment:
      BEE_NETWORK_ID: '313'
      BEE_PASSWORD: password
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: ethersphere/bee:0.4.1
    ports:
    - published: 63633
      target: 1633
    - published: 63635
      target: 1635
    volumes:
    - bee-data:/tmp/cic/bee:rw
  cic-cache-server:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-cache
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n\"\
      /usr/local/bin/uwsgi\" \\\n--wsgi-file /usr/src/cic-cache/cic_cache/runnable/daemons/server.py\
      \ \\\n--http :8000 \\\n--pyargv \"-vv\"\n"
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-cache-http.entrypoints: http
        traefik.http.routers.cic-net-cache-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-cache-http.rule: Host(`cache.localhost`)
        traefik.http.routers.cic-net-cache-https.entrypoints: https
        traefik.http.routers.cic-net-cache-https.rule: Host(`cache.localhost`)
        traefik.http.routers.cic-net-cache-https.tls: "true"
        traefik.http.routers.cic-net-cache-https.tls.certresolver: le
        traefik.http.services.cic-net-cache.loadbalancer.server.port: '80'
    environment:
      DATABASE_DEBUG: 1
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_cache
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      SERVER_PORT: 8000
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-cache:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-cache-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-cache.loadbalancer.server.port: '63313'
    ports:
    - target: 8000
    - published: 63313
      target: 8000
  cic-cache-tasker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-cache
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n/usr/local/bin/cic-cache-taskerd\
      \ -vv\n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_REGISTRY_ADDRESS: ''
      CIC_TRUST_ADDRESS: '0xEb3907eCad74a0013c259D5874AE7f22DcBcC95C'
      DATABASE_DEBUG: 1
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_cache
      DATABASE_PASSWORD: tralala
      DATABASE_POOL_SIZE: 0
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_ABI_DIR: /usr/local/share/cic/solidity/abi
      ETH_PROVIDER: http://eth:8545
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-cache:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
  cic-cache-tracker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-cache
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n./start_tracker.sh\
      \ -c /usr/local/etc/cic-cache -vv\n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_REGISTRY_ADDRESS: ''
      CIC_TRUST_ADDRESS: '0xEb3907eCad74a0013c259D5874AE7f22DcBcC95C'
      DATABASE_DEBUG: 1
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_cache
      DATABASE_PASSWORD: tralala
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_ABI_DIR: /usr/local/share/cic/solidity/abi
      ETH_PROVIDER: http://eth:8545
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-cache:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
  cic-eth-dispatcher:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-eth
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n./start_dispatcher.sh\
      \ -q cic-eth -vv\n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_REGISTRY_ADDRESS: ''
      DATABASE_DEBUG: "false"
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PASSWORD: tralala
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_PROVIDER: http://eth:8545
      TASKS_TRANSFER_CALLBACKS: ''
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-eth:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
  cic-eth-retrier:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-eth
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n./start_retry.sh\
      \ -vv \n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      BATCH_SIZE: '50'
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_REGISTRY_ADDRESS: ''
      CIC_TX_RETRY_DELAY: 60
      DATABASE_DEBUG: '0'
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PASSWORD: tralala
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_PROVIDER: http://eth:8545
      TASKS_TRANSFER_CALLBACKS: ''
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-eth:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
  cic-eth-tasker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-eth
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n./start_tasker.sh\
      \ --aux-all -q cic-eth  -vv\n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      BANCOR_DIR: /usr/local/share/cic/bancor
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_DEBUG: '1'
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_DEFAULT_TOKEN_SYMBOL: GFT
      CIC_REGISTRY_ADDRESS: ''
      DATABASE_DEBUG: '0'
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PASSWORD: tralala
      DATABASE_POOL_SIZE: 0
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_ABI_DIR: /usr/local/share/cic/solidity/abi
      ETH_ACCOUNT_ACCOUNTS_INDEX_WRITER: '0xACB0BC74E1686D62dE7DC6414C999EA60C09F0eA'
      ETH_GAS_PROVIDER_ADDRESS: ''
      ETH_PROVIDER: http://eth:8545
      PGPASSWORD: tralala
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SIGNER_SECRET: deadbeef
      SIGNER_SOCKET_PATH: ipc:///run/crypto-dev-signer/jsonrpc.ipc
      TASKS_TRACE_QUEUE_STATUS: '1'
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-eth:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
    - signer-data:/tmp/cic/signer:rw
  cic-eth-tracker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-eth
      dockerfile: docker/Dockerfile
    command:
    - /bin/bash
    - -c
    - "if [[ -f /tmp/cic/config/.env ]]; then source /tmp/cic/config/.env; fi \n./start_tracker.sh\
      \ -vv -c /usr/local/etc/cic-eth\n"
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_REGISTRY_ADDRESS: ''
      DATABASE_DEBUG: '0'
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PASSWORD: tralala
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      ETH_PROVIDER: http://eth:8545
      TASKS_TRANSFER_CALLBACKS: ''
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-eth:latest
    volumes:
    - contract-config:/tmp/cic/config:ro
  cic-meta-server:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-meta
      dockerfile: docker/Dockerfile
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-meta-http.entrypoints: http
        traefik.http.routers.cic-net-meta-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-meta-http.rule: Host(`meta.localhost`)
        traefik.http.routers.cic-net-meta-https.entrypoints: https
        traefik.http.routers.cic-net-meta-https.rule: Host(`meta.localhost`)
        traefik.http.routers.cic-net-meta-https.tls: "true"
        traefik.http.routers.cic-net-meta-https.tls.certresolver: le
        traefik.http.services.cic-net-meta.loadbalancer.server.port: '80'
    environment:
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_SCHEMA_SQL_PATH: ''
      DATABASE_USER: postgres
      PGP_EXPORTS_DIR: /root/tests/
      PGP_PASSPHRASE: merman
      PGP_PRIVATEKEY_FILE: privatekeys.asc
      PGP_PUBLICKEY_ACTIVE_FILE: publickeys.asc
      PGP_PUBLICKEY_ENCRYPT_FILE: publickeys.asc
      PGP_PUBLICKEY_TRUSTED_FILE: publickeys.asc
      SCHEMA_SQL_PATH: scripts/initdb/server.postgres.sql
      SERVER_HOST: localhost
      SERVER_PORT: 8000
    hostname: meta
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-meta:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-meta-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-meta.loadbalancer.server.port: '63380'
    ports:
    - target: 8000
    - published: 63380
      target: 8000
    volumes:
    - /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/contract-migration/testdata/pgp:/tmp/cic/pgp:rw
  cic-notify-tasker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-notify
      dockerfile: docker/Dockerfile
    command: /root/start_tasker.sh -q cic-notify -vv
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      AFRICASTALKING_API_KEY: ''
      AFRICASTALKING_API_SENDER_ID: ''
      AFRICASTALKING_API_USERNAME: ''
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_notify
      DATABASE_PASSWORD: tralala
      DATABASE_POOL_SIZE: 0
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      PGPASSWORD: tralala
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-notify:latest
  cic-user-server:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-ussd
      dockerfile: docker/Dockerfile
    command: /root/start_cic_user_server.sh -vv
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-user-http.entrypoints: http
        traefik.http.routers.cic-net-user-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-user-http.rule: Host(`user.localhost`)
        traefik.http.routers.cic-net-user-https.entrypoints: https
        traefik.http.routers.cic-net-user-https.rule: Host(`user.localhost`)
        traefik.http.routers.cic-net-user-https.tls: "true"
        traefik.http.routers.cic-net-user-https.tls.certresolver: le
        traefik.http.services.cic-net-user.loadbalancer.server.port: '80'
    environment:
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_ussd
      DATABASE_PASSWORD: tralala
      DATABASE_POOL_SIZE: 0
      DATABASE_PORT: 5432
      DATABASE_USER: grassroots
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-ussd:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-user-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-user.loadbalancer.server.port: '63415'
    ports:
    - target: 9500
    - published: 63415
      target: 9500
  cic-user-tasker:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-ussd
      dockerfile: docker/Dockerfile
    command: /root/start_cic_user_tasker.sh -q cic-ussd -vv
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_META_URL: http://meta:8000
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_ussd
      DATABASE_PASSWORD: tralala
      DATABASE_POOL_SIZE: 0
      DATABASE_PORT: 5432
      DATABASE_USER: grassroots
      PGP_PASSPHRASE: merman
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-ussd:latest
    volumes:
    - /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/contract-migration/testdata/pgp:/usr/src/secrets:rw
  cic-user-ussd-server:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-ussd
      dockerfile: docker/Dockerfile
    command: /root/start_cic_user_ussd_server.sh -vv
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-ussd-http.entrypoints: http
        traefik.http.routers.cic-net-ussd-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-ussd-http.rule: Host(`ussd.localhost`)
        traefik.http.routers.cic-net-ussd-https.entrypoints: https
        traefik.http.routers.cic-net-ussd-https.rule: Host(`ussd.localhost`)
        traefik.http.routers.cic-net-ussd-https.tls: "true"
        traefik.http.routers.cic-net-ussd-https.tls.certresolver: le
        traefik.http.services.cic-net-ussd.loadbalancer.server.port: '80'
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_META_URL: http://meta:8000
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_ussd
      DATABASE_PASSWORD: tralala
      DATABASE_PORT: 5432
      DATABASE_USER: grassroots
      PGP_PASSPHRASE: merman
      SERVER_PORT: 9000
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cic-ussd:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-ussd-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-ussd.loadbalancer.server.port: '63315'
    ports:
    - target: 9000
    - published: 63315
      target: 9000
    volumes:
    - /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/contract-migration/testdata/pgp:/usr/src/secrets:rw
  cicada:
    build:
      args:
        BUILD_ENV: dev
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/cic-staff-client
    deploy:
      labels:
        traefik.constraint-label-stack: cic.net
        traefik.enable: "true"
        traefik.http.routers.cic-net-cicada-http.rule: PathPrefix(`/`)
        traefik.http.services.cic-net-cicada.loadbalancer.server.port: '80'
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/cicada:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-frontend-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-frontend.loadbalancer.server.port: '80'
  contract-migration:
    build:
      args:
        pip_extra_args: ''
        pip_index_url: https://pypi.org/simple
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/contract-migration
      dockerfile: docker/Dockerfile
    command:
    - ./run_job.sh
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      CIC_DATA_DIR: /tmp/cic/config
      CIC_DEFAULT_TOKEN_SYMBOL: ''
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DEV_ETH_GAS_PRICE: '1'
      DEV_FAUCET_AMOUNT: '0'
      DEV_USE_DOCKER_WAIT_SCRIPT: 1
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      ETH_PROVIDER_HOST: eth
      ETH_PROVIDER_PORT: 8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      RUN_MASK: '0'
      STACK_NAME: cic-net
      TOKEN_DECIMALS: ''
      TOKEN_DEMURRAGE_LEVEL: '196454828847045000000000000000000'
      TOKEN_NAME: ''
      TOKEN_REDISTRIBUTION_PERIOD: ''
      TOKEN_SINK_ADDRESS: ''
      TOKEN_SUPPLY_LIMIT: ''
      TOKEN_TYPE: ''
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/contract-migration:latest
    volumes:
    - contract-config:/tmp/cic/config:rw
  data-seeding:
    build:
      args:
        pip_extra_args: ''
        pip_index_url: https://pypi.org/simple
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/data-seeding
      dockerfile: docker/Dockerfile
    command:
    - bash
    - ./scripts/run_job.sh
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_DATA_DIR: /tmp/cic/config
      CIC_REGISTRY_ADDRESS: ''
      DEV_USE_DOCKER_WAIT_SCRIPT: 1
      ETH_PROVIDER: http://eth:8545
      ETH_PROVIDER_HOST: eth
      ETH_PROVIDER_PORT: 8545
      KEYSTORE_FILE_PATH: /root/keystore/UTC--2021-01-08T17-18-44.521011372Z--eb3907ecad74a0013c259d5874ae7f22dcbcc95c
      NUMBER_OF_USERS: 10
      OUT_DIR: out
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      RUN_MASK: '0'
      TOKEN_SYMBOL: GFT
      USER_USSD_HOST: cic-user-ussd-server
      USER_USSD_PORT: 9000
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/data-seeding:latest
    volumes:
    - contract-config:/tmp/cic/config:rw
  eth:
    build:
      context: /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/bloxbergValidatorSetup
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: registry.gitlab.com/grassrootseconomics/cic-internal-integration/bloxberg-node:latest
    labels:
      traefik.constraint-label-stack: cic.net
      traefik.enable: "true"
      traefik.http.routers.cic-net-bloxberg-http.rule: PathPrefix(`/`)
      traefik.http.services.cic-net-bloxberg.loadbalancer.server.port: '8545'
    ports:
    - target: 8545
    - published: 63545
      target: 8545
    - target: 8546
    - published: 63546
      target: 8546
    - target: 30303
    restart: unless-stopped
    volumes:
    - bloxberg-data:/root/.local/share/io.parity.ethereum:rw
    - /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/apps/bloxbergValidatorSetup/keys:/root/keys:rw
  flower:
    command:
    - celery
    - --broker=redis://redis:6379
    - flower
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-flower-http.entrypoints: http
        traefik.http.routers.cic-net-flower-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-flower-http.rule: Host(`flower.localhost`)
        traefik.http.routers.cic-net-flower-https.entrypoints: https
        traefik.http.routers.cic-net-flower-https.rule: Host(`flower.localhost`)
        traefik.http.routers.cic-net-flower-https.tls: "true"
        traefik.http.routers.cic-net-flower-https.tls.certresolver: le
        traefik.http.services.cic-net-flower.loadbalancer.server.port: '5555'
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: mher/flower
    networks:
      default: {}
      traefik-public: {}
    ports:
    - published: 5555
      target: 5555
  pgadmin:
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.routers.cic-net-pgadmin-http.entrypoints: http
        traefik.http.routers.cic-net-pgadmin-http.middlewares: cic-net-https-redirect
        traefik.http.routers.cic-net-pgadmin-http.rule: Host(`pgadmin.localhost`)
        traefik.http.routers.cic-net-pgadmin-https.entrypoints: https
        traefik.http.routers.cic-net-pgadmin-https.rule: Host(`pgadmin.localhost`)
        traefik.http.routers.cic-net-pgadmin-https.tls: "true"
        traefik.http.routers.cic-net-pgadmin-https.tls.certresolver: le
        traefik.http.services.cic-net-pgadmin.loadbalancer.server.port: '5050'
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: dpage/pgadmin4
    networks:
      default: {}
      traefik-public: {}
    ports:
    - published: 5050
      target: 5050
  postgres:
    command:
    - -c
    - max_connections=200
    deploy:
      placement:
        constraints:
        - node.labels.cic-net.app-db-data == true
        - node.role==manager
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      POSTGRES_HOST_AUTH_METHOD: trust
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: postgres:12.5-alpine
    ports:
    - target: 5432
    - published: 63432
      target: 5432
    volumes:
    - /Users/blairvanderlugt/projects/GrassrootsEconomics/services/cic-internal-integration/scripts/initdb/create_db.sql:/docker-entrypoint-initdb.d/1-create_all_db.sql:rw
    - postgres-db:/var/lib/postgresql/data:rw
  proxy:
    command:
    - --providers.docker
    - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `cic.net`)
    - --providers.docker.exposedbydefault=false
    - --accesslog
    - --log
    - --api
    - --api.insecure=true
    deploy:
      labels:
        traefik.constraint-label: traefik-public
        traefik.docker.network: traefik-public
        traefik.enable: "true"
        traefik.http.middlewares.cic-net-https-redirect.redirectscheme.permanent: "true"
        traefik.http.middlewares.cic-net-https-redirect.redirectscheme.scheme: https
        traefik.http.middlewares.cic-net-www-redirect.redirectregex.regex: ^https?://(www.)?(localhost)/(.*)
        traefik.http.middlewares.cic-net-www-redirect.redirectregex.replacement: https://localhost/$${3}
        traefik.http.routers.cic-net-proxy-http.entrypoints: http
        traefik.http.routers.cic-net-proxy-http.middlewares: cic-net-www-redirect,cic-net-https-redirect
        traefik.http.routers.cic-net-proxy-http.rule: Host(`localhost`) || Host(`www.localhost`)
        traefik.http.routers.cic-net-proxy-https.entrypoints: https
        traefik.http.routers.cic-net-proxy-https.middlewares: cic-net-www-redirect
        traefik.http.routers.cic-net-proxy-https.rule: Host(`localhost`) || Host(`www.localhost`)
        traefik.http.routers.cic-net-proxy-https.tls: "true"
        traefik.http.routers.cic-net-proxy-https.tls.certresolver: le
        traefik.http.services.cic-net-proxy.loadbalancer.server.port: '80'
      placement:
        constraints:
        - node.role == manager
    image: traefik:v2.2
    labels:
      traefik.enable: "true"
      traefik.http.routers.cic-net-traefik-public-http.rule: Host(`localhost`)
      traefik.http.services.cic-net-traefik-public.loadbalancer.server.port: '80'
    networks:
      default: {}
      traefik-public: {}
    ports:
    - published: 80
      target: 80
    - published: 8090
      target: 8080
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:rw
  redis:
    command: --loglevel verbose
    environment:
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_URL: redis://redis:6379
      CIC_CHAIN_SPEC: evm:bloxberg:8996
      DATABASE_DRIVER: psycopg2
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres
      DATABASE_NAME: cic_eth
      DATABASE_PORT: '5432'
      DATABASE_USER: postgres
      DOMAIN: localhost
      ETH_PROVIDER: http://eth:8545
      FLOWER_BASIC_AUTH: admin:changethis
      PGADMIN_DEFAULT_EMAIL: admin@cic.net
      PGADMIN_DEFAULT_PASSWORD: changethis
      PGADMIN_LISTEN_PORT: '5050'
      REDIS_DB: '0'
      REDIS_HOST: redis
      REDIS_PORT: '6379'
      STACK_NAME: cic-net
      TRAEFIK_PUBLIC_NETWORK: traefik-public
      TRAEFIK_PUBLIC_TAG: traefik-public
      TRAEFIK_TAG: cic.net
    image: redis:6.0.9-alpine
    ports:
    - target: 6379
    - published: 63379
      target: 6379
version: '3.9'
volumes:
  bee-data: {}
  bloxberg-data: {}
  contract-config: {}
  ganache-db: {}
  postgres-db: {}
  signer-data: {}

