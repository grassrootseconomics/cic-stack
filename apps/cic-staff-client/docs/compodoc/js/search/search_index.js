var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccountDetails.html",[0,0.973,1,2.085]],["body/interfaces/AccountDetails.html",[0,1.796,1,3.532,2,1.571,3,0.093,4,0.073,5,0.053,6,2.474,7,0.926,8,1.926,9,2.684,10,0.327,11,0.907,12,1.277,13,5.486,14,4.577,15,5.129,16,4.941,17,4.705,18,4.941,19,4.272,20,4.967,21,0.74,22,3.831,23,1.711,24,0.011,25,2.67,26,2.122,27,1.205,28,3.152,29,3.713,30,3.972,31,3.975,32,5.486,33,3.972,34,3.972,35,3.713,36,3.713,37,3.972,38,2.297,39,3.713,40,3.713,41,3.713,42,3.498,43,3.498,44,2.128,45,3.713,46,2.809,47,3.314,48,1.752,49,3.713,50,3.713,51,3.713,52,4.55,53,3.713,54,3.152,55,3.815,56,2.229,57,2.965,58,2.229,59,2.128,60,1.52,61,3.152,62,2.229,63,2.88,64,2.136,65,2.229,66,3.152,67,2.998,68,2.809,69,2.474,70,2.128,71,3.498,72,1.954,73,0.952,74,0.876,75,3.314,76,2.474,77,2.017,78,2.474,79,3.498,80,2.655,81,2.626,82,2.626,83,0.852,84,0.093,85,0.005,86,0.007,87,0.005]],["title/classes/AccountIndex.html",[88,0.081,89,3.374]],["body/classes/AccountIndex.html",[0,0.696,3,0.074,4,0.058,5,0.042,7,1.587,8,2.05,10,0.259,11,0.767,12,0.996,21,0.61,23,1.596,24,0.011,26,2.199,29,4.199,74,1.4,77,1.134,80,4.019,84,0.074,85,0.004,86,0.006,87,0.004,88,0.058,89,3.633,90,1.492,91,2.414,92,2.01,93,4.199,94,5.59,95,4.988,96,3.999,97,3.999,98,7.387,99,2.665,100,1.774,101,4.868,102,6.026,103,6.582,104,0.701,105,3.469,106,2.872,107,4.556,108,4.556,109,4.556,110,6.865,111,0.589,112,3.999,113,0.935,114,4.556,115,1.468,116,3.556,117,4.698,118,1.087,119,0.679,120,5.209,121,3.587,122,2.414,123,3.028,124,3.028,125,4.556,126,3.028,127,4.556,128,3.999,129,3.633,130,2.802,131,5.844,132,3.999,133,4.556,134,5.844,135,6.434,136,3.028,137,1.163,138,2.361,139,2.562,140,2.958,141,3.999,142,4.556,143,3.028,144,2.802,145,4.199,146,3.359,147,3.359,148,2.417,149,3.999,150,3.633,151,3.028,152,3.633,153,3.028,154,4.556,155,3.028,156,3.359,157,4.556,158,5.477,159,1.637,160,2.883,161,4.556,162,4.556,163,3.028,164,5.473,165,0.274,166,3.402,167,1.553,168,0.822,169,1.772,170,2.087,171,1.248,172,1.492,173,2.414,174,3.14,175,2.414,176,2.658,177,2.414,178,2.087,179,1.966,180,2.658,181,2.3,182,3.999,183,2.658,184,0.822,185,2.658,186,4.808,187,2.658,188,4.556,189,3.028,190,2.417,191,3.028,192,3.028,193,3.028,194,3.028,195,4.808,196,3.028,197,5.477,198,1.492,199,3.028,200,3.028,201,2.658]],["title/components/AccountSearchComponent.html",[202,0.594,203,1.324]],["body/components/AccountSearchComponent.html",[3,0.075,4,0.058,5,0.042,8,1.883,10,0.263,11,0.774,12,0.501,21,0.667,24,0.011,26,1.664,27,0.685,48,1.555,73,1.786,84,0.075,85,0.004,86,0.006,87,0.004,88,0.058,94,3.979,100,0.832,104,0.708,106,2.648,111,0.893,113,1.056,115,0.987,118,0.547,119,0.732,121,2.799,137,0.888,138,2.221,139,2.356,148,3.58,159,1.585,165,0.358,171,1.263,172,1.51,184,1.248,190,2.312,202,0.774,203,1.918,204,1.618,205,1.079,206,1.222,207,1.079,208,0.987,209,7.302,210,6.132,211,2.69,212,1.284,213,2.351,214,0.905,215,1.834,216,1.834,217,2.764,218,2.988,219,4.846,220,1.834,221,5.516,222,1.834,223,4.597,224,5.516,225,5.516,226,5.516,227,4.066,228,5.516,229,5.516,230,5.516,231,5.516,232,5.516,233,5.516,234,2.613,235,6.129,236,6.129,237,6.129,238,3.388,239,5.516,240,5.516,241,5.516,242,2.443,243,5.083,244,4.397,245,3.822,246,4.597,247,3.064,248,3.064,249,3.064,250,1.056,251,3.064,252,4.928,253,3.064,254,2.329,255,3.064,256,3.064,257,4.038,258,3.064,259,3.064,260,3.064,261,3.064,262,3.064,263,3.064,264,3.064,265,3.064,266,3.064,267,3.064,268,3.064,269,3.064,270,1.222,271,0.307,272,2.259,273,1.638,274,1.51,275,1.571,276,1.112,277,2.259,278,2.259,279,1.541,280,3.064,281,4.066,282,4.066,283,3.064,284,2.69,285,3.064,286,1.989,287,3.064,288,3.064,289,3.064,290,3.064,291,3.064,292,4.597,293,3.064,294,3.064,295,3.064,296,4.597,297,3.064,298,2.457,299,4.597,300,3.979,301,3.665,302,4.035,303,4.597,304,4.597,305,3.665,306,3.064,307,3.064,308,4.597,309,3.064,310,2.457,311,4.476,312,3.979,313,4.597,314,0.832,315,1.525,316,1.481,317,0.856,318,2.225,319,1.112,320,0.987,321,2.002,322,0.959,323,1.112,324,1.112,325,0.959,326,1.112,327,0.987,328,1.112,329,0.959,330,1.112,331,0.959,332,1.112,333,0.959,334,0.704,335,1.112,336,0.987,337,1.668,338,1.047,339,0.987,340,1.112,341,0.959,342,1.112,343,0.959,344,1.112,345,0.959,346,1.112,347,0.987,348,1.668,349,1.047,350,0.959,351,0.959,352,1.112,353,0.987,354,1.668,355,1.047,356,0.987,357,0.744,358,0.959,359,0.987,360,0.959,361,0.959,362,1.112,363,0.959,364,1.112,365,0.959,366,1.112,367,1.016,368,1.079,369,1.112]],["title/components/AccountsComponent.html",[202,0.594,322,1.324]],["body/components/AccountsComponent.html",[1,1.469,3,0.073,4,0.057,5,0.041,8,1.534,10,0.255,11,0.758,12,0.887,14,3.717,19,3.375,21,0.686,23,1.377,24,0.011,26,1.642,27,0.666,48,1.484,73,1.621,84,0.132,85,0.004,86,0.006,87,0.004,88,0.057,94,5.195,100,0.81,104,0.693,106,2.403,111,0.875,113,1.045,115,0.96,118,0.968,119,0.848,137,0.988,138,1.947,160,3.219,165,0.387,171,1.229,172,1.469,184,0.81,190,2.285,202,0.762,203,0.933,204,1.585,205,1.05,206,1.189,207,1.05,208,0.96,212,1.257,213,2.577,214,0.881,215,1.796,216,1.796,217,2.757,218,2.979,219,3.717,220,1.796,222,1.796,234,2.577,244,4.196,245,3.786,250,1.677,254,0.881,270,1.189,271,0.298,274,1.469,275,1.528,276,1.082,277,2.198,278,2.198,279,1.688,286,1.935,298,2.406,300,1.935,302,2.617,310,2.406,311,3.924,314,0.81,315,1.493,316,1.45,317,0.833,318,2.194,319,1.082,320,0.96,321,1.969,322,1.892,323,1.082,324,1.082,325,0.933,326,1.082,327,0.96,328,1.082,329,0.933,330,1.082,331,0.933,332,1.082,333,0.933,334,1.247,335,1.082,336,0.96,337,1.634,338,1.019,339,0.96,340,1.082,341,0.933,342,1.082,343,0.933,344,1.082,345,0.933,346,1.082,347,0.96,348,1.634,349,1.019,350,0.933,351,0.933,352,1.082,353,0.96,354,1.634,355,1.019,356,0.96,357,0.724,358,0.933,359,0.96,360,0.933,361,0.933,362,1.082,363,0.933,364,1.082,365,0.933,366,1.082,367,0.989,368,1.05,369,1.082,370,2.617,371,5.425,372,4.502,373,5.425,374,3.739,375,3.739,376,4.762,377,4.326,378,4.762,379,3.739,380,3.739,381,5.174,382,3.103,383,4.166,384,6.045,385,6.045,386,4.502,387,2.617,388,2.737,389,4.357,390,4.502,391,3.103,392,2.981,393,2.981,394,2.981,395,2.981,396,2.981,397,4.502,398,2.981,399,2.981,400,2.981,401,2.981,402,3.739,403,2.981,404,4.456,405,2.981,406,4.819,407,2.981,408,3.59,409,3.952,410,2.981,411,3.739,412,2.923,413,3.103,414,2.981,415,3.739,416,3.103,417,2.981,418,2.054,419,1.528,420,1.593,421,1.593,422,1.833,423,1.744,424,1.528,425,1.665,426,2.198,427,2.054,428,1.833,429,2.981,430,1.744,431,2.981,432,2.198,433,2.617,434,1.833,435,4.502,436,2.198,437,2.981,438,3.999,439,3.103,440,2.198,441,2.054,442,4.502,443,2.054,444,2.377,445,1.833,446,1.935,447,2.617,448,2.198,449,1.685,450,2.377,451,2.377,452,2.198,453,2.054,454,2.981,455,4.502,456,4.502,457,2.981,458,2.981,459,2.981,460,2.981,461,3.952,462,4.456,463,3.103,464,4.502,465,4.502,466,4.502,467,3.319,468,4.502,469,2.923,470,4.502]],["title/modules/AccountsModule.html",[471,1.117,472,3.119]],["body/modules/AccountsModule.html",[3,0.117,4,0.091,5,0.066,8,1.133,24,0.011,83,1.071,84,0.117,85,0.006,86,0.008,87,0.006,88,0.091,165,0.443,168,1.711,203,2.495,210,3.533,271,0.48,273,2.561,314,1.302,320,2.569,322,2.495,331,2.495,419,2.457,420,2.561,421,2.561,471,1.266,472,6.449,473,1.74,474,2.361,475,3.762,476,2.457,477,2.561,478,4.207,479,4.207,480,4.207,481,5.495,482,3.929,483,5.495,484,3.367,485,2.561,486,2.273,487,4.793,488,2.597,489,3.686,490,2.676,491,4.793,492,2.804,493,4.207,494,2.804,495,4.207,496,3.821,497,3.303,498,4.207,499,3.533,500,4.207,501,4.091,502,4.342,503,4.645,504,3.533,505,4.342,506,3.875,507,2.947,508,4.091,509,3.111,510,2.804,511,3.875,512,2.947,513,3.875,514,2.947,515,4.091,516,3.111,517,4.342,518,3.303,519,4.793,520,6.301,521,4.793,522,4.342,523,3.111,524,6.301,525,4.793,526,4.793,527,5.024,528,4.207,529,5.531,530,3.821,531,3.303]],["title/modules/AccountsRoutingModule.html",[471,1.117,481,2.916]],["body/modules/AccountsRoutingModule.html",[3,0.145,4,0.113,5,0.082,24,0.011,67,2.616,74,1.363,83,1.325,84,0.145,85,0.007,86,0.009,87,0.007,88,0.113,115,1.91,165,0.422,168,1.61,202,1.135,203,2.256,210,4.37,219,3.646,271,0.593,276,2.152,320,2.322,322,2.256,331,2.256,473,2.152,481,4.968,488,2.972,493,5.204,495,6.328,496,4.727,497,4.086,498,5.204,499,4.37,500,5.204,528,5.204,532,5.929,533,3.468,534,3.684,535,4.025,536,4.845,537,4.086,538,4.086,539,3.849,540,3.646]],["title/interfaces/Action.html",[0,0.973,541,2.602]],["body/interfaces/Action.html",[0,1.637,2,2.397,3,0.142,4,0.111,5,0.08,7,1.413,10,0.498,11,1.199,21,0.706,23,1.678,24,0.011,25,2.743,26,2.092,64,1.987,67,3.699,83,1.3,84,0.142,85,0.007,86,0.009,87,0.007,254,2.276,449,2.667,541,5.456,542,5.104,543,5.777,544,5.442,545,7.124,546,7.124,547,4.625,548,3.978,549,7.124]],["title/classes/ActivatedRouteStub.html",[88,0.081,550,3.374]],["body/classes/ActivatedRouteStub.html",[3,0.128,4,0.1,5,0.073,7,1.278,10,0.451,11,1.126,12,1.093,21,0.573,24,0.011,48,1.777,73,1.671,84,0.128,85,0.006,86,0.008,87,0.006,88,0.1,90,2.591,104,1.03,111,1.022,113,0.988,118,1.193,119,0.746,122,5.334,137,0.762,165,0.335,184,1.998,250,1.538,276,1.908,279,2.055,550,5.334,551,7.02,552,4.678,553,2.936,554,6.691,555,5.873,556,6.691,557,8.694,558,3.793,559,5.424,560,7.745,561,5.873,562,5.334,563,4.531,564,7.359,565,5.867,566,6.691,567,8.408,568,6.691,569,5.258,570,6.691,571,5.258,572,5.334,573,7.745,574,6.691,575,5.258,576,4.611,577,6.691,578,5.258,579,2.404,580,4.616,581,4.616,582,5.873,583,5.258,584,5.258,585,5.258,586,5.258]],["title/components/AdminComponent.html",[202,0.594,325,1.324]],["body/components/AdminComponent.html",[3,0.076,4,0.059,5,0.043,8,1.1,10,0.267,11,0.784,12,1.134,21,0.669,23,1.285,24,0.011,25,1.591,27,0.697,48,1.012,65,2.723,73,0.779,77,1.167,84,0.136,85,0.004,86,0.006,87,0.004,88,0.059,100,0.846,104,0.717,106,1.962,111,0.606,113,1.03,115,1.004,118,1.238,119,0.891,137,1.041,138,1.5,159,1.281,160,2.727,165,0.378,184,0.846,190,1.097,198,1.536,202,0.782,203,0.975,204,1.639,205,1.097,206,1.243,207,1.097,208,1.004,212,1.3,213,2.375,214,0.921,215,1.857,216,1.857,217,2.769,218,2.994,219,2.863,220,1.857,222,1.857,234,2.635,244,4.267,250,1.769,254,1.647,270,1.243,271,0.312,274,1.536,275,1.598,279,0.87,286,2.023,310,2.488,314,0.846,315,1.544,316,1.5,317,0.87,318,2.243,319,1.131,320,1.004,321,2.023,322,0.975,323,1.131,324,1.131,325,1.934,326,1.131,327,1.004,328,1.131,329,0.975,330,1.131,331,0.975,332,1.131,333,0.975,334,0.716,335,1.131,336,1.004,337,1.69,338,1.065,339,1.004,340,1.131,341,0.975,342,1.131,343,0.975,344,1.131,345,0.975,346,1.131,347,1.004,348,1.69,349,1.065,350,0.975,351,0.975,352,1.131,353,1.004,354,1.69,355,1.065,356,1.004,357,0.757,358,0.975,359,1.004,360,0.975,361,0.975,362,1.131,363,0.975,364,1.131,365,0.975,366,1.131,367,1.034,368,1.097,369,1.131,375,3.84,377,4.443,379,3.84,380,3.84,382,3.208,383,4.26,387,2.736,388,2.778,391,3.208,402,3.84,411,3.84,412,3.022,413,3.208,415,3.84,416,3.208,418,2.148,419,1.598,420,1.666,421,1.666,422,1.917,423,1.823,424,1.598,436,2.298,438,2.298,439,2.148,440,2.298,441,2.148,443,3.208,445,2.863,446,3.022,449,2.767,452,2.298,453,2.148,463,3.208,541,5.04,543,3.208,544,4.505,548,3.451,587,2.736,588,5.573,589,4.656,590,4.668,591,4.656,592,3.712,593,4.656,594,4.656,595,4.656,596,4.656,597,3.117,598,4.656,599,3.117,600,4.656,601,3.117,602,3.117,603,3.117,604,4.656,605,3.117,606,3.117,607,3.117,608,3.117,609,3.117,610,3.117,611,6.181,612,6.94,613,3.117,614,3.117,615,3.117,616,2.023,617,4.892,618,3.117,619,3.117,620,2.736,621,3.117,622,3.117,623,3.117,624,3.117,625,4.656,626,3.117,627,3.117,628,4.087,629,3.117,630,3.117,631,2.736,632,3.117,633,3.117,634,3.117,635,3.117,636,3.117,637,3.117,638,3.117,639,1.375,640,5.573,641,3.117,642,3.117,643,3.117,644,2.736,645,2.736,646,3.117,647,3.117,648,4.656,649,3.117,650,3.117,651,4.656,652,3.117,653,6.181,654,6.181,655,6.181,656,6.181,657,4.656,658,2.6,659,4.656,660,2.736,661,2.298,662,3.117]],["title/modules/AdminModule.html",[471,1.117,663,3.119]],["body/modules/AdminModule.html",[3,0.134,4,0.105,5,0.076,24,0.011,83,1.231,84,0.134,85,0.007,86,0.008,87,0.007,88,0.105,165,0.439,168,1.87,271,0.551,314,1.495,325,2.588,419,2.823,420,2.942,421,2.942,471,1.454,473,1.998,474,2.713,475,4.017,476,2.823,477,2.942,482,4.075,484,3.681,485,2.942,486,2.611,488,2.839,489,4.029,490,3.074,492,3.221,494,3.221,501,4.471,502,4.746,505,4.746,506,4.235,507,3.386,508,4.471,509,3.574,510,3.221,511,4.235,512,3.386,513,4.235,514,3.386,515,4.471,516,3.574,522,4.746,523,3.574,663,6.352,664,4.833,665,4.833,666,4.833,667,5.7,668,5.506,669,5.506,670,4.833]],["title/modules/AdminRoutingModule.html",[471,1.117,667,2.916]],["body/modules/AdminRoutingModule.html",[3,0.158,4,0.123,5,0.089,24,0.011,74,1.484,83,1.443,84,0.158,85,0.008,86,0.009,87,0.008,88,0.123,165,0.403,168,1.753,202,0.906,271,0.646,276,2.343,325,2.374,473,2.343,488,3.127,533,3.777,534,3.821,535,4.236,536,3.777,540,3.97,667,5.228,670,5.667,671,6.456]],["title/components/AppComponent.html",[202,0.594,327,1.363]],["body/components/AppComponent.html",[3,0.087,4,0.068,5,0.049,8,1.215,10,0.306,11,0.865,12,0.84,21,0.599,23,0.693,24,0.011,25,1.219,26,1.791,27,0.797,48,1.434,54,3.007,60,1.423,73,1.647,74,1.673,77,1.924,84,0.087,85,0.004,86,0.006,87,0.004,88,0.068,100,0.969,104,0.791,106,2.461,111,0.999,113,0.998,115,1.149,118,0.917,119,0.779,137,0.744,138,2.124,147,2.63,165,0.33,184,0.969,190,2.563,202,0.846,203,1.116,204,1.81,205,1.256,206,1.423,207,1.256,208,1.149,212,1.436,213,2.569,214,1.054,215,2.051,216,2.051,217,2.804,218,3.038,220,2.051,222,2.051,234,2.811,250,1.181,270,1.423,271,0.357,275,1.829,279,1.952,298,2.747,314,0.969,315,1.705,316,1.656,317,0.996,318,2.393,319,1.295,320,1.149,321,2.187,322,1.116,323,1.295,324,1.295,325,1.116,326,1.295,327,2.124,328,1.295,329,1.116,330,1.295,331,1.116,332,1.295,333,1.116,334,1.181,335,1.295,336,1.149,337,1.866,338,1.219,339,1.149,340,1.295,341,1.116,342,1.295,343,1.116,344,1.295,345,1.116,346,1.295,347,1.149,348,1.866,349,1.219,350,1.116,351,1.116,352,1.295,353,1.149,354,1.866,355,1.219,356,1.149,357,1.249,358,1.116,359,1.149,360,1.116,361,1.116,362,1.295,363,1.116,364,1.295,365,1.116,366,1.295,367,1.183,368,1.256,369,1.295,388,2.899,424,1.829,427,3.542,428,2.194,432,2.63,434,3.161,661,3.789,672,3.131,673,2.438,674,6.026,675,5.14,676,5.29,677,5.29,678,5.29,679,6.026,680,5.14,681,4.512,682,5.14,683,5.14,684,2.844,685,4.477,686,4.614,687,4.614,688,7.504,689,5.14,690,5.14,691,4.055,692,3.567,693,6.594,694,3.567,695,3.567,696,3.567,697,3.567,698,5.14,699,3.567,700,2.316,701,5.14,702,4.512,703,4.512,704,3.567,705,3.161,706,3.567,707,4.153,708,3.567,709,3.131,710,3.131,711,2.844,712,2.316,713,3.567,714,3.567,715,3.567,716,2.844,717,2.63,718,2.458,719,3.567,720,3.567,721,3.567,722,2.844,723,3.131,724,2.316,725,3.567,726,3.567,727,3.131,728,3.567,729,2.316,730,2.844,731,3.567,732,3.567,733,3.567,734,3.131,735,3.567,736,3.567,737,3.567,738,3.131,739,3.567,740,2.194,741,4.153,742,2.844,743,2.458,744,2.844,745,2.844,746,2.844,747,3.131,748,3.131,749,3.567,750,4.512,751,3.131,752,4.512,753,3.131,754,3.567,755,3.567,756,3.567,757,3.567,758,5.14,759,3.567,760,3.567,761,3.567,762,1.906,763,3.567]],["title/modules/AppModule.html",[471,1.117,764,3.119]],["body/modules/AppModule.html",[3,0.116,4,0.091,5,0.066,24,0.011,83,1.067,84,0.116,85,0.006,86,0.008,87,0.006,88,0.091,139,2.401,148,2.106,165,0.434,168,1.707,171,1.968,172,2.352,271,0.478,274,2.352,314,1.296,327,2.75,419,2.447,471,1.261,473,1.733,474,2.352,475,3.755,476,3.602,477,3.755,482,3.925,484,3.359,485,2.551,486,2.264,488,2.591,492,2.793,494,2.793,501,4.08,711,3.806,712,3.099,764,6.463,765,4.19,766,4.19,767,4.19,768,4.19,769,4.19,770,5.489,771,5.489,772,5.272,773,5.489,774,5.489,775,4.774,776,6.285,777,5.011,778,2.666,779,5.011,780,4.774,781,4.774,782,6.285,783,4.774,784,5.953,785,6.285,786,2.551,787,4.633,788,4.331,789,4.19,790,4.774,791,3.806,792,3.806,793,4.774,794,5.011,795,3.806,796,4.774,797,4.774,798,4.774,799,4.774,800,4.19,801,4.774,802,4.774,803,4.774,804,4.774,805,4.774,806,4.774,807,4.774,808,4.774,809,5.504,810,5.953,811,5.602]],["title/modules/AppRoutingModule.html",[471,1.117,770,2.916]],["body/modules/AppRoutingModule.html",[3,0.148,4,0.116,5,0.084,24,0.011,74,1.397,83,1.359,84,0.148,85,0.007,86,0.009,87,0.007,88,0.116,139,2.076,165,0.393,168,1.65,271,0.608,276,2.206,473,2.206,488,3.016,533,3.555,534,3.724,535,4.086,536,4.593,537,4.188,538,4.188,539,3.945,770,5.043,788,5.043,789,5.335,812,6.078,813,7.318,814,4.48,815,6.424,816,6.078,817,6.078,818,6.078,819,6.078,820,4.846,821,6.078,822,6.078,823,6.078]],["title/components/AuthComponent.html",[202,0.594,329,1.324]],["body/components/AuthComponent.html",[3,0.086,4,0.067,5,0.049,8,1.203,10,0.302,11,0.857,12,0.832,21,0.621,23,0.684,24,0.011,27,0.787,48,1.3,60,1.404,73,1.494,74,1.506,84,0.086,85,0.004,86,0.006,87,0.004,88,0.067,100,0.956,104,0.784,106,2.745,111,0.989,113,1.023,115,1.134,118,0.908,119,0.775,137,1.007,138,2.334,139,1.739,148,3.068,159,1.17,165,0.374,184,1.382,190,1.792,202,0.84,203,1.101,204,1.792,205,1.239,206,1.404,207,1.239,208,1.134,212,1.422,213,2.549,214,1.04,215,2.03,216,2.03,217,2.801,218,3.033,220,2.03,222,2.03,227,4.408,234,2.793,238,3.752,243,5.509,245,3.994,250,1.506,252,4.121,254,1.936,257,4.275,270,1.404,271,0.352,272,2.594,273,1.881,274,1.734,275,1.804,276,1.277,279,2.303,281,2.594,282,2.594,312,3.304,314,0.956,315,1.688,316,1.926,317,0.983,318,2.378,319,1.277,320,1.134,321,2.17,322,1.101,323,1.277,324,1.277,325,1.101,326,1.277,327,1.134,328,1.277,329,2.05,330,1.277,331,1.101,332,1.277,333,1.101,334,0.809,335,1.277,336,1.134,337,1.847,338,1.202,339,1.134,340,1.277,341,1.101,342,1.277,343,1.101,344,1.277,345,1.101,346,1.277,347,1.134,348,1.847,349,1.202,350,1.101,351,1.101,352,1.277,353,1.134,354,1.847,355,1.202,356,1.134,357,0.855,358,1.101,359,1.134,360,1.101,361,1.101,362,1.277,363,1.101,364,1.277,365,1.101,366,1.277,367,1.167,368,1.239,369,1.277,388,1.359,427,2.425,432,2.594,562,5.224,617,4.468,684,2.806,685,4.456,687,4.595,707,3.508,722,2.806,741,3.508,814,3.752,824,3.089,825,5.98,826,5.09,827,5.98,828,5.249,829,4.768,830,6.361,831,5.224,832,6.553,833,5.09,834,5.98,835,5.09,836,3.519,837,3.519,838,3.519,839,3.519,840,5.09,841,3.519,842,3.519,843,3.519,844,3.519,845,3.519,846,3.519,847,3.089,848,3.089,849,1.804,850,3.519,851,3.88,852,3.519,853,3.519,854,3.519,855,2.806,856,3.519,857,5.09,858,3.519,859,5.09,860,3.519,861,3.519,862,2.284,863,3.519,864,3.519,865,3.519,866,3.519,867,3.519,868,3.519,869,3.519,870,3.519,871,3.13,872,5.09,873,2.594,874,3.304,875,5.09]],["title/guards/AuthGuard.html",[788,2.916,876,2.602]],["body/guards/AuthGuard.html",[3,0.115,4,0.09,5,0.065,7,1.695,10,0.403,12,1.017,21,0.533,24,0.011,25,2.127,31,3.642,38,2.654,57,2.953,84,0.115,85,0.006,86,0.008,87,0.006,88,0.133,92,2.747,104,0.958,111,0.914,113,0.794,118,1.11,119,0.694,137,1.075,138,2.005,139,2.384,144,3.828,145,4.29,146,4.589,148,2.076,152,4.963,159,1.431,165,0.349,168,1.278,181,2.456,202,0.874,208,2.005,212,1.314,245,4.522,254,1.84,271,0.471,276,1.708,279,2.073,449,2.33,534,2.953,552,4.734,558,3.309,579,2.151,616,5.333,639,2.076,673,2.232,788,4.29,814,5.473,820,6.156,851,3.521,876,4.565,877,3.752,878,4.131,879,4.963,880,5.465,881,4.963,882,5.465,883,3.752,884,4.706,885,5.465,886,2.566,887,5.116,888,4.29,889,3.642,890,4.29,891,3.192,892,4.131,893,6.964,894,6.517,895,4.706,896,5.465,897,6.226,898,4.589,899,4.963,900,3.828,901,5.465,902,4.963,903,6.517,904,4.565,905,5.465,906,5.465,907,6.124,908,4.963,909,6.226,910,1.739,911,2.894,912,2.894,913,2.319,914,4.131,915,4.131]],["title/modules/AuthModule.html",[471,1.117,916,3.119]],["body/modules/AuthModule.html",[3,0.135,4,0.106,5,0.077,24,0.011,83,1.24,84,0.135,85,0.007,86,0.008,87,0.007,88,0.106,165,0.436,168,1.879,271,0.555,273,2.965,314,1.507,329,2.593,365,2.593,471,1.465,473,2.014,474,2.733,475,4.031,476,2.844,477,2.965,482,4.083,484,3.698,485,2.965,486,2.631,488,2.852,489,4.048,490,3.098,492,3.245,494,3.245,506,4.255,507,3.411,511,4.255,512,3.411,513,4.255,514,3.411,517,4.769,518,3.823,522,4.769,523,3.601,527,5.517,916,6.426,917,4.87,918,4.87,919,4.87,920,5.711,921,5.548,922,5.548,923,4.87,924,5.548,925,4.87]],["title/modules/AuthRoutingModule.html",[471,1.117,920,2.916]],["body/modules/AuthRoutingModule.html",[3,0.155,4,0.121,5,0.088,24,0.011,74,1.458,83,1.418,84,0.155,85,0.008,86,0.009,87,0.008,88,0.121,165,0.4,168,1.723,202,0.891,271,0.635,276,2.302,329,2.349,473,2.302,488,3.095,533,3.711,534,3.793,535,4.192,536,4.392,537,4.371,538,4.371,539,4.118,540,3.901,920,5.174,923,5.568,926,6.343]],["title/injectables/AuthService.html",[685,2.602,910,1.182]],["body/injectables/AuthService.html",[0,0.653,3,0.069,4,0.054,5,0.039,7,0.69,10,0.243,11,0.731,12,1.095,21,0.631,23,1.024,24,0.011,25,0.971,27,1.497,48,1.145,59,1.586,60,1.133,73,1.316,74,1.803,77,1.625,84,0.069,85,0.003,86,0.005,87,0.003,88,0.054,104,0.668,106,2.729,111,0.844,113,1.06,118,1.195,119,0.747,137,1.168,138,2.554,139,1.8,148,2.324,159,1.88,160,1.915,165,0.388,171,1.171,172,1.4,181,1,184,1.725,190,2.53,198,1.4,250,1.781,271,0.284,279,2.099,334,1.46,388,2.692,425,1.586,427,1.958,428,3.239,430,1.662,432,2.094,433,2.494,486,1.347,547,1.844,558,2.498,559,2.094,576,3.63,579,1.299,658,3.293,660,3.81,673,1.347,685,2.669,687,4.285,722,2.265,738,2.494,743,2.991,786,1.518,795,2.265,814,2.094,830,5.177,847,2.494,848,2.494,849,1.456,851,3.408,862,1.844,871,1.747,873,3.883,882,2.494,910,1.212,913,1.4,914,2.494,927,1.4,928,2.494,929,4.119,930,4.624,931,5.268,932,5.268,933,4.341,934,5.898,935,5.898,936,5.898,937,5.898,938,5.898,939,5.898,940,5.898,941,4.347,942,5.898,943,5.177,944,4.341,945,4.341,946,4.341,947,4.341,948,2.265,949,5.34,950,4.341,951,4.341,952,2.841,953,2.841,954,2.841,955,2.841,956,2.841,957,2.841,958,2.841,959,2.841,960,2.841,961,2.841,962,2.841,963,2.841,964,4.341,965,2.841,966,4.341,967,4.341,968,2.841,969,5.268,970,4.341,971,2.841,972,4.341,973,2.841,974,3.461,975,2.841,976,2.841,977,4.683,978,3.81,979,2.841,980,4.341,981,2.841,982,2.841,983,4.341,984,2.841,985,2.841,986,2.265,987,2.841,988,1.958,989,2.494,990,3.81,991,2.494,992,2.841,993,2.494,994,2.841,995,2.841,996,5.177,997,3.81,998,2.494,999,4.341,1000,4.341,1001,3.81,1002,4.341,1003,2.669,1004,4.341,1005,4.624,1006,4.341,1007,2.841,1008,4.341,1009,2.494,1010,2.841,1011,2.841,1012,2.841,1013,2.494,1014,2.494,1015,2.841,1016,2.841,1017,5.898,1018,3.81,1019,2.841,1020,2.841,1021,2.841,1022,2.841,1023,4.341,1024,2.841,1025,2.841,1026,2.494,1027,2.841,1028,2.841,1029,2.841,1030,4.341,1031,2.841,1032,2.841,1033,4.702,1034,2.841,1035,2.494,1036,2.841,1037,1.958,1038,2.841,1039,4.341,1040,4.341,1041,2.841,1042,2.841,1043,1.958,1044,2.841,1045,2.841,1046,4.341,1047,2.841,1048,4.341,1049,2.494,1050,2.841,1051,2.841,1052,4.341,1053,2.841,1054,2.841,1055,1.586,1056,2.841,1057,2.841,1058,3.81,1059,2.094,1060,3.461,1061,4.341,1062,4.341,1063,2.841,1064,2.841,1065,4.2,1066,2.841,1067,2.841,1068,2.494,1069,2.841,1070,2.841,1071,2.841,1072,2.841,1073,2.841,1074,2.841,1075,2.494,1076,2.841,1077,2.841,1078,2.094,1079,2.841,1080,2.841,1081,2.841,1082,2.841,1083,2.841]],["title/injectables/BlockSyncService.html",[910,1.182,1084,3.119]],["body/injectables/BlockSyncService.html",[3,0.084,4,0.066,5,0.048,10,0.295,11,0.842,12,1.175,21,0.652,23,1.551,24,0.011,26,2.346,48,1.283,72,2.566,73,1.474,74,1.748,77,2.427,84,0.084,85,0.004,86,0.006,87,0.004,88,0.066,100,1.359,104,0.771,106,2.81,111,0.973,113,0.989,118,1.282,119,0.801,121,3.065,137,1.041,138,2.449,159,0.79,165,0.388,169,2.012,170,2.37,171,1.418,172,1.694,179,2.232,184,2.015,190,1.762,250,1.49,271,0.344,279,1.398,298,2.675,300,3.25,357,1.216,388,2.867,423,2.012,424,1.763,425,1.92,445,3.078,446,3.25,563,2.012,673,1.631,677,5.181,678,5.181,686,4.421,712,3.25,717,2.535,849,1.763,910,1.398,913,1.694,927,1.694,941,4.778,1084,3.69,1085,6.914,1086,3.019,1087,5.006,1088,5.006,1089,5.006,1090,5.902,1091,5.902,1092,3.439,1093,5.006,1094,5.006,1095,6.062,1096,5.715,1097,3.439,1098,3.831,1099,5.006,1100,4.697,1101,5.902,1102,3.439,1103,3.439,1104,5.006,1105,5.902,1106,3.439,1107,2.795,1108,3.439,1109,6.482,1110,3.439,1111,3.439,1112,6.482,1113,6.482,1114,6.482,1115,7.604,1116,6.482,1117,6.482,1118,3.439,1119,3.453,1120,3.439,1121,3.439,1122,2.37,1123,2.012,1124,3.439,1125,2.232,1126,2.742,1127,3.439,1128,3.439,1129,3.439,1130,5.902,1131,3.439,1132,3.439,1133,5.006,1134,2.742,1135,3.439,1136,3.439,1137,3.439,1138,5.006,1139,3.439,1140,3.439,1141,3.439,1142,3.439,1143,3.439,1144,3.019,1145,3.019,1146,3.439,1147,5.006,1148,5.006,1149,3.439,1150,5.006,1151,3.439,1152,3.439,1153,5.006,1154,3.439,1155,5.006,1156,5.006,1157,2.742,1158,5.006,1159,3.019,1160,3.439,1161,3.019,1162,3.019,1163,3.439,1164,3.439,1165,3.439,1166,3.439,1167,3.439,1168,3.439,1169,3.439,1170,5.006,1171,3.439,1172,3.439,1173,4.394,1174,5.006,1175,3.439,1176,3.439,1177,3.439,1178,5.006,1179,3.439,1180,3.439,1181,3.439,1182,3.439,1183,3.439,1184,3.439,1185,3.439]],["title/interfaces/Conversion.html",[0,0.973,762,2.261]],["body/interfaces/Conversion.html",[0,1.885,1,3.835,2,1.815,3,0.107,4,0.084,5,0.061,7,1.07,8,1.708,9,1.648,10,0.51,11,1.002,21,0.703,23,1.611,24,0.011,25,2.47,26,2.272,27,1.907,38,3.594,48,0.957,64,2.47,80,2.169,83,0.984,84,0.107,85,0.005,86,0.007,87,0.005,117,2.708,119,0.664,121,3.318,165,0.22,254,1.301,357,2.141,449,1.648,762,4.472,871,4.149,904,2.708,1107,4.672,1186,3.034,1187,5.328,1188,5.328,1189,5.328,1190,4.981,1191,4.981,1192,5.325,1193,5.328,1194,5.328,1195,5.204,1196,5.328,1197,5.328,1198,3.246,1199,4.38,1200,4.149,1201,2.459,1202,3.246,1203,3.034,1204,3.246,1205,2.858,1206,2.858,1207,2.459,1208,3.246,1209,3.246,1210,3.034,1211,3.182]],["title/components/CreateAccountComponent.html",[202,0.594,331,1.324]],["body/components/CreateAccountComponent.html",[3,0.078,4,0.061,5,0.044,8,1.9,10,0.275,11,0.8,12,0.524,15,4.833,17,4.464,19,3.739,21,0.682,24,0.011,25,1.625,26,2.104,27,0.717,28,3.668,44,2.656,48,1.034,67,2.766,73,1.188,84,0.078,85,0.004,86,0.006,87,0.004,88,0.061,94,3.088,100,0.871,104,0.732,106,1.996,111,0.924,113,1.003,115,2.563,118,0.572,119,0.699,137,0.689,138,1.532,139,1.096,148,2.501,159,1.093,160,3.29,165,0.335,184,1.292,190,1.129,202,0.796,203,1.004,204,1.675,205,1.129,206,1.28,207,1.129,208,1.033,212,1.328,213,2.416,214,0.948,215,1.897,216,1.897,217,2.777,218,3.004,220,1.897,222,1.897,227,4.178,234,2.673,238,3.506,242,2.558,243,5.17,244,4.464,250,1.093,252,3.906,254,1.406,257,4.117,270,1.28,271,0.321,272,2.365,273,1.714,274,1.58,275,1.644,279,1.583,281,2.365,282,5.712,284,2.816,286,2.082,300,3.088,310,2.542,311,4.553,312,5.459,314,0.871,315,1.578,316,1.532,317,0.896,318,2.275,319,1.164,320,1.033,321,2.057,322,1.004,323,1.164,324,1.164,325,1.004,326,1.164,327,1.033,328,1.164,329,1.004,330,1.164,331,1.962,332,1.164,333,1.004,334,0.737,335,1.164,336,1.033,337,1.726,338,1.096,339,1.033,340,1.164,341,1.004,342,1.164,343,1.004,344,1.164,345,1.004,346,1.164,347,1.033,348,1.726,349,1.096,350,1.004,351,1.004,352,1.164,353,1.033,354,1.726,355,1.096,356,1.033,357,0.779,358,1.004,359,1.033,360,1.004,361,1.004,362,1.164,363,1.004,364,1.164,365,1.004,366,1.164,367,1.064,368,1.129,369,1.164,374,3.906,423,1.876,424,1.644,443,3.278,444,2.558,445,2.925,446,3.088,447,2.816,461,4.976,462,5.17,499,5.866,829,4.519,831,4.999,855,3.792,1212,6.985,1213,2.816,1214,5.668,1215,4.756,1216,3.906,1217,4.178,1218,5.668,1219,4.178,1220,5.668,1221,5.351,1222,4.756,1223,3.208,1224,3.208,1225,3.208,1226,3.208,1227,3.208,1228,3.208,1229,3.208,1230,3.208,1231,3.208,1232,3.208,1233,3.208,1234,3.208,1235,3.208,1236,5.668,1237,3.208,1238,6.696,1239,3.208,1240,3.208,1241,3.208,1242,3.208,1243,4.756,1244,3.208,1245,3.208,1246,3.208,1247,2.816,1248,3.208,1249,3.208,1250,3.208,1251,3.208,1252,4.07,1253,4.756,1254,3.506,1255,4.756,1256,5.503,1257,5.503,1258,4.756,1259,4.175]],["title/classes/CustomErrorStateMatcher.html",[88,0.081,257,2.602]],["body/classes/CustomErrorStateMatcher.html",[3,0.126,4,0.098,5,0.071,7,1.603,10,0.441,12,0.841,21,0.441,24,0.011,48,1.435,74,1.183,84,0.126,85,0.006,86,0.008,87,0.006,88,0.098,90,2.536,104,1.016,113,0.657,118,0.918,119,0.574,137,0.956,139,2.255,144,4.058,145,4.548,159,1.183,165,0.33,181,2.323,207,2.323,212,1.843,252,4.548,254,2.153,257,4.058,273,2.75,316,2.126,334,1.868,449,2.47,523,3.341,616,4.284,1049,6.745,1098,5.277,1260,5.793,1261,4.517,1262,4.284,1263,4.548,1264,5.793,1265,6.326,1266,6.599,1267,6.599,1268,6.599,1269,5.793,1270,4.548,1271,7.285,1272,6.599,1273,6.599,1274,7.684,1275,7.684,1276,7.684,1277,5.146,1278,4.725,1279,5.602,1280,6.59,1281,6.599,1282,5.793,1283,5.793,1284,6.599,1285,6.599,1286,6.599,1287,5.146,1288,5.146,1289,5.146,1290,5.146]],["title/classes/CustomValidator.html",[88,0.081,1291,3.374]],["body/classes/CustomValidator.html",[3,0.116,4,0.09,5,0.066,7,1.702,10,0.406,12,1.023,21,0.536,23,1.361,24,0.011,48,1.36,64,2.138,74,1.61,84,0.116,85,0.006,86,0.008,87,0.006,88,0.09,90,2.337,92,2.761,99,3.661,104,1.146,113,0.798,118,1.116,119,0.698,137,1.014,139,1.62,144,4.579,150,4.989,159,1.779,165,0.237,181,2.466,250,1.438,254,1.402,273,2.535,334,1.779,510,4.814,851,2.249,1055,4.44,1060,5.937,1098,4.834,1252,4.062,1262,4.062,1264,5.493,1265,6.066,1278,4.579,1280,6.172,1282,6.979,1291,4.989,1292,4.163,1293,5.493,1294,4.312,1295,5.861,1296,6.258,1297,6.258,1298,6.258,1299,7.741,1300,4.743,1301,7.447,1302,6.066,1303,6.258,1304,7.951,1305,5.493,1306,6.258,1307,7.003,1308,7.951,1309,4.743,1310,7.447,1311,7.447,1312,6.258,1313,7.447,1314,5.493,1315,4.743,1316,6.258,1317,4.743,1318,4.743,1319,4.743,1320,4.743,1321,4.743]],["title/components/ErrorDialogComponent.html",[202,0.594,333,1.324]],["body/components/ErrorDialogComponent.html",[3,0.117,4,0.091,5,0.066,8,1.489,9,2.799,10,0.411,11,1.06,12,0.783,21,0.54,24,0.011,27,1.071,60,2.514,84,0.117,85,0.006,86,0.008,87,0.006,88,0.091,100,1.302,105,3.106,111,0.931,113,0.804,115,1.544,118,0.855,119,0.834,165,0.315,202,0.988,203,1.5,204,2.218,205,1.687,206,1.912,207,1.687,208,1.544,214,1.416,215,2.514,216,2.514,217,2.868,218,3.118,220,2.514,222,2.514,270,1.912,271,0.48,314,1.302,315,2.09,316,2.03,317,1.339,318,2.714,319,1.74,320,1.544,321,2.555,322,1.5,323,1.74,324,1.74,325,1.5,326,1.74,327,1.544,328,1.74,329,1.5,330,1.74,331,1.5,332,1.74,333,2.34,334,1.896,335,1.74,336,1.544,337,2.287,338,1.638,339,1.544,340,1.74,341,1.5,342,1.74,343,1.5,344,1.74,345,1.5,346,1.74,347,1.544,348,2.287,349,1.638,350,1.5,351,1.5,352,1.74,353,1.544,354,2.287,355,1.638,356,1.544,357,1.164,358,1.5,359,1.544,360,1.5,361,1.5,362,1.74,363,1.5,364,1.74,365,1.5,366,1.74,367,1.59,368,1.687,369,1.74,412,3.111,449,2.359,1322,6.179,1323,5.189,1324,4.207,1325,5.024,1326,7.04,1327,6.301,1328,4.793,1329,4.793,1330,4.793,1331,4.793,1332,4.793,1333,4.793,1334,3.821,1335,4.793,1336,6.301,1337,6.301]],["title/injectables/ErrorDialogService.html",[687,2.602,910,1.182]],["body/injectables/ErrorDialogService.html",[3,0.138,4,0.107,5,0.078,9,2.618,10,0.484,11,1.177,12,1.143,21,0.651,24,0.011,48,1.227,73,1.41,74,1.297,84,0.138,85,0.007,86,0.009,87,0.007,88,0.107,104,1.077,105,3.603,111,1.097,113,1.014,118,1.247,119,0.78,137,0.817,139,1.928,148,3.505,159,1.297,165,0.38,254,2.067,271,0.565,333,1.766,661,4.16,673,2.676,687,4.301,910,1.953,913,2.78,927,2.78,1323,4.16,1325,6.334,1334,4.499,1338,7.169,1339,4.953,1340,7.6,1341,6.994,1342,5.643,1343,8.167,1344,6.994,1345,6.994,1346,5.643,1347,5.643,1348,6.994,1349,4.953,1350,4.953,1351,5.643,1352,7.6,1353,5.643,1354,5.643,1355,5.643,1356,5.643]],["title/interceptors/ErrorInterceptor.html",[771,2.916,1357,2.475]],["body/interceptors/ErrorInterceptor.html",[3,0.105,4,0.082,5,0.059,7,1.62,10,0.369,12,1.17,21,0.502,23,0.836,24,0.011,25,2.278,60,1.717,70,3.274,84,0.105,85,0.005,86,0.007,87,0.005,88,0.082,92,3.411,100,1.169,104,0.903,111,1.139,113,0.748,118,1.046,119,0.654,137,0.849,159,1.533,165,0.387,167,2.206,168,1.592,181,2.638,212,1.202,245,4.303,271,0.431,275,2.206,276,1.562,279,1.862,334,1.851,388,3.11,424,2.206,430,3.43,558,3.396,563,4.522,579,1.968,687,4.864,710,3.778,771,4.041,786,2.3,886,3.187,887,4.041,888,4.041,889,3.43,890,4.041,891,3.671,910,1.637,911,2.647,912,2.647,1018,3.778,1058,3.778,1123,2.518,1269,5.147,1302,5.278,1314,5.147,1325,4.675,1357,3.43,1358,3.173,1359,3.778,1360,5.278,1361,3.806,1362,5.699,1363,4.71,1364,6.086,1365,4.322,1366,4.304,1367,4.304,1368,4.041,1369,5.147,1370,3.43,1371,4.322,1372,5.278,1373,5.278,1374,4.304,1375,4.322,1376,4.322,1377,4.935,1378,4.322,1379,5.863,1380,4.675,1381,3.173,1382,4.322,1383,3.778,1384,4.304,1385,4.304,1386,6.669,1387,5.863,1388,3.173,1389,4.304,1390,4.304,1391,5.863,1392,2.966,1393,4.304,1394,4.304,1395,5.147,1396,4.304,1397,3.806,1398,3.778,1399,4.304,1400,4.304,1401,4.304,1402,5.863,1403,4.304,1404,4.304,1405,3.778,1406,4.675,1407,4.304,1408,4.304,1409,5.863,1410,4.304,1411,4.304,1412,4.304,1413,3.431,1414,3.778,1415,4.304,1416,4.304]],["title/components/FooterComponent.html",[202,0.594,336,1.363]],["body/components/FooterComponent.html",[3,0.118,4,0.092,5,0.067,8,1.501,10,0.416,11,1.069,24,0.011,27,1.084,48,1.055,73,1.212,84,0.118,85,0.006,86,0.008,87,0.006,88,0.092,100,1.317,104,0.978,111,1.376,113,0.903,115,1.562,119,0.789,137,0.702,165,0.243,184,1.725,202,0.994,203,1.518,204,2.236,205,1.708,206,1.935,207,1.708,208,1.562,212,1.774,213,3.018,214,1.433,215,2.533,216,2.533,217,2.87,218,3.121,220,2.533,222,2.533,234,3.202,250,1.46,270,1.935,271,0.485,314,1.317,315,2.107,316,2.046,317,1.355,318,2.727,319,1.76,320,1.562,321,2.57,322,1.518,323,1.76,324,1.76,325,1.518,326,1.76,327,1.562,328,1.76,329,1.518,330,1.76,331,1.518,332,1.76,333,1.518,334,1.115,335,1.76,336,2.42,337,2.305,338,1.657,339,1.562,340,1.76,341,1.518,342,1.76,343,1.518,344,1.76,345,1.518,346,1.76,347,1.562,348,2.305,349,1.657,350,1.518,351,1.518,352,1.76,353,1.562,354,2.305,355,1.657,356,1.562,357,1.178,358,1.518,359,1.562,360,1.518,361,1.518,362,1.76,363,1.518,364,1.76,365,1.518,366,1.76,367,1.609,368,1.708,369,1.76,1417,4.258,1418,4.681,1419,7.081,1420,6.351,1421,7.798,1422,6.351,1423,4.851,1424,6.351,1425,5.575,1426,5.575,1427,5.575]],["title/components/FooterStubComponent.html",[202,0.594,338,1.446]],["body/components/FooterStubComponent.html",[3,0.126,4,0.098,5,0.071,8,1.564,24,0.011,27,1.155,84,0.178,85,0.006,86,0.008,87,0.006,88,0.139,100,1.404,115,1.665,119,0.814,165,0.259,202,1.117,203,1.617,204,2.33,205,2.57,207,1.82,208,1.665,214,1.527,217,2.887,218,3.143,271,0.517,314,1.404,315,2.195,316,2.132,317,1.443,318,2.793,319,1.876,320,1.665,321,2.649,322,1.617,323,1.876,324,1.876,325,1.617,326,1.876,327,1.665,328,1.876,329,1.617,330,1.876,331,1.617,332,1.876,333,1.617,334,1.188,335,1.876,336,1.665,337,2.402,338,2.629,339,1.665,340,1.876,341,1.617,342,1.876,343,1.617,344,1.876,345,1.617,346,1.876,347,1.665,348,2.402,349,2.261,350,1.617,351,1.617,352,1.876,353,1.665,354,2.402,355,2.261,356,1.665,357,1.256,358,1.617,359,1.665,360,1.617,361,1.617,362,1.876,363,1.617,364,1.876,365,1.617,366,1.876,367,1.714,368,1.82,369,1.876,471,1.365,553,2.886,740,3.178,1418,4.878,1428,3.81,1429,3.81]],["title/injectables/GlobalErrorHandler.html",[772,2.747,910,1.182]],["body/injectables/GlobalErrorHandler.html",[3,0.083,4,0.065,5,0.047,7,1.799,10,0.292,11,0.838,12,1.056,21,0.69,23,1.475,24,0.011,26,1.352,48,0.742,60,2.344,69,3.232,70,1.906,73,0.853,74,1.485,84,0.143,85,0.004,86,0.006,87,0.004,88,0.112,92,3.164,101,2.216,104,0.766,105,1.506,111,0.663,113,0.876,118,1.152,119,0.72,137,0.935,139,2.207,144,3.061,148,1.506,159,1.144,160,2.85,165,0.323,167,1.75,168,0.927,181,2.606,184,0.927,245,4.055,250,1.485,254,1.909,271,0.342,276,1.239,279,2.068,334,2.044,388,2.86,430,2.912,449,2.841,552,4.195,639,1.506,730,2.721,772,3.232,779,5.15,786,1.824,849,1.75,862,3.815,886,2.662,887,3.431,888,3.431,889,2.912,890,3.431,891,3.311,910,1.39,927,1.682,1033,2.721,1059,4.761,1252,3.232,1302,5.286,1361,3.232,1363,2.912,1368,3.431,1370,2.912,1380,3.969,1388,4.332,1397,3.815,1430,5.286,1431,2.516,1432,4.37,1433,4.37,1434,4.37,1435,4.37,1436,6.029,1437,5.158,1438,4.978,1439,6.661,1440,4.978,1441,2.996,1442,4.978,1443,4.37,1444,4.37,1445,3.413,1446,3.969,1447,3.67,1448,5.67,1449,5.15,1450,5.67,1451,5.15,1452,4.37,1453,3.413,1454,5.67,1455,5.158,1456,4.37,1457,4.37,1458,5.158,1459,4.37,1460,3.413,1461,3.969,1462,4.37,1463,3.969,1464,4.37,1465,3.969,1466,4.37,1467,4.37,1468,2.996,1469,2.996,1470,2.516,1471,2.996,1472,2.996,1473,2.996,1474,2.996,1475,2.996,1476,2.996,1477,4.37,1478,2.996,1479,4.37,1480,2.721,1481,2.996,1482,2.996,1483,2.996,1484,2.996,1485,2.996,1486,2.996,1487,2.996,1488,2.996,1489,2.996,1490,2.996,1491,2.996,1492,2.996,1493,4.37,1494,2.721,1495,2.996,1496,2.996,1497,2.996,1498,2.352,1499,2.721,1500,4.37,1501,2.996]],["title/interceptors/HttpConfigInterceptor.html",[773,2.916,1357,2.475]],["body/interceptors/HttpConfigInterceptor.html",[3,0.128,4,0.1,5,0.073,7,1.626,10,0.451,12,1.203,21,0.451,23,1.022,24,0.011,27,1.645,74,1.209,84,0.128,85,0.006,86,0.008,87,0.006,88,0.1,104,1.03,111,1.43,113,0.854,118,0.938,119,0.586,137,0.969,159,1.209,165,0.368,168,1.428,181,2.355,212,1.469,271,0.526,430,3.914,558,3.49,563,4.782,579,2.404,773,4.611,786,2.81,910,1.869,911,3.233,912,3.233,993,4.616,998,4.616,1357,3.914,1358,3.876,1360,5.709,1361,4.343,1362,6.026,1363,5.004,1364,6.346,1365,4.932,1368,4.611,1371,4.932,1372,5.709,1373,5.709,1375,4.932,1376,4.932,1377,4.611,1378,4.932,1381,3.876,1382,4.932,1502,6.459,1503,4.616,1504,6.691,1505,5.873,1506,5.258,1507,6.691,1508,5.258,1509,5.873,1510,5.258,1511,5.258,1512,4.192]],["title/classes/HttpError.html",[88,0.081,862,2.747]],["body/classes/HttpError.html",[3,0.092,4,0.072,5,0.052,7,1.514,10,0.325,11,0.904,12,0.62,21,0.637,23,1.517,24,0.011,26,1.943,60,2.854,69,2.461,70,2.998,74,1.558,84,0.152,85,0.005,86,0.007,87,0.005,88,0.129,90,1.868,92,2.75,101,2.461,105,2.75,111,0.737,113,0.685,118,0.676,119,0.423,137,0.549,139,2.13,144,2.331,148,1.673,159,1.234,160,2.369,165,0.339,167,1.944,168,1.03,181,2.69,184,1.03,245,3.623,250,1.234,254,1.842,271,0.379,276,1.376,279,1.741,334,2.041,388,2.619,430,2.218,449,3.124,552,4.346,639,1.673,730,3.023,772,2.461,779,4.97,786,2.026,849,1.944,862,4.645,886,2.213,887,2.613,888,2.613,889,2.218,890,2.613,891,2.752,910,1.499,1033,3.023,1059,4.997,1252,4.401,1302,4.595,1361,2.461,1363,3.646,1368,2.613,1370,2.218,1380,4.28,1388,4.595,1397,4.645,1430,4.595,1431,2.795,1432,3.328,1433,3.328,1434,3.328,1435,3.328,1436,6.281,1437,3.328,1439,6.522,1443,3.328,1444,3.328,1446,3.023,1447,2.795,1448,4.713,1449,4.28,1450,4.713,1451,4.28,1452,3.328,1454,4.713,1455,4.713,1456,3.328,1457,3.328,1458,4.713,1459,3.328,1461,3.023,1462,3.328,1463,3.023,1464,3.328,1465,3.023,1466,3.328,1467,3.328,1468,4.713,1469,4.713,1470,3.958,1471,4.713,1472,3.328,1473,3.328,1474,3.328,1475,3.328,1476,3.328,1477,4.713,1478,3.328,1479,4.713,1480,3.023,1481,3.328,1482,3.328,1483,3.328,1484,3.328,1485,3.328,1486,3.328,1487,3.328,1488,3.328,1489,3.328,1490,3.328,1491,3.328,1492,3.328,1493,4.713,1494,3.023,1495,3.328,1496,3.328,1497,3.328,1498,2.613,1499,3.023,1500,4.713,1501,3.328,1513,5.369]],["title/injectables/KeystoreService.html",[910,1.182,988,2.916]],["body/injectables/KeystoreService.html",[3,0.145,4,0.113,5,0.082,10,0.509,11,1.214,21,0.509,24,0.011,84,0.145,85,0.007,86,0.009,87,0.007,88,0.113,104,1.111,105,2.62,106,2.737,111,1.511,113,0.992,137,0.86,138,2.324,159,1.787,165,0.361,184,1.96,190,2.091,271,0.594,279,2.171,673,2.816,794,5.753,795,4.734,910,2.015,913,2.926,927,2.926,929,5.181,988,4.973,990,5.213,1075,5.213,1295,6.21,1514,5.213,1515,8.086,1516,7.216,1517,5.938,1518,5.938,1519,5.938,1520,5.938,1521,5.938,1522,7.216]],["title/injectables/LocationService.html",[910,1.182,1221,3.119]],["body/injectables/LocationService.html",[3,0.108,4,0.084,5,0.061,10,0.38,11,1.006,12,1.106,19,2.474,21,0.704,23,1.64,24,0.011,44,2.474,48,1.695,64,2.883,73,1.948,74,1.792,84,0.108,85,0.005,86,0.007,87,0.005,88,0.084,104,0.92,111,0.861,113,1.069,118,1.207,119,0.755,137,1.049,159,1.374,165,0.379,171,1.826,172,2.183,184,1.968,250,1.666,271,0.443,279,2.178,423,2.591,424,2.271,445,3.677,446,3.882,558,3.589,579,2.025,639,1.955,673,2.101,786,2.367,910,1.67,913,2.183,927,2.183,948,3.532,949,6.216,977,5.578,1216,5.373,1221,4.408,1523,3.889,1524,6.768,1525,6.768,1526,5.748,1527,6.768,1528,6.768,1529,5.979,1530,6.361,1531,5.979,1532,6.361,1533,5.979,1534,5.979,1535,4.43,1536,4.43,1537,5.979,1538,4.43,1539,4.43,1540,4.43,1541,5.979,1542,4.43,1543,5.979,1544,4.43,1545,4.43,1546,5.979,1547,4.43,1548,5.979,1549,5.979,1550,4.43,1551,4.43,1552,7.246,1553,4.43,1554,5.979,1555,6.768,1556,4.43,1557,4.43,1558,4.43,1559,4.43,1560,4.43,1561,6.768,1562,4.43,1563,4.43]],["title/interceptors/LoggingInterceptor.html",[774,2.916,1357,2.475]],["body/interceptors/LoggingInterceptor.html",[3,0.115,4,0.09,5,0.065,7,1.699,10,0.405,12,1.216,21,0.535,23,1.214,24,0.011,26,1.696,60,1.887,74,1.608,76,4.055,84,0.115,85,0.006,86,0.008,87,0.006,88,0.09,92,2.756,104,0.962,111,0.919,113,0.797,118,1.114,119,0.696,137,0.905,159,1.436,165,0.387,167,2.425,168,1.696,181,2.462,212,1.321,271,0.473,334,1.087,388,3.13,424,2.425,430,3.654,449,2.895,558,3.317,563,4.648,579,2.163,639,2.087,691,2.909,774,4.305,786,2.528,849,2.425,886,2.575,891,3.203,910,1.745,911,2.909,912,2.909,1060,3.771,1357,3.654,1358,3.487,1360,5.484,1361,4.055,1362,5.857,1363,4.811,1364,6.242,1365,4.605,1368,4.305,1370,4.352,1371,4.605,1372,5.484,1373,5.484,1375,4.605,1376,4.605,1377,4.305,1378,4.605,1381,3.487,1382,4.605,1388,3.487,1441,4.152,1509,5.483,1512,3.771,1564,4.152,1565,4.605,1566,4.73,1567,4.73,1568,5.483,1569,6.247,1570,4.73,1571,4.73,1572,6.247,1573,4.73,1574,4.73,1575,6.247,1576,4.73,1577,4.73,1578,4.73,1579,4.73]],["title/injectables/LoggingService.html",[388,1.635,910,1.182]],["body/injectables/LoggingService.html",[3,0.115,4,0.168,5,0.065,10,0.403,11,1.048,12,1.343,21,0.719,23,1.21,24,0.011,60,3.228,84,0.115,85,0.006,86,0.008,87,0.006,88,0.09,104,0.958,111,0.914,113,1.071,118,1.465,119,0.916,137,1.172,165,0.312,250,1.979,254,1.84,271,0.471,334,2.033,388,2.405,639,2.076,673,2.232,791,3.752,792,5.562,910,1.739,913,2.319,927,2.319,1580,4.131,1581,6.977,1582,6.124,1583,6.226,1584,6.226,1585,6.226,1586,6.226,1587,6.226,1588,6.226,1589,6.226,1590,4.706,1591,7.424,1592,6.226,1593,6.226,1594,4.706,1595,6.226,1596,4.706,1597,6.226,1598,4.706,1599,6.226,1600,4.706,1601,6.226,1602,4.706,1603,6.226,1604,4.706,1605,6.226,1606,4.706,1607,4.706,1608,6.226,1609,4.706,1610,4.706,1611,4.706,1612,3.752,1613,4.706,1614,4.706,1615,4.706,1616,4.706,1617,4.706,1618,4.706,1619,4.706]],["title/directives/MenuSelectionDirective.html",[317,1.182,361,1.324]],["body/directives/MenuSelectionDirective.html",[3,0.127,4,0.099,5,0.072,7,1.615,10,0.446,12,0.851,21,0.446,24,0.011,74,1.774,84,0.127,85,0.006,86,0.008,87,0.006,88,0.14,104,1.023,111,1.012,113,0.848,118,0.929,119,0.58,129,6.152,137,0.754,165,0.261,181,2.34,214,1.538,217,2.141,250,1.528,271,0.521,279,1.454,315,2.205,316,2.486,317,1.857,360,1.629,361,2.08,639,2.297,661,3.837,676,4.569,702,4.569,703,4.569,740,4.903,741,5.047,742,4.15,743,3.587,744,4.15,745,4.15,746,4.15,747,4.569,748,4.569,750,4.569,751,4.569,752,4.569,753,4.569,1262,4.315,1392,4.581,1565,4.9,1620,5.839,1621,4.569,1622,6.152,1623,5.3,1624,5.835,1625,6.648,1626,6.648,1627,7.716,1628,4.15,1629,6.607,1630,6.152,1631,6.152,1632,5.206,1633,5.399,1634,5.3,1635,5.3,1636,5.3,1637,4.9,1638,4.315,1639,4.9,1640,5.3,1641,4.9,1642,5.3,1643,5.206,1644,4.15,1645,5.206,1646,5.206]],["title/directives/MenuToggleDirective.html",[317,1.182,363,1.324]],["body/directives/MenuToggleDirective.html",[3,0.13,4,0.102,5,0.074,7,1.642,10,0.458,12,0.873,21,0.458,24,0.011,74,1.704,84,0.13,85,0.007,86,0.008,87,0.007,88,0.141,104,1.04,111,1.038,113,0.862,118,0.953,119,0.596,129,6.212,137,0.774,165,0.267,181,2.38,214,1.579,217,2.177,250,1.554,271,0.535,279,1.492,315,2.242,316,2.51,317,1.888,360,1.672,363,2.115,639,2.358,740,4.942,741,5.109,742,4.26,743,3.682,744,4.26,745,4.26,746,4.26,1262,4.388,1392,4.658,1565,4.982,1620,5.911,1622,6.545,1623,5.389,1628,4.26,1629,6.647,1630,6.212,1631,6.212,1633,5.924,1634,5.389,1635,5.389,1636,5.389,1637,4.982,1638,4.388,1639,4.982,1640,5.389,1641,4.982,1642,5.389,1644,4.26,1647,4.26,1648,6.759,1649,7.791,1650,5.344,1651,5.344,1652,5.344,1653,5.344,1654,5.344,1655,5.344]],["title/interfaces/Meta.html",[0,0.973,52,2.363]],["body/interfaces/Meta.html",[0,1.836,1,3.771,2,1.717,3,0.102,4,0.079,5,0.058,6,2.704,7,1.012,8,1.853,9,2.936,10,0.357,11,0.965,13,4.226,14,3.526,15,3.951,16,3.951,17,4.032,18,3.951,19,3.661,20,4.256,21,0.635,22,3.064,23,1.701,24,0.011,25,2.413,26,1.918,27,0.931,28,2.437,29,2.871,30,3.071,31,3.354,33,3.071,34,3.071,35,2.871,36,2.871,37,3.071,38,1.776,39,3.951,40,3.951,41,3.951,42,3.722,43,3.722,44,2.326,45,3.951,46,3.071,47,3.526,48,1.784,49,3.951,50,3.951,51,3.951,52,4.726,53,3.951,54,3.354,55,4.283,56,2.437,57,3.35,58,2.437,59,2.326,60,1.662,61,3.354,62,2.437,63,3.064,64,2.413,65,3.354,66,3.835,67,3.525,68,4.226,69,3.722,70,2.326,71,3.722,72,2.135,73,1.041,74,0.957,75,3.526,76,2.704,77,2.146,78,2.704,79,3.722,80,2.825,81,2.871,82,2.871,83,0.931,84,0.102,85,0.005,86,0.007,87,0.005]],["title/interfaces/MetaResponse.html",[0,0.973,71,2.747]],["body/interfaces/MetaResponse.html",[0,1.842,1,3.499,2,1.739,3,0.103,4,0.08,5,0.058,6,2.739,7,1.025,8,1.816,9,2.658,10,0.361,11,0.973,13,4.264,14,3.557,15,3.986,16,3.986,17,4.058,18,3.986,19,3.685,20,4.284,21,0.608,22,3.091,23,1.703,24,0.011,25,2.426,26,1.928,27,0.943,28,2.468,29,2.907,30,3.11,31,3.383,33,3.11,34,3.11,35,2.907,36,2.907,37,3.11,38,1.798,39,3.986,40,3.986,41,3.986,42,3.755,43,3.755,44,2.356,45,3.986,46,3.11,47,3.557,48,1.788,49,3.986,50,3.986,51,3.986,52,4.782,53,3.986,54,3.383,55,3.939,56,2.468,57,3.13,58,2.468,59,2.356,60,1.683,61,3.383,62,2.468,63,3.091,64,2.426,65,2.468,66,3.861,67,3.536,68,3.11,69,2.739,70,3.229,71,4.284,72,3.64,73,1.054,74,0.97,75,3.557,76,2.739,77,2.165,78,2.739,79,3.755,80,2.85,81,2.907,82,2.907,83,0.943,84,0.103,85,0.005,86,0.007,87,0.005]],["title/interceptors/MockBackendInterceptor.html",[1357,2.475,1656,3.119]],["body/interceptors/MockBackendInterceptor.html",[3,0.042,4,0.033,5,0.024,7,0.706,8,0.408,9,1.409,10,0.148,12,0.615,21,0.148,23,0.565,24,0.011,25,2.193,26,0.789,28,1.7,31,1.01,38,0.736,44,0.964,60,1.159,64,1.286,67,2.357,70,2.102,72,0.885,73,0.431,74,1.614,78,2.444,83,0.386,84,0.071,85,0.002,86,0.004,87,0.002,88,0.033,92,1.282,104,0.447,113,0.22,118,0.308,119,0.192,137,0.421,139,1.684,148,1.661,156,2.142,159,1.791,160,2.357,165,0.247,167,0.885,168,0.789,171,0.711,181,1.023,198,1.855,208,0.556,212,0.482,271,0.173,298,0.922,311,2.444,334,0.397,357,0.419,359,0.556,374,1.189,404,1.272,424,0.885,425,0.964,430,1.7,444,2.317,449,1.409,531,1.189,534,0.819,541,3.946,543,3.916,544,3.468,547,1.887,548,2.102,552,1.01,558,3.433,561,5.633,563,3.125,572,4.259,576,1.189,579,0.789,590,1.887,592,2.317,658,1.623,705,1.061,712,1.887,784,2.317,786,0.922,787,1.272,809,1.272,810,1.376,811,1.376,873,2.775,874,1.887,876,1.061,886,0.711,889,1.01,910,0.812,911,1.061,912,1.061,996,1.515,1037,1.189,1078,1.272,1119,1.01,1216,1.189,1217,2.142,1219,2.142,1247,2.551,1254,1.272,1263,1.189,1279,1.189,1358,1.272,1360,3.256,1361,1.887,1362,3.256,1363,3.491,1364,4.577,1365,2.142,1371,2.142,1372,3.256,1373,3.256,1375,4.731,1376,2.142,1377,3.044,1378,2.142,1381,1.272,1382,2.142,1383,2.551,1392,2.003,1395,2.551,1405,1.515,1406,4.95,1447,2.142,1449,1.376,1480,1.376,1498,4.84,1512,1.376,1526,1.272,1530,2.551,1532,2.551,1568,2.551,1656,3.256,1657,2.317,1658,1.376,1659,2.906,1660,2.551,1661,2.906,1662,1.726,1663,2.551,1664,2.906,1665,2.906,1666,2.906,1667,1.726,1668,3.877,1669,1.515,1670,2.317,1671,1.515,1672,2.317,1673,1.376,1674,3.521,1675,1.376,1676,2.775,1677,1.376,1678,1.376,1679,2.317,1680,1.376,1681,1.189,1682,1.376,1683,1.376,1684,1.376,1685,1.272,1686,1.376,1687,2.317,1688,1.189,1689,1.376,1690,2.551,1691,3.877,1692,1.515,1693,1.515,1694,1.515,1695,1.515,1696,1.515,1697,1.515,1698,1.515,1699,1.515,1700,1.515,1701,1.515,1702,1.515,1703,1.515,1704,1.515,1705,1.515,1706,1.515,1707,2.551,1708,1.515,1709,1.515,1710,2.551,1711,1.515,1712,1.515,1713,1.515,1714,3.304,1715,3.304,1716,1.515,1717,2.551,1718,1.515,1719,2.551,1720,2.551,1721,2.551,1722,1.515,1723,1.515,1724,1.515,1725,1.515,1726,1.515,1727,1.515,1728,1.515,1729,1.515,1730,1.515,1731,1.515,1732,1.515,1733,1.515,1734,1.515,1735,1.515,1736,1.515,1737,1.515,1738,1.515,1739,1.515,1740,1.515,1741,1.515,1742,1.515,1743,1.515,1744,1.515,1745,1.515,1746,1.515,1747,1.515,1748,1.515,1749,1.515,1750,1.515,1751,1.515,1752,1.515,1753,1.515,1754,1.515,1755,2.551,1756,1.515,1757,1.515,1758,1.515,1759,1.515,1760,1.515,1761,1.515,1762,1.515,1763,1.515,1764,1.515,1765,1.515,1766,1.515,1767,1.515,1768,2.551,1769,1.515,1770,1.515,1771,1.515,1772,2.551,1773,1.515,1774,1.515,1775,1.515,1776,1.515,1777,1.515,1778,1.515,1779,1.515,1780,1.515,1781,1.515,1782,1.515,1783,1.515,1784,1.515,1785,1.515,1786,1.515,1787,1.515,1788,1.515,1789,1.515,1790,1.515,1791,1.515,1792,1.515,1793,1.515,1794,1.515,1795,1.515,1796,1.515,1797,1.515,1798,1.515,1799,3.304,1800,1.515,1801,1.515,1802,1.515,1803,1.515,1804,1.515,1805,1.515,1806,1.515,1807,1.515,1808,1.515,1809,1.515,1810,1.515,1811,1.515,1812,1.515,1813,2.551,1814,1.515,1815,1.515,1816,1.515,1817,1.515,1818,1.515,1819,1.515,1820,1.515,1821,2.551,1822,1.515,1823,1.515,1824,1.515,1825,1.515,1826,1.515,1827,1.376,1828,1.515,1829,1.515,1830,1.515,1831,1.515,1832,0.964,1833,1.515,1834,1.515,1835,1.515,1836,1.515,1837,1.515,1838,1.515,1839,1.515,1840,2.551,1841,1.515,1842,1.515,1843,2.551,1844,1.515,1845,1.515,1846,1.515,1847,1.515,1848,1.515,1849,1.515,1850,1.515,1851,1.515,1852,1.515,1853,1.515,1854,1.515,1855,1.515,1856,1.515,1857,1.515,1858,1.515,1859,1.515,1860,3.304,1861,3.877,1862,1.515,1863,1.515,1864,1.515,1865,1.515,1866,1.515,1867,1.515,1868,1.515,1869,1.515,1870,1.515,1871,1.515,1872,1.515,1873,1.515,1874,1.515,1875,1.515,1876,1.515,1877,1.515,1878,1.515,1879,1.515,1880,1.515,1881,1.515,1882,1.515,1883,1.515,1884,1.515,1885,1.515,1886,1.515,1887,1.515,1888,1.515,1889,1.515,1890,1.515,1891,1.515,1892,1.515,1893,1.515,1894,1.515,1895,1.515,1896,1.515,1897,1.515,1898,1.515,1899,1.515,1900,1.515,1901,1.515,1902,1.515,1903,1.515,1904,1.515,1905,1.515,1906,1.515,1907,2.551,1908,3.304,1909,1.515,1910,1.515,1911,1.515,1912,1.515,1913,3.304,1914,3.304,1915,1.515,1916,2.551,1917,1.515,1918,1.515,1919,1.515,1920,1.515,1921,1.515,1922,1.515,1923,1.515,1924,1.515,1925,1.515,1926,1.515,1927,1.515,1928,1.515,1929,1.515,1930,1.515,1931,3.304,1932,1.515,1933,1.515,1934,1.515,1935,1.515,1936,1.515,1937,1.515,1938,1.515,1939,1.515,1940,1.515,1941,1.515,1942,1.515,1943,1.515,1944,1.515,1945,1.515,1946,1.515,1947,1.515,1948,1.515,1949,1.515,1950,2.142,1951,2.551,1952,2.551,1953,2.551,1954,2.551,1955,1.515,1956,1.515,1957,1.515,1958,1.515,1959,1.376,1960,1.515,1961,1.515,1962,1.515,1963,1.515,1964,1.515,1965,1.515,1966,1.515,1967,1.515,1968,1.515,1969,1.515,1970,1.515,1971,1.515,1972,1.515,1973,1.515,1974,1.515,1975,1.515,1976,1.515,1977,1.515,1978,1.515,1979,1.376,1980,1.515,1981,1.515,1982,1.515,1983,1.515,1984,1.515,1985,1.515,1986,1.515,1987,1.515,1988,1.515,1989,1.515,1990,1.515,1991,1.515,1992,1.515,1993,1.515,1994,1.515,1995,1.515,1996,2.551,1997,3.877,1998,1.515,1999,1.515,2000,1.515,2001,1.515,2002,1.515,2003,1.515,2004,1.515,2005,1.515,2006,1.515,2007,1.515,2008,1.515,2009,1.515,2010,1.515,2011,1.515,2012,1.515,2013,1.515,2014,1.515,2015,1.515,2016,1.515,2017,1.515,2018,1.515,2019,1.515,2020,1.515,2021,2.551,2022,1.515,2023,1.515,2024,1.515,2025,1.272,2026,1.515,2027,1.515,2028,1.515,2029,1.515,2030,1.515,2031,1.515,2032,1.515,2033,1.515,2034,1.515,2035,1.515,2036,1.515,2037,1.515,2038,1.515,2039,1.515,2040,1.515,2041,1.515,2042,1.515,2043,1.515,2044,1.515,2045,1.515,2046,1.515,2047,1.515,2048,1.515,2049,1.515,2050,1.515,2051,1.515,2052,1.515,2053,1.515,2054,1.515,2055,2.551,2056,1.515,2057,1.515,2058,1.515,2059,1.515,2060,1.515,2061,1.515,2062,1.515,2063,1.515,2064,2.551,2065,1.515,2066,1.376,2067,1.515,2068,1.515,2069,1.515,2070,1.515,2071,1.515,2072,1.515,2073,1.515,2074,1.515,2075,1.515,2076,2.551,2077,1.515,2078,1.515,2079,1.515,2080,1.515,2081,1.515,2082,1.515,2083,1.515,2084,1.515,2085,1.515,2086,1.515,2087,1.515,2088,1.515,2089,1.515,2090,1.515,2091,1.515,2092,1.515,2093,1.515,2094,2.551,2095,2.317,2096,1.515,2097,1.515,2098,1.515,2099,1.515,2100,1.515,2101,1.515,2102,1.515,2103,1.515,2104,1.515,2105,1.515,2106,1.515,2107,1.515,2108,1.515,2109,1.515,2110,1.515,2111,1.515,2112,1.515,2113,1.515,2114,1.515,2115,1.376,2116,1.515,2117,1.515,2118,1.515,2119,1.515,2120,1.515,2121,1.515,2122,1.515,2123,1.515,2124,1.515,2125,1.515,2126,1.515,2127,1.515,2128,1.515,2129,1.515,2130,1.515,2131,1.515,2132,1.515,2133,1.515,2134,1.376,2135,1.515,2136,1.515,2137,1.515,2138,1.515,2139,1.515,2140,1.515,2141,1.515,2142,1.515,2143,1.515,2144,1.515,2145,1.515,2146,1.515,2147,1.515,2148,1.515,2149,1.515,2150,1.515,2151,1.515,2152,1.515,2153,2.551,2154,1.515,2155,1.515,2156,1.515,2157,1.515,2158,1.515,2159,1.515,2160,1.515,2161,1.376,2162,1.515,2163,1.376,2164,1.515,2165,1.515,2166,1.515,2167,1.515,2168,1.515,2169,1.376,2170,1.515,2171,1.515,2172,1.515,2173,1.515,2174,1.515,2175,1.515,2176,1.515,2177,1.515,2178,1.376,2179,1.515,2180,1.515,2181,1.515,2182,1.515,2183,1.515,2184,1.515,2185,1.515,2186,1.376,2187,1.515,2188,1.376,2189,1.515,2190,1.515,2191,2.317,2192,1.515,2193,1.515,2194,1.515,2195,1.515,2196,1.515,2197,1.515,2198,1.515,2199,1.515,2200,1.515,2201,1.515,2202,1.515,2203,1.515,2204,1.515,2205,1.515,2206,1.515,2207,1.515,2208,1.515,2209,1.515,2210,1.515,2211,1.515,2212,1.515,2213,1.515,2214,1.515,2215,1.515,2216,1.515,2217,1.515,2218,1.515,2219,1.515,2220,1.515,2221,1.515,2222,1.515,2223,1.515,2224,1.515,2225,1.515,2226,1.515,2227,1.515,2228,1.515,2229,1.515,2230,1.515,2231,1.515,2232,1.515,2233,1.515,2234,1.515,2235,1.515,2236,1.515,2237,1.515,2238,1.515,2239,2.551,2240,1.515,2241,1.515,2242,1.515,2243,1.515,2244,1.515,2245,1.515,2246,1.515,2247,1.515,2248,1.515,2249,1.515,2250,1.515,2251,1.515,2252,1.515,2253,1.515,2254,1.515,2255,1.515,2256,1.515,2257,3.304,2258,1.515,2259,1.515,2260,1.515,2261,1.515,2262,1.515,2263,1.515,2264,1.515,2265,1.515,2266,1.515,2267,1.515,2268,1.515,2269,1.515,2270,1.515,2271,1.515,2272,1.515,2273,1.515,2274,1.515,2275,1.515,2276,1.515,2277,1.515,2278,1.515,2279,1.515,2280,1.515,2281,1.515,2282,1.515,2283,1.515,2284,1.515,2285,1.515,2286,1.515,2287,1.515,2288,1.515,2289,1.515,2290,1.515,2291,1.515,2292,1.515,2293,1.515,2294,1.515,2295,1.515,2296,1.515,2297,1.515,2298,1.515,2299,1.515,2300,1.515,2301,1.515,2302,1.515,2303,1.515,2304,1.515,2305,1.515,2306,1.515,2307,1.515,2308,1.515,2309,1.515,2310,1.515,2311,1.515,2312,1.515,2313,1.515,2314,1.515,2315,1.515,2316,1.515,2317,1.515,2318,1.515,2319,1.515,2320,1.515,2321,1.515,2322,1.515,2323,1.515,2324,1.515,2325,1.515,2326,1.515,2327,1.515,2328,1.515,2329,1.515,2330,1.515,2331,1.515,2332,1.515,2333,1.515,2334,1.515,2335,1.515,2336,1.515,2337,1.515,2338,1.515,2339,1.515,2340,1.515,2341,1.515,2342,1.515,2343,1.515,2344,1.515,2345,1.515,2346,2.551,2347,1.515,2348,2.317,2349,1.515,2350,1.515,2351,1.515,2352,1.515,2353,1.515,2354,1.515,2355,1.515,2356,1.515,2357,1.515,2358,1.515,2359,1.515,2360,1.515,2361,1.515,2362,1.515,2363,1.515,2364,1.515,2365,1.376,2366,1.515,2367,1.515,2368,1.515,2369,1.515,2370,1.515,2371,1.515,2372,1.515,2373,1.515,2374,1.515,2375,1.515,2376,1.515,2377,2.551,2378,2.551,2379,1.515,2380,1.515,2381,1.515,2382,1.515,2383,1.515,2384,1.515,2385,2.317,2386,1.515,2387,1.515,2388,1.515,2389,1.515,2390,1.515,2391,1.515,2392,1.515,2393,1.515,2394,1.515,2395,1.515,2396,1.515,2397,1.515,2398,1.515,2399,1.515,2400,1.515,2401,1.515,2402,1.515,2403,1.515,2404,1.515,2405,1.515,2406,1.515,2407,1.376,2408,1.376,2409,1.515,2410,1.515,2411,1.515,2412,2.551,2413,1.515,2414,1.515,2415,1.515,2416,1.515,2417,1.515,2418,1.515,2419,1.515,2420,2.551,2421,1.515,2422,1.515,2423,1.515,2424,1.515,2425,1.515,2426,1.515,2427,1.515,2428,1.515,2429,1.515,2430,1.515,2431,1.515,2432,1.515,2433,1.515,2434,1.515,2435,1.515,2436,1.515,2437,1.515,2438,1.515,2439,1.515,2440,1.515,2441,1.515,2442,1.515,2443,1.515,2444,1.515,2445,1.515,2446,1.515,2447,1.376,2448,1.515,2449,1.515,2450,1.515,2451,1.515,2452,1.515,2453,2.317,2454,1.515,2455,1.515,2456,1.515,2457,1.515,2458,1.515,2459,1.515,2460,1.515,2461,1.376,2462,1.515,2463,1.515,2464,1.515,2465,1.515,2466,1.515,2467,1.515,2468,1.515,2469,1.515,2470,1.515,2471,1.515,2472,1.515,2473,1.515,2474,1.515,2475,1.515,2476,1.515,2477,1.515,2478,1.515,2479,1.515,2480,1.515,2481,1.515,2482,1.515,2483,1.515,2484,1.515,2485,1.515,2486,1.515,2487,1.515,2488,1.515,2489,1.515,2490,1.515,2491,1.515,2492,1.515,2493,1.515,2494,1.515,2495,1.515,2496,1.515,2497,1.515,2498,1.515,2499,1.515,2500,1.515,2501,1.515,2502,1.515,2503,1.515,2504,1.515,2505,1.515,2506,1.515,2507,1.515,2508,1.515,2509,1.515,2510,1.515,2511,1.515,2512,1.376,2513,1.376,2514,1.376,2515,1.515,2516,1.515,2517,1.515,2518,1.515,2519,1.726,2520,1.726,2521,1.726,2522,1.726,2523,2.906,2524,1.515,2525,1.515,2526,1.726,2527,1.726,2528,1.726,2529,1.726,2530,1.726,2531,1.726,2532,1.726,2533,1.726,2534,1.726,2535,1.726,2536,1.726,2537,1.726,2538,2.906,2539,2.906,2540,2.551,2541,1.726,2542,1.726,2543,1.726,2544,1.726,2545,2.906,2546,1.726,2547,1.726,2548,2.551,2549,1.515,2550,1.272,2551,1.726,2552,1.515,2553,2.317,2554,2.906,2555,2.906,2556,2.906,2557,3.765,2558,1.726,2559,2.906,2560,1.12,2561,1.726,2562,1.726,2563,1.726,2564,1.726,2565,1.726,2566,1.726,2567,1.726,2568,1.726,2569,1.726,2570,1.376,2571,1.726,2572,2.906,2573,2.906,2574,1.726,2575,1.726,2576,1.726,2577,1.726,2578,1.726,2579,1.726]],["title/components/NetworkStatusComponent.html",[202,0.594,339,1.363]],["body/components/NetworkStatusComponent.html",[3,0.111,4,0.087,5,0.063,8,1.439,10,0.39,11,1.025,12,0.744,21,0.522,24,0.011,27,1.018,48,0.99,73,1.137,84,0.111,85,0.006,86,0.007,87,0.006,88,0.087,100,2.215,104,0.937,111,0.885,113,0.935,115,1.466,118,0.812,119,0.817,137,0.882,165,0.228,202,0.963,203,1.424,204,2.144,205,1.603,206,1.816,207,1.603,208,1.466,212,1.701,213,2.925,214,1.345,215,2.429,216,2.429,217,2.858,218,3.105,220,2.429,222,2.429,234,3.123,250,1.684,254,1.8,270,1.816,271,0.456,314,1.236,315,2.02,316,1.962,317,1.271,318,2.659,319,1.652,320,1.466,321,2.491,322,1.424,323,1.652,324,1.652,325,1.424,326,1.652,327,1.466,328,1.652,329,1.424,330,1.652,331,1.424,332,1.652,333,1.424,334,1.046,335,1.652,336,1.466,337,2.21,338,1.555,339,2.36,340,1.652,341,1.424,342,1.652,343,1.424,344,1.652,345,1.424,346,1.652,347,1.466,348,2.21,349,1.555,350,1.424,351,1.424,352,1.652,353,1.466,354,2.21,355,1.555,356,1.466,357,1.106,358,1.424,359,1.466,360,1.424,361,1.424,362,1.652,363,1.424,364,1.652,365,1.424,366,1.652,367,1.51,368,1.603,369,1.652,449,2.28,639,2.009,2580,6.704,2581,6.089,2582,3.996,2583,6.862,2584,6.09,2585,6.862,2586,7.327,2587,4.552,2588,7.327,2589,6.09,2590,6.09,2591,4.552,2592,4.552,2593,7.327,2594,6.09,2595,4.552,2596,6.09,2597,4.552,2598,4.552,2599,6.09,2600,6.09]],["title/components/OrganizationComponent.html",[202,0.594,341,1.324]],["body/components/OrganizationComponent.html",[3,0.098,4,0.076,5,0.055,8,1.317,10,0.343,11,0.938,12,0.654,21,0.595,24,0.011,27,0.894,38,1.705,48,1.212,73,2.033,84,0.098,85,0.005,86,0.007,87,0.005,88,0.076,100,1.086,104,0.858,111,0.777,113,0.989,115,1.289,118,0.714,119,0.774,137,0.807,139,1.367,148,2.831,159,1.281,165,0.321,184,1.514,202,0.901,203,1.252,204,1.963,205,1.408,206,1.596,207,1.408,208,1.289,212,1.557,213,2.735,214,1.182,215,2.224,216,2.224,217,2.831,218,3.071,220,2.224,222,2.224,227,4.73,234,2.959,238,4.11,242,3.189,243,5.572,250,1.595,252,4.422,254,1.647,257,4.488,270,1.596,271,0.4,272,2.949,273,2.138,274,1.971,281,2.949,282,4.11,310,2.979,312,4.506,314,1.086,315,1.849,316,1.796,317,1.117,318,2.519,319,1.452,320,1.289,321,2.329,322,1.252,323,1.452,324,1.452,325,1.252,326,1.452,327,1.289,328,1.452,329,1.252,330,1.452,331,1.252,332,1.452,333,1.252,334,0.919,335,1.452,336,1.289,337,2.023,338,1.367,339,1.289,340,1.452,341,2.172,342,1.452,343,1.252,344,1.452,345,1.252,346,1.452,347,1.289,348,2.023,349,1.367,350,1.252,351,1.252,352,1.452,353,1.289,354,2.023,355,1.367,356,1.289,357,0.972,358,1.252,359,1.289,360,1.252,361,1.252,362,1.452,363,1.252,364,1.452,365,1.252,366,1.452,367,1.327,368,1.408,369,1.452,639,1.765,829,5.116,831,5.534,855,4.445,1100,4.221,1259,4.894,1397,4.506,2025,5.117,2601,3.511,2602,5.819,2603,6.417,2604,5.575,2605,6.417,2606,6.417,2607,5.575,2608,4,2609,4,2610,4,2611,4,2612,4,2613,4,2614,4,2615,7.299,2616,5.116,2617,4,2618,4,2619,4,2620,4,2621,5.575,2622,5.575,2623,4.894,2624,5.575,2625,5.575,2626,5.575,2627,5.575,2628,4.894,2629,5.575,2630,5.575,2631,5.575,2632,5.575,2633,5.575,2634,5.575]],["title/classes/PGPSigner.html",[88,0.081,2635,2.747]],["body/classes/PGPSigner.html",[0,1.556,3,0.071,4,0.056,5,0.04,7,1.563,9,2.006,10,0.25,11,0.746,12,0.978,21,0.668,23,1.614,24,0.011,48,0.964,55,4.441,56,3.135,57,3.211,58,3.763,59,4.226,60,3.328,61,4.805,62,3.961,63,3.874,64,2.198,66,1.709,72,2.273,73,1.108,74,1.478,77,1.66,83,0.653,84,0.071,85,0.004,86,0.005,87,0.004,88,0.056,90,1.439,92,2.64,99,3.135,104,0.683,105,3.441,106,2.264,111,0.568,113,1.007,118,1.067,119,0.667,130,4.327,137,1.05,138,1.726,139,2.198,140,4.396,159,1.019,165,0.268,167,1.498,168,0.793,181,2.614,190,1.028,212,1.238,250,1.617,254,2.001,279,2.073,334,1.019,388,2.616,428,1.796,434,3.295,691,4.164,700,2.878,718,2.013,724,3.884,729,1.896,778,1.631,849,1.498,851,3.59,886,1.828,891,2.273,900,3.295,929,4.164,1043,4.666,1055,1.631,1207,3.591,1270,3.055,1370,2.594,1498,3.055,2560,3.479,2635,3.479,2636,5.175,2637,2.013,2638,3.268,2639,4.741,2640,3.268,2641,3.95,2642,5.216,2643,3.95,2644,3.95,2645,5.671,2646,3.892,2647,3.535,2648,4.741,2649,3.268,2650,4.434,2651,3.268,2652,4.41,2653,3.268,2654,2.921,2655,2.921,2656,2.921,2657,2.921,2658,2.921,2659,2.921,2660,4.991,2661,2.921,2662,3.95,2663,2.921,2664,3.95,2665,4.914,2666,2.921,2667,3.693,2668,3.95,2669,2.921,2670,3.95,2671,3.479,2672,3.95,2673,2.921,2674,3.693,2675,2.153,2676,2.153,2677,2.153,2678,3.268,2679,2.153,2680,2.153,2681,2.153,2682,2.153,2683,2.153,2684,2.153,2685,3.268,2686,3.268,2687,2.153,2688,2.153,2689,2.013,2690,2.153,2691,3.268,2692,2.153,2693,2.153,2694,2.153,2695,2.153,2696,2.153,2697,2.153,2698,2.153,2699,2.153,2700,2.153,2701,2.153,2702,2.153,2703,3.268,2704,2.153,2705,2.153,2706,2.153,2707,2.153,2708,2.153,2709,2.153,2710,2.153,2711,2.153]],["title/components/PagesComponent.html",[202,0.594,343,1.324]],["body/components/PagesComponent.html",[3,0.121,4,0.095,5,0.069,8,1.523,10,0.425,11,1.085,21,0.425,23,1.253,24,0.011,27,1.11,48,1.079,73,1.24,84,0.121,85,0.006,86,0.008,87,0.006,88,0.095,100,1.348,111,1.391,113,0.822,115,1.599,119,0.798,165,0.323,171,2.046,172,2.445,202,1.005,203,1.553,204,2.27,205,1.747,206,1.98,207,1.747,208,1.599,214,1.467,215,2.572,216,2.572,217,2.874,218,3.126,220,2.572,222,2.572,270,1.98,271,0.497,310,3.445,314,1.348,315,2.138,316,2.077,317,1.386,318,2.751,319,1.801,320,1.599,321,2.599,322,1.553,323,1.801,324,1.801,325,1.553,326,1.801,327,1.599,328,1.801,329,1.553,330,1.801,331,1.553,332,1.801,333,1.553,334,1.141,335,1.801,336,1.599,337,2.34,338,1.696,339,1.599,340,1.801,341,1.553,342,1.801,343,2.372,344,1.801,345,1.553,346,1.801,347,1.599,348,2.34,349,1.696,350,1.553,351,1.553,352,1.801,353,1.599,354,2.34,355,1.696,356,1.599,357,1.206,358,1.553,359,1.599,360,1.553,361,1.553,362,1.801,363,1.553,364,1.801,365,1.553,366,1.801,367,1.646,368,1.747,369,1.801,778,3.6,889,4.188,2712,4.357,2713,6.447,2714,7.16,2715,6.447,2716,6.447,2717,6.447,2718,5.14,2719,6.447]],["title/modules/PagesModule.html",[471,1.117,2720,3.119]],["body/modules/PagesModule.html",[3,0.139,4,0.109,5,0.079,24,0.011,83,1.277,84,0.139,85,0.007,86,0.009,87,0.007,88,0.109,165,0.434,168,1.914,271,0.572,314,1.552,343,2.612,471,1.509,473,2.074,474,2.815,475,4.084,476,2.929,477,3.054,482,4.113,484,3.767,485,3.054,486,2.71,488,2.905,489,4.123,490,3.19,492,3.342,494,3.342,506,4.334,507,3.514,508,4.575,509,3.709,510,3.342,511,4.334,512,3.514,513,4.334,514,3.514,517,4.857,518,3.938,2720,6.389,2721,5.016,2722,5.016,2723,5.016,2724,5.752,2725,5.714,2726,5.714,2727,5.714]],["title/modules/PagesRoutingModule.html",[471,1.117,2724,2.916]],["body/modules/PagesRoutingModule.html",[3,0.142,4,0.111,5,0.081,24,0.011,74,1.341,83,1.304,84,0.142,85,0.007,86,0.009,87,0.007,88,0.111,94,3.787,165,0.386,168,1.584,202,0.819,271,0.584,276,2.117,310,3.815,343,2.234,473,2.117,488,2.942,533,3.412,534,3.658,535,3.986,536,4.97,537,4.02,538,4.02,539,3.787,540,3.587,548,3.257,815,7.237,1100,3.257,1107,3.257,1201,3.257,2724,4.919,2728,5.833,2729,5.833,2730,5.833,2731,5.833,2732,5.833,2733,5.833,2734,5.833,2735,5.833,2736,5.833,2737,5.833,2738,5.833,2739,5.833]],["title/directives/PasswordToggleDirective.html",[317,1.182,365,1.324]],["body/directives/PasswordToggleDirective.html",[3,0.116,4,0.091,5,0.066,7,1.527,10,0.409,12,0.78,21,0.602,23,1.451,24,0.011,48,1.366,67,3.583,74,1.445,84,0.116,85,0.006,86,0.008,87,0.006,88,0.134,104,0.967,111,0.928,113,0.952,118,0.852,119,0.532,137,0.691,165,0.239,181,2.213,214,1.411,217,2.024,250,1.445,271,0.478,279,1.333,315,2.085,316,2.405,317,1.755,360,1.494,365,1.967,510,4.821,628,6.554,639,2.106,741,4.331,1055,4.735,1262,4.08,1265,5.872,1278,4.994,1294,4.331,1392,4.331,1565,4.633,1622,5.953,1628,3.806,1629,6.474,1630,5.953,1631,5.953,1633,5.179,1634,5.011,1635,5.011,1636,5.011,1637,4.633,1638,4.08,1639,4.633,1640,5.011,1641,4.633,1642,5.011,1644,3.806,1647,3.806,2740,6.81,2741,6.285,2742,7.466,2743,7.026,2744,6.285,2745,7.758,2746,4.774,2747,4.774,2748,6.285,2749,4.774,2750,4.774,2751,4.774,2752,7.026,2753,7.026,2754,7.026,2755,4.19,2756,6.285,2757,7.466,2758,6.285,2759,6.285]],["title/injectables/RegistryService.html",[910,1.182,1125,2.747]],["body/injectables/RegistryService.html",[3,0.137,4,0.107,5,0.078,10,0.482,11,1.175,21,0.598,24,0.011,48,1.223,73,1.405,84,0.137,85,0.007,86,0.009,87,0.007,88,0.107,95,4.642,104,1.075,105,2.482,106,2.672,111,1.475,113,1.012,137,0.815,138,2.248,159,1.293,165,0.408,169,3.291,170,3.877,171,2.319,172,2.772,179,3.652,184,2.061,190,1.98,271,0.563,274,2.772,279,2.12,673,2.668,910,1.949,913,2.772,927,2.772,1122,3.877,1123,3.291,1125,4.531,1295,6.332,2760,4.938,2761,8.315,2762,7.936,2763,6.98,2764,5.625,2765,6.051,2766,5.625,2767,6.327,2768,7.59,2769,5.625,2770,5.625,2771,5.625,2772,5.625,2773,5.625,2774,5.625]],["title/guards/RoleGuard.html",[876,2.602,2775,3.374]],["body/guards/RoleGuard.html",[3,0.111,4,0.087,5,0.063,7,1.67,10,0.392,12,0.998,21,0.523,24,0.011,25,2.086,31,4.293,38,2.602,57,2.896,74,1.05,84,0.111,85,0.006,86,0.007,87,0.006,88,0.131,92,2.694,104,0.94,111,0.888,113,0.779,118,1.089,119,0.681,137,1.063,138,1.967,139,2.349,144,3.754,145,4.207,146,4.5,148,2.694,152,4.867,159,1.58,165,0.344,168,1.241,181,2.42,198,2.251,202,0.857,208,1.967,212,1.276,245,4.5,254,1.804,271,0.457,276,1.658,312,3.963,534,2.896,544,5.42,552,4.835,558,3.261,579,2.089,616,5.299,639,2.016,673,2.167,820,6.097,876,4.512,877,3.643,879,4.867,880,5.359,881,5.85,883,3.643,885,5.359,886,2.516,887,5.057,888,4.207,889,3.571,890,4.207,891,3.13,892,4.011,893,6.906,894,6.441,896,5.359,898,4.5,899,4.867,900,3.754,901,5.359,902,4.867,903,6.441,904,4.512,905,5.359,906,5.359,907,6.035,910,1.705,911,2.81,912,2.81,913,2.251,915,4.011,2775,4.867,2776,4.011,2777,4.57,2778,4.57,2779,6.105,2780,6.105,2781,6.105,2782,6.105,2783,4.57,2784,4.57,2785,4.57,2786,4.57,2787,4.57,2788,4.57,2789,4.57]],["title/directives/RouterLinkDirectiveStub.html",[317,1.182,367,1.404]],["body/directives/RouterLinkDirectiveStub.html",[3,0.145,4,0.113,5,0.082,10,0.511,11,1.217,21,0.62,24,0.011,48,1.295,73,1.488,84,0.145,85,0.007,86,0.009,87,0.007,88,0.138,113,0.993,165,0.298,214,1.761,217,2.329,250,1.369,271,0.596,317,2.355,360,1.864,367,2.398,368,2.546,553,3.327,563,4.23,681,6.347,709,5.23,1009,5.23,1098,4.694,1144,6.347,1145,5.23,1278,4.446,1294,4.983,1633,5.739,2790,7.106,2791,6.454,2792,7.785,2793,7.231,2794,5.958,2795,5.958,2796,5.958,2797,5.958,2798,5.958,2799,5.958,2800,5.958,2801,5.958,2802,5.958,2803,5.958,2804,5.958]],["title/pipes/SafePipe.html",[1832,2.363,2805,2.916]],["body/pipes/SafePipe.html",[3,0.152,4,0.118,5,0.086,12,1.015,21,0.532,23,1.54,24,0.011,84,0.152,85,0.008,86,0.009,87,0.008,88,0.118,104,0.956,113,0.793,118,1.108,119,0.884,137,0.9,159,1.428,165,0.371,212,1.735,214,1.836,271,0.622,639,2.741,777,4.953,778,3.469,889,3.634,1832,4.14,1950,6.184,2805,5.11,2806,4.58,2807,5.454,2808,7.415,2809,4.953,2810,7.415,2811,6.32,2812,6.213,2813,5.912,2814,7.415,2815,6.213,2816,6.213]],["title/classes/Settings.html",[88,0.081,1100,2.363]],["body/classes/Settings.html",[0,1.538,3,0.128,4,0.1,5,0.073,7,1.626,10,0.451,11,1.126,12,0.859,21,0.685,24,0.011,48,1.143,63,3.933,64,2.514,73,1.313,83,1.175,84,0.128,85,0.006,86,0.008,87,0.006,88,0.127,90,2.591,93,5.511,95,4.678,100,2.22,111,1.022,113,1.02,116,3.414,118,0.938,119,0.586,166,4.325,178,5.634,181,1.851,301,6.175,357,1.626,908,4.192,1003,4.114,1100,4.565,1263,5.071,1413,6.175,1470,4.932,2550,5.709,2570,5.334,2817,4.192,2818,7.176,2819,6.459,2820,6.123,2821,5.873,2822,5.258,2823,6.799,2824,6.799,2825,5.258,2826,5.258,2827,5.258,2828,5.258,2829,4.616,2830,4.616,2831,4.616]],["title/components/SettingsComponent.html",[202,0.594,345,1.324]],["body/components/SettingsComponent.html",[3,0.089,4,0.069,5,0.05,8,1.572,10,0.312,11,0.877,12,0.851,21,0.673,23,1.368,24,0.011,25,1.78,27,0.813,47,4.506,48,1.133,67,2.299,73,0.908,84,0.149,85,0.004,86,0.006,87,0.004,88,0.069,100,0.987,104,0.802,106,2.144,111,0.706,113,1.04,115,1.171,118,0.929,119,0.876,137,0.963,138,1.678,160,2.935,165,0.378,184,0.987,190,1.28,202,0.855,203,1.138,204,1.834,205,1.28,206,1.45,207,1.28,208,1.171,212,1.455,213,2.596,214,1.074,215,2.079,216,2.079,217,2.808,218,3.043,219,3.204,220,2.079,222,2.079,234,2.835,250,1.684,270,1.45,271,0.364,274,1.791,275,1.864,310,2.785,314,0.987,315,1.728,316,1.678,317,1.015,318,2.414,319,1.319,320,1.171,321,2.21,322,1.138,323,1.319,324,1.319,325,1.138,326,1.319,327,1.171,328,1.319,329,1.138,330,1.319,331,1.138,332,1.319,333,1.138,334,0.836,335,1.319,336,1.171,337,1.891,338,1.242,339,1.171,340,1.319,341,1.138,342,1.319,343,1.138,344,1.319,345,2.081,346,1.319,347,1.171,348,1.891,349,1.242,350,1.138,351,1.138,352,1.319,353,1.171,354,1.891,355,1.242,356,1.171,357,0.883,358,1.138,359,1.171,360,1.138,361,1.138,362,1.319,363,1.138,364,1.319,365,1.138,366,1.319,367,1.206,368,1.28,369,1.319,375,4.197,377,4.856,379,4.197,380,4.197,382,3.591,383,4.584,391,3.591,402,4.197,411,4.197,412,3.383,413,3.591,415,4.197,416,3.591,418,2.505,419,1.864,420,1.943,421,1.943,422,2.235,436,2.68,438,2.68,439,2.505,440,2.68,441,2.505,452,2.68,453,2.505,463,3.591,548,3.714,639,1.604,658,3.401,684,2.898,685,4.506,707,3.591,716,2.898,723,4.574,930,5.346,943,6.432,978,3.191,1068,4.574,1100,3.714,2832,3.191,2833,6.09,2834,5.211,2835,5.346,2836,5.346,2837,5.211,2838,3.635,2839,3.635,2840,3.635,2841,3.635,2842,3.635,2843,3.635,2844,5.839,2845,3.635,2846,3.635,2847,3.635,2848,3.635,2849,3.635,2850,3.635,2851,3.635,2852,4.903,2853,3.635,2854,3.635,2855,3.635,2856,3.635,2857,5.211,2858,5.211,2859,5.211,2860,5.211,2861,5.211,2862,5.211,2863,5.211,2864,5.211]],["title/modules/SettingsModule.html",[471,1.117,2865,3.119]],["body/modules/SettingsModule.html",[3,0.127,4,0.099,5,0.072,24,0.011,83,1.165,84,0.127,85,0.006,86,0.008,87,0.006,88,0.099,165,0.442,168,1.807,271,0.522,273,2.786,314,1.416,341,2.552,345,2.552,419,2.672,420,2.786,421,2.786,471,1.377,473,1.892,474,2.568,475,3.917,476,2.672,477,2.786,482,4.019,484,3.556,485,2.786,486,2.472,488,2.743,489,3.892,490,2.911,492,3.049,494,3.049,501,4.319,502,4.585,503,4.905,504,3.843,505,4.585,506,4.092,507,3.206,508,4.319,509,3.384,510,3.049,511,4.092,512,3.206,513,4.092,514,3.206,515,4.319,516,3.384,517,4.585,518,3.592,527,5.305,2865,6.372,2866,4.576,2867,4.576,2868,4.576,2869,5.621,2870,5.213,2871,5.213,2872,4.576,2873,4.576,2874,6.654,2875,5.213,2876,6.654,2877,5.213]],["title/modules/SettingsRoutingModule.html",[471,1.117,2869,2.916]],["body/modules/SettingsRoutingModule.html",[3,0.152,4,0.119,5,0.086,24,0.011,74,1.43,83,1.391,84,0.152,85,0.008,86,0.009,87,0.008,88,0.119,165,0.411,168,1.69,202,1.042,271,0.623,276,2.259,341,2.323,345,2.323,473,2.259,488,3.06,533,3.641,534,3.762,535,4.145,536,4.64,537,4.289,538,4.289,539,4.04,540,3.827,2602,4.962,2869,5.115,2872,5.463,2873,5.463,2878,6.224]],["title/modules/SharedModule.html",[471,1.117,482,2.085]],["body/modules/SharedModule.html",[3,0.112,4,0.088,5,0.064,24,0.011,83,1.544,84,0.112,85,0.006,86,0.008,87,0.006,88,0.088,100,1.252,165,0.432,168,1.252,271,0.461,276,1.673,314,1.252,333,2.468,336,2.735,339,2.735,347,2.735,353,2.735,361,2.657,363,2.468,471,1.217,473,1.673,474,2.271,475,3.691,476,2.363,477,2.464,482,4.394,484,3.282,485,2.464,486,2.187,488,2.531,489,3.592,490,2.574,515,3.987,516,2.993,535,3.429,925,4.047,1323,3.398,1334,3.676,1349,4.047,1350,4.047,2581,3.676,2805,5.852,2879,4.047,2880,4.047,2881,4.047,2882,5.852,2883,5.852,2884,4.61,2885,4.61,2886,4.61,2887,4.61,2888,6.141,2889,4.61,2890,4.61,2891,4.61,2892,6.141,2893,4.61,2894,4.61,2895,4.61,2896,4.61]],["title/components/SidebarComponent.html",[202,0.594,347,1.363]],["body/components/SidebarComponent.html",[3,0.119,4,0.093,5,0.067,8,1.505,10,0.417,24,0.011,27,1.089,84,0.119,85,0.006,86,0.008,87,0.006,88,0.093,94,4.134,100,1.323,104,0.98,111,1.379,113,0.812,115,1.569,119,0.791,137,0.705,165,0.244,202,0.996,203,1.524,204,2.242,205,1.715,206,1.943,207,1.715,208,1.569,212,1.778,213,3.024,214,1.439,215,2.54,216,2.54,217,2.871,218,3.122,220,2.54,222,2.54,234,3.207,250,1.464,270,1.943,271,0.487,314,1.323,315,2.112,316,2.051,317,1.36,318,2.731,319,1.768,320,1.569,321,2.575,322,1.524,323,1.768,324,1.768,325,1.524,326,1.768,327,1.569,328,1.768,329,1.524,330,1.768,331,1.524,332,1.768,333,1.524,334,1.119,335,1.768,336,1.569,337,2.311,338,1.664,339,1.569,340,1.768,341,1.524,342,1.768,343,1.524,344,1.768,345,1.524,346,1.768,347,2.424,348,2.311,349,1.664,350,1.524,351,1.524,352,1.768,353,1.569,354,2.311,355,1.664,356,1.569,357,1.183,358,1.524,359,2.285,360,1.524,361,1.524,362,1.768,363,1.524,364,1.768,365,1.524,366,1.768,367,1.615,368,1.715,369,1.768,548,3.555,707,4.388,740,3.916,1100,3.555,1201,3.555,2897,4.275,2898,7.095,2899,6.368,2900,4.87,2901,4.87,2902,6.368]],["title/components/SidebarStubComponent.html",[202,0.594,349,1.446]],["body/components/SidebarStubComponent.html",[3,0.126,4,0.098,5,0.071,8,1.564,24,0.011,27,1.155,84,0.178,85,0.006,86,0.008,87,0.006,88,0.139,100,1.404,115,1.665,119,0.814,165,0.259,202,1.117,203,1.617,204,2.33,205,2.57,207,1.82,208,1.665,214,1.527,217,2.887,218,3.143,271,0.517,314,1.404,315,2.195,316,2.132,317,1.443,318,2.793,319,1.876,320,1.665,321,2.649,322,1.617,323,1.876,324,1.876,325,1.617,326,1.876,327,1.665,328,1.876,329,1.617,330,1.876,331,1.617,332,1.876,333,1.617,334,1.188,335,1.876,336,1.665,337,2.402,338,2.261,339,1.665,340,1.876,341,1.617,342,1.876,343,1.617,344,1.876,345,1.617,346,1.876,347,1.665,348,2.402,349,2.629,350,1.617,351,1.617,352,1.876,353,1.665,354,2.402,355,2.261,356,1.665,357,1.256,358,1.617,359,1.665,360,1.617,361,1.617,362,1.876,363,1.617,364,1.876,365,1.617,366,1.876,367,1.714,368,1.82,369,1.876,471,1.365,553,2.886,740,4.069,1418,3.81,1428,3.81,1429,3.81]],["title/interfaces/Signable.html",[0,0.973,2665,2.747]],["body/interfaces/Signable.html",[0,1.723,2,1.466,3,0.087,4,0.068,5,0.049,7,0.864,9,2.252,10,0.305,23,1.593,24,0.011,55,4.422,56,3.001,57,3.123,58,3.519,59,4.285,60,3.337,61,4.894,62,3.852,63,3.731,64,2.385,66,2.081,72,2.63,74,1.605,77,1.92,83,0.795,84,0.087,85,0.004,86,0.006,87,0.004,88,0.068,92,2.263,99,3.001,104,0.79,105,2.906,106,2.118,113,0.454,130,4.293,137,1.011,138,1.652,139,2.25,140,4.275,159,1.179,165,0.301,167,1.823,168,0.966,181,2.752,190,1.252,212,0.993,250,1.672,254,2.063,279,2.031,334,1.179,388,2.324,428,2.187,434,3.154,691,4.049,700,3.33,718,2.451,724,3.33,729,2.309,778,1.986,849,1.823,851,3.556,886,1.466,891,1.823,900,3.154,929,3.7,1043,4.146,1055,1.986,1207,3.359,1270,2.451,1370,2.081,2560,3.33,2635,3.33,2636,3.33,2637,2.451,2638,2.622,2639,4.435,2640,2.622,2641,2.622,2642,4.811,2643,2.622,2644,2.622,2645,5.362,2648,3.781,2649,2.622,2651,2.622,2652,3.781,2653,2.622,2660,4.854,2662,3.781,2664,3.781,2665,5.075,2667,3.535,2668,3.781,2670,3.781,2671,3.33,2672,3.781,2674,4.146,2675,2.622,2676,2.622,2677,2.622,2678,3.781,2679,2.622,2680,2.622,2681,2.622,2682,2.622,2683,2.622,2684,2.622,2685,3.781,2686,3.781,2687,2.622,2688,2.622,2689,2.451,2690,2.622,2691,3.781,2692,2.622,2693,2.622,2694,2.622,2695,2.622,2696,2.622,2697,2.622,2698,2.622,2699,2.622,2700,2.622,2701,2.622,2702,2.622,2703,3.781,2704,2.622,2705,2.622,2706,2.622,2707,2.622,2708,2.622,2709,2.622,2710,2.622,2711,2.622,2903,3.557]],["title/interfaces/Signature.html",[0,0.973,55,2.169]],["body/interfaces/Signature.html",[0,1.833,1,3.468,2,1.703,3,0.101,4,0.079,5,0.057,6,2.683,7,1.004,8,1.804,9,2.985,10,0.354,11,0.96,13,4.203,14,3.506,15,3.929,16,3.929,17,4.015,18,3.929,19,3.645,20,4.238,21,0.654,22,3.047,23,1.717,24,0.011,25,2.405,26,1.911,27,0.924,28,2.417,29,2.848,30,3.046,31,3.336,33,3.046,34,3.046,35,2.848,36,2.848,37,3.046,38,1.761,39,3.929,40,3.929,41,3.929,42,3.702,43,3.702,44,2.307,45,3.929,46,3.046,47,3.506,48,1.781,49,3.929,50,3.929,51,3.929,52,4.658,53,3.929,54,3.336,55,4.088,56,3.336,57,3.503,58,4.118,59,3.184,60,2.275,61,4.467,62,3.336,63,4.081,64,2.231,65,2.417,66,3.336,67,3.106,68,3.046,69,2.683,70,2.307,71,3.702,72,2.118,73,1.032,74,0.95,75,3.506,76,2.683,77,2.134,78,2.683,79,3.702,80,2.809,81,2.848,82,2.848,83,0.924,84,0.101,85,0.005,86,0.007,87,0.005]],["title/interfaces/Signature-1.html",[0,0.81,55,1.806,198,1.736]],["body/interfaces/Signature-1.html",[0,1.71,2,1.428,3,0.085,4,0.066,5,0.048,7,0.842,9,2.784,10,0.297,11,0.847,21,0.557,23,1.65,24,0.011,55,4.432,56,3.468,57,3.419,58,4.217,59,4.255,60,3.324,61,4.902,62,4.217,63,4.151,64,2.361,66,2.027,72,2.58,74,1.588,77,1.884,83,0.775,84,0.085,85,0.004,86,0.006,87,0.004,88,0.066,92,2.221,99,2.944,105,2.87,106,2.087,130,4.249,137,0.942,138,1.621,139,2.223,140,4.223,159,1.157,165,0.297,167,1.776,168,0.941,181,2.735,190,1.22,212,0.968,250,1.657,254,2.042,279,2.013,334,1.157,388,2.29,428,2.131,434,3.095,691,4,700,3.268,718,2.388,724,3.268,729,2.249,778,1.935,849,1.776,851,3.528,886,1.428,891,1.776,900,3.095,929,3.645,1043,4.085,1055,1.935,1207,3.31,1270,2.388,1370,2.027,2560,3.268,2635,3.268,2636,2.249,2637,2.388,2638,2.554,2639,4.37,2640,2.554,2641,2.554,2642,4.762,2643,2.554,2644,2.554,2645,5.314,2648,3.71,2649,2.554,2651,2.554,2652,3.71,2653,2.554,2660,4.796,2662,3.71,2664,3.71,2665,4.828,2667,3.469,2668,3.71,2670,3.71,2671,3.268,2672,3.71,2674,4.085,2675,2.554,2676,2.554,2677,2.554,2678,3.71,2679,2.554,2680,2.554,2681,2.554,2682,2.554,2683,2.554,2684,2.554,2685,3.71,2686,3.71,2687,2.554,2688,2.554,2689,2.388,2690,2.554,2691,3.71,2692,2.554,2693,2.554,2694,2.554,2695,2.554,2696,2.554,2697,2.554,2698,2.554,2699,2.554,2700,2.554,2701,2.554,2702,2.554,2703,3.71,2704,2.554,2705,2.554,2706,2.554,2707,2.554,2708,2.554,2709,2.554,2710,2.554,2711,2.554]],["title/interfaces/Signer.html",[0,0.973,130,2.602]],["body/interfaces/Signer.html",[0,1.66,2,1.303,3,0.077,4,0.06,5,0.044,7,1.512,9,2.103,10,0.271,12,1.087,21,0.57,23,1.606,24,0.011,55,4.463,56,2.752,57,2.952,58,3.287,59,4.235,60,3.348,61,4.836,62,3.641,63,3.556,64,2.273,66,1.849,72,2.411,74,1.529,77,1.761,83,0.706,84,0.077,85,0.004,86,0.006,87,0.004,88,0.06,92,2.076,99,3.287,104,0.724,105,2.746,106,1.978,113,0.89,118,1.187,119,0.742,130,4.442,137,1.118,138,1.81,139,2.273,140,4.528,159,1.081,165,0.281,167,1.62,168,0.858,181,2.671,190,1.113,212,0.883,250,1.743,254,2.194,279,2.118,334,1.081,388,2.171,428,1.943,434,3.455,691,4.289,700,3.054,718,2.178,724,3.054,729,2.052,778,1.765,849,1.62,851,3.662,886,1.303,891,1.62,900,3.455,929,3.455,1043,3.872,1055,1.765,1207,3.475,1270,2.178,1370,1.849,2560,3.647,2635,3.054,2636,4.69,2637,2.178,2638,2.33,2639,4.588,2640,2.33,2641,2.33,2642,4.585,2643,4.142,2644,4.142,2645,5.775,2646,4.129,2647,3.75,2648,4.905,2649,2.33,2651,2.33,2652,3.467,2653,2.33,2660,5.142,2662,4.142,2664,4.142,2665,5.012,2667,3.872,2668,4.142,2670,4.142,2671,3.647,2672,4.142,2674,3.872,2675,2.33,2676,3.467,2677,3.467,2678,4.142,2679,2.33,2680,2.33,2681,2.33,2682,2.33,2683,2.33,2684,2.33,2685,3.467,2686,3.467,2687,2.33,2688,2.33,2689,2.178,2690,2.33,2691,3.467,2692,2.33,2693,2.33,2694,2.33,2695,2.33,2696,2.33,2697,2.33,2698,2.33,2699,2.33,2700,2.33,2701,2.33,2702,2.33,2703,3.467,2704,2.33,2705,2.33,2706,2.33,2707,2.33,2708,2.33,2709,2.33,2710,2.33,2711,2.33,2904,3.16,2905,3.16,2906,3.16,2907,3.16,2908,3.16,2909,3.16]],["title/interfaces/Staff.html",[0,0.973,658,2.363]],["body/interfaces/Staff.html",[0,1.609,2,2.33,3,0.138,4,0.108,5,0.078,7,1.373,10,0.484,11,1.178,21,0.7,23,1.698,24,0.011,25,2.392,26,2.065,47,5.119,57,3.32,64,1.931,67,3.089,83,1.263,84,0.138,85,0.007,86,0.009,87,0.007,105,3.818,115,2.255,119,0.928,658,4.438,851,4.104,1279,4.824,2844,6.977,2910,4.961,2911,8.325,2912,7.949,2913,6.338,2914,7,2915,6.145]],["title/interfaces/Token.html",[0,0.973,27,0.946]],["body/interfaces/Token.html",[0,1.514,2,2.115,3,0.125,4,0.098,5,0.071,7,1.247,8,1.557,10,0.44,11,1.109,12,1.327,14,3.156,21,0.73,23,1.727,24,0.011,26,1.789,27,1.984,32,4.856,38,2.808,64,1.753,80,3.246,83,1.147,84,0.125,85,0.006,86,0.008,87,0.006,117,4.72,119,0.906,121,3.567,164,5.252,1210,4.539,1211,4.341,2913,6.12,2916,4.505,2917,8.123,2918,7.676,2919,7.676,2920,6.476,2921,6.587,2922,6.587,2923,6.587,2924,6.12,2925,6.587,2926,6.587,2927,5.132,2928,4.505]],["title/components/TokenDetailsComponent.html",[202,0.594,350,1.324]],["body/components/TokenDetailsComponent.html",[3,0.102,4,0.08,5,0.058,8,1.359,10,0.359,21,0.493,24,0.011,27,1.912,65,4.484,84,0.102,85,0.005,86,0.007,87,0.005,88,0.08,100,1.136,104,0.885,111,1.277,113,0.946,115,1.348,119,0.827,121,2.452,137,0.833,165,0.288,184,1.136,202,0.923,203,1.309,204,2.025,205,1.473,206,1.669,207,1.473,208,1.348,212,1.606,213,2.801,214,1.237,215,2.294,216,2.294,217,2.84,218,3.083,220,2.294,222,2.294,234,3.017,250,1.627,270,1.669,271,0.419,314,1.136,315,1.908,316,1.853,317,1.169,318,2.568,319,1.519,320,1.348,321,2.385,322,1.309,323,1.519,324,1.519,325,1.309,326,1.519,327,1.348,328,1.519,329,1.309,330,1.519,331,1.309,332,1.519,333,1.309,334,0.962,335,1.519,336,1.348,337,2.088,338,1.43,339,1.348,340,1.519,341,1.309,342,1.519,343,1.309,344,1.519,345,1.309,346,1.519,347,1.348,348,2.088,349,1.43,350,2.214,351,1.309,352,1.519,353,1.348,354,2.088,355,1.43,356,1.348,357,1.017,358,1.309,359,1.348,360,1.309,361,1.309,362,1.519,363,1.309,364,1.519,365,1.309,366,1.519,367,1.388,368,1.473,369,1.519,425,2.337,469,3.734,1098,2.717,1211,3.074,1278,3.537,1294,3.964,2365,4.586,2913,4.586,2920,4.586,2924,4.586,2928,5.049,2929,6.728,2930,5.65,2931,3.336,2932,5.769,2933,5.049,2934,6.728,2935,5.049,2936,5.769,2937,5.752,2938,4.185,2939,6.212,2940,3.673,2941,3.673,2942,4.586,2943,3.673,2944,4.185,2945,5.752,2946,5.752,2947,5.752,2948,5.752,2949,5.752,2950,5.752,2951,5.752,2952,5.752,2953,5.752,2954,5.752,2955,5.752,2956,5.752,2957,5.752]],["title/pipes/TokenRatioPipe.html",[1832,2.363,2882,2.916]],["body/pipes/TokenRatioPipe.html",[3,0.154,4,0.12,5,0.087,12,1.029,21,0.54,24,0.011,48,1.625,73,1.574,77,2.799,84,0.154,85,0.008,86,0.009,87,0.008,88,0.12,104,0.97,113,0.804,118,1.124,119,0.889,137,0.912,159,1.448,165,0.315,212,1.759,214,1.861,271,0.63,469,4.853,1688,4.341,1832,4.175,2806,4.643,2809,5.022,2811,6.357,2813,5.961,2882,5.152,2958,6.563,2959,5.529,2960,7.477,2961,6.299,2962,6.299,2963,6.299]],["title/classes/TokenRegistry.html",[88,0.081,2964,3.119]],["body/classes/TokenRegistry.html",[0,0.786,3,0.083,4,0.065,5,0.047,7,1.571,8,1.794,10,0.293,11,0.839,12,0.961,21,0.615,23,1.594,24,0.011,26,2.21,27,1.968,67,1.509,74,1.352,79,2.22,80,4.043,84,0.083,85,0.004,86,0.006,87,0.004,88,0.065,90,1.685,92,2.2,93,4.455,95,4.995,96,4.376,97,4.376,98,6.664,99,2.916,100,1.866,101,4.809,102,6.298,103,6.796,104,0.767,105,3.416,106,2.838,111,0.665,112,4.376,113,0.945,115,1.606,116,3.819,117,4.837,118,1.049,119,0.766,120,5.48,121,3.614,122,2.726,131,5.721,134,5.721,135,6.298,137,1.154,138,2.311,156,4.766,159,1.486,160,1.509,164,5.721,165,0.294,166,3.61,167,1.753,168,0.929,169,2,170,2.356,171,1.409,172,1.685,173,2.726,174,3.435,175,2.726,177,2.726,178,2.356,179,2.22,180,3.002,181,2.276,182,4.376,183,3.002,184,0.929,185,3.002,186,4.376,187,3.002,190,2.071,201,3.002,1119,2,1201,4.392,1252,4.197,1257,4.376,2964,3.675,2965,6.053,2966,2.726,2967,4.985,2968,7.175,2969,4.985,2970,3.419,2971,3.419,2972,4.985,2973,3.419,2974,6.905,2975,6.465,2976,3.419,2977,3.419,2978,4.985,2979,4.985,2980,3.419,2981,7.866,2982,3.419,2983,4.985,2984,3.419,2985,3.002,2986,3.419,2987,3.419,2988,3.419,2989,3.419,2990,3.419]],["title/injectables/TokenService.html",[389,2.602,910,1.182]],["body/injectables/TokenService.html",[3,0.094,4,0.074,5,0.053,10,0.331,11,0.916,12,1.117,21,0.692,23,1.524,24,0.011,26,1.049,27,1.806,48,1.486,73,1.708,74,1.832,77,2.358,84,0.094,85,0.005,86,0.007,87,0.005,88,0.074,95,3.684,104,0.838,106,3.028,111,1.224,113,1.074,118,1.219,119,0.762,121,2.685,137,1.136,138,2.696,159,1.718,160,2.401,165,0.374,184,2.03,190,2.965,195,3.392,198,1.904,250,1.251,271,0.387,279,1.759,389,3.346,425,2.157,434,3.873,558,2.987,565,5.021,579,1.766,673,1.833,910,1.52,913,1.904,927,1.904,941,5.04,977,5.662,1065,5.021,1122,2.663,1123,2.26,1125,2.508,1126,3.081,1134,3.081,1201,3.517,1211,2.908,2767,5.021,2964,5.662,2991,3.392,2992,6.298,2993,6.298,2994,5.441,2995,5.441,2996,5.441,2997,5.441,2998,6.837,2999,6.837,3000,6.837,3001,5.441,3002,5.441,3003,3.864,3004,5.441,3005,3.864,3006,3.864,3007,3.864,3008,5.441,3009,3.864,3010,3.864,3011,3.864,3012,3.864,3013,3.864,3014,5.441,3015,3.864,3016,3.864,3017,3.864,3018,4.776,3019,3.864,3020,5.441,3021,3.864,3022,3.864,3023,3.392,3024,3.864,3025,3.864,3026,3.864,3027,3.864,3028,3.864,3029,4.776,3030,3.864,3031,3.864,3032,3.864,3033,3.864,3034,3.864,3035,3.864,3036,3.392,3037,3.864,3038,4.776,3039,3.864,3040,3.392,3041,3.864,3042,3.864,3043,3.864,3044,3.864,3045,3.864,3046,3.864,3047,3.864,3048,3.864,3049,3.864,3050,3.864,3051,6.298,3052,6.298,3053,3.864,3054,3.864,3055,3.864]],["title/classes/TokenServiceStub.html",[88,0.081,3056,3.374]],["body/classes/TokenServiceStub.html",[3,0.157,4,0.123,5,0.089,10,0.552,12,1.053,21,0.552,23,1.564,24,0.011,84,0.157,85,0.008,86,0.009,87,0.008,88,0.123,90,3.175,104,1.167,113,0.822,118,1.15,119,0.845,137,0.933,159,1.481,553,3.598,886,3.124,1211,4.05,1676,4.751,2924,5.138,3056,6.042,3057,6.652,3058,7.578,3059,7.578,3060,6.445]],["title/components/TokensComponent.html",[202,0.594,351,1.324]],["body/components/TokensComponent.html",[3,0.089,4,0.069,5,0.05,8,1.23,10,0.311,11,0.876,12,0.995,21,0.661,23,1.183,24,0.011,27,1.757,48,1.132,73,0.907,84,0.148,85,0.004,86,0.006,87,0.004,88,0.069,100,0.986,104,0.802,106,2.143,111,1.012,113,1.03,115,1.17,118,1.086,119,0.889,121,2.834,137,0.963,138,1.677,160,2.934,165,0.386,184,0.986,190,1.833,202,0.855,203,1.136,204,1.833,205,1.279,206,1.449,207,1.279,208,1.17,212,1.454,213,2.595,214,1.073,215,2.077,216,2.077,217,2.808,218,3.043,219,3.202,220,2.077,222,2.077,234,2.834,245,4.032,250,1.684,254,1.073,270,1.449,271,0.363,274,1.789,275,1.862,276,1.318,279,1.7,310,2.783,314,0.986,315,1.727,316,1.677,317,1.014,318,2.413,319,1.318,320,1.17,321,2.209,322,1.136,323,1.318,324,1.318,325,1.136,326,1.318,327,1.17,328,1.318,329,1.136,330,1.318,331,1.136,332,1.318,333,1.136,334,0.835,335,1.318,336,1.17,337,1.89,338,1.241,339,1.17,340,1.318,341,1.136,342,1.318,343,1.136,344,1.318,345,1.136,346,1.318,347,1.17,348,1.89,349,1.241,350,1.136,351,2.08,352,1.318,353,1.17,354,1.89,355,1.241,356,1.17,357,0.882,358,1.136,359,1.17,360,1.136,361,1.136,362,1.318,363,1.136,364,1.318,365,1.136,366,1.318,367,1.205,368,1.279,369,1.318,375,4.195,379,4.195,380,4.195,382,3.588,383,4.582,388,2.914,389,4.504,391,3.588,402,4.195,411,4.195,412,3.38,413,3.588,415,4.195,416,3.588,418,2.503,419,1.862,420,1.941,421,1.941,422,2.233,425,2.028,426,2.677,436,2.677,438,2.677,439,2.503,440,2.677,441,2.503,448,2.677,449,1.949,452,2.677,453,2.503,463,3.588,469,3.38,1201,4.507,1211,3.553,2920,5.301,2943,3.188,3018,3.188,3029,4.57,3036,4.57,3038,4.57,3040,4.57,3061,3.188,3062,6.087,3063,5.207,3064,6.087,3065,5.207,3066,3.632,3067,5.207,3068,3.632,3069,3.632,3070,3.632,3071,5.207,3072,3.632,3073,3.632,3074,3.632,3075,3.632,3076,3.632,3077,3.632,3078,3.632,3079,3.632,3080,3.632,3081,3.632,3082,3.632]],["title/modules/TokensModule.html",[471,1.117,3083,3.119]],["body/modules/TokensModule.html",[3,0.128,4,0.1,5,0.072,24,0.011,83,1.169,84,0.128,85,0.006,86,0.008,87,0.006,88,0.1,165,0.442,168,1.81,271,0.523,314,1.42,350,2.554,351,2.554,419,2.68,420,2.794,421,2.794,471,1.381,473,1.897,474,2.576,475,3.922,476,2.68,477,2.794,482,4.022,484,3.562,485,2.794,486,2.48,488,2.748,489,3.899,490,2.919,492,3.058,494,3.058,497,3.603,501,4.327,502,4.594,503,4.914,504,3.854,505,4.594,506,4.099,507,3.215,508,4.327,509,3.394,510,3.058,511,4.099,512,3.215,513,4.099,514,3.215,515,4.327,516,3.394,522,4.594,523,3.394,2930,3.854,3083,6.375,3084,4.589,3085,4.589,3086,4.589,3087,5.625,3088,5.228,3089,5.228,3090,4.589,3091,4.589,3092,6.666,3093,6.666,3094,5.228,3095,6.666,3096,5.228]],["title/modules/TokensRoutingModule.html",[471,1.117,3087,2.916]],["body/modules/TokensRoutingModule.html",[3,0.153,4,0.12,5,0.087,24,0.011,67,2.775,74,1.445,83,1.406,84,0.153,85,0.008,86,0.009,87,0.008,88,0.12,165,0.413,168,1.708,202,1.049,271,0.629,276,2.282,350,2.337,351,2.337,473,2.282,488,3.079,497,4.333,533,3.679,534,3.779,535,4.17,536,4.369,540,3.867,2930,4.635,3087,5.147,3090,5.52,3091,5.52,3097,6.288]],["title/components/TopbarComponent.html",[202,0.594,353,1.363]],["body/components/TopbarComponent.html",[3,0.123,4,0.096,5,0.07,8,1.54,10,0.432,24,0.011,27,1.128,84,0.123,85,0.006,86,0.008,87,0.006,88,0.096,100,1.37,104,1.003,111,1.403,113,0.831,115,1.625,119,0.805,137,0.731,165,0.253,202,1.013,203,1.579,204,2.294,205,1.777,206,2.013,207,1.777,208,1.625,212,1.82,213,3.076,214,1.491,215,2.599,216,2.599,217,2.877,218,3.13,220,2.599,222,2.599,234,3.251,250,1.498,270,2.013,271,0.505,314,1.37,315,2.161,316,2.099,317,1.409,318,2.768,319,1.831,320,1.625,321,2.619,322,1.579,323,1.831,324,1.831,325,1.579,326,1.831,327,1.625,328,1.831,329,1.579,330,1.831,331,1.579,332,1.831,333,1.579,334,1.16,335,1.831,336,1.625,337,2.365,338,1.724,339,1.625,340,1.831,341,1.579,342,1.831,343,1.579,344,1.831,345,1.579,346,1.831,347,1.625,348,2.365,349,1.724,350,1.579,351,1.579,352,1.831,353,2.457,354,2.365,355,1.724,356,1.625,357,1.226,358,1.579,359,1.625,360,1.579,361,1.579,362,1.831,363,1.579,364,1.831,365,1.579,366,1.831,367,1.674,368,1.777,369,1.831,1429,4.803,3098,4.429,3099,7.217,3100,6.516,3101,5.046,3102,5.046]],["title/components/TopbarStubComponent.html",[202,0.594,355,1.446]],["body/components/TopbarStubComponent.html",[3,0.126,4,0.098,5,0.071,8,1.564,24,0.011,27,1.155,84,0.178,85,0.006,86,0.008,87,0.006,88,0.139,100,1.404,115,1.665,119,0.814,165,0.259,202,1.117,203,1.617,204,2.33,205,2.57,207,1.82,208,1.665,214,1.527,217,2.887,218,3.143,271,0.517,314,1.404,315,2.195,316,2.132,317,1.443,318,2.793,319,1.876,320,1.665,321,2.649,322,1.617,323,1.876,324,1.876,325,1.617,326,1.876,327,1.665,328,1.876,329,1.617,330,1.876,331,1.617,332,1.876,333,1.617,334,1.188,335,1.876,336,1.665,337,2.402,338,2.261,339,1.665,340,1.876,341,1.617,342,1.876,343,1.617,344,1.876,345,1.617,346,1.876,347,1.665,348,2.402,349,2.261,350,1.617,351,1.617,352,1.876,353,1.665,354,2.402,355,2.629,356,1.665,357,1.256,358,1.617,359,1.665,360,1.617,361,1.617,362,1.876,363,1.617,364,1.876,365,1.617,366,1.876,367,1.714,368,1.82,369,1.876,471,1.365,553,2.886,740,3.178,1418,3.81,1428,3.81,1429,4.878]],["title/interfaces/Transaction.html",[0,0.973,357,1.028]],["body/interfaces/Transaction.html",[0,1.884,1,3.986,2,1.811,3,0.107,4,0.084,5,0.061,7,1.067,8,1.783,9,1.644,10,0.509,11,1.001,12,0.972,21,0.731,23,1.657,24,0.011,25,1.501,26,2.226,27,1.907,38,3.592,48,1.57,64,2.467,80,2.164,83,0.982,84,0.107,85,0.005,86,0.007,87,0.005,117,2.701,119,0.663,121,3.39,165,0.22,254,1.298,357,2.155,449,1.644,762,4.156,871,4.144,904,2.701,1107,4.67,1186,3.027,1187,3.238,1188,3.238,1189,3.238,1190,3.027,1191,3.027,1192,5.163,1193,4.382,1194,4.382,1195,4.976,1196,4.382,1197,5.323,1198,3.238,1199,5.251,1200,4.974,1201,3.319,1202,4.382,1203,3.027,1204,3.238,1205,2.851,1206,2.851,1207,2.453,1208,3.238,1209,3.238,1210,3.027,1211,3.177]],["title/components/TransactionDetailsComponent.html",[202,0.594,356,1.363]],["body/components/TransactionDetailsComponent.html",[3,0.065,4,0.097,5,0.037,8,0.979,10,0.435,11,0.697,12,0.677,21,0.604,23,1.505,24,0.011,27,1.524,65,3.341,84,0.065,85,0.003,86,0.005,87,0.003,88,0.051,100,0.726,104,0.638,106,2.784,111,0.805,113,1.009,115,0.861,118,0.739,119,0.839,121,3.3,137,0.988,138,2.381,165,0.327,184,0.726,190,2.481,202,0.712,203,0.837,204,1.458,205,0.941,206,1.066,207,0.941,208,0.861,212,1.157,213,2.162,214,0.79,215,1.652,216,1.652,217,2.724,218,2.939,220,1.652,222,1.652,234,2.435,245,3.494,250,1.313,254,0.79,270,1.066,271,0.268,274,1.317,275,1.371,276,0.97,277,1.971,278,1.971,279,1.595,314,0.726,315,1.374,316,1.334,317,0.747,318,2.073,319,0.97,320,0.861,321,1.841,322,0.837,323,0.97,324,0.97,325,0.837,326,0.97,327,0.861,328,0.97,329,0.837,330,0.97,331,0.837,332,0.97,333,0.837,334,0.614,335,0.97,336,0.861,337,1.504,338,0.913,339,0.861,340,0.97,341,0.837,342,0.97,343,0.837,344,0.97,345,0.837,346,0.97,347,0.861,348,1.504,349,0.913,350,0.837,351,0.837,352,0.97,353,0.861,354,1.504,355,0.913,356,1.84,357,1.98,358,0.837,359,1.84,360,0.837,361,0.837,362,0.97,363,0.837,364,0.97,365,0.837,366,0.97,367,0.887,368,0.941,369,0.97,381,5.436,389,4.193,426,1.971,448,1.971,449,1.551,450,2.132,451,2.132,462,5.633,467,3.054,469,2.689,530,2.132,531,1.842,686,4.193,717,1.971,762,1.429,871,2.547,883,2.132,1098,1.736,1191,4.505,1195,4.505,1199,4.244,1200,4.02,1203,2.855,1205,2.689,1206,2.689,1211,3.494,1278,2.547,1294,2.855,1638,4.244,2560,1.736,2931,2.132,2932,4.452,2933,3.636,2934,5.985,2935,3.636,2936,4.452,2939,5.014,2940,2.347,2941,2.347,2942,3.303,3103,7.003,3104,6.361,3105,5.071,3106,5.071,3107,6.18,3108,5.071,3109,4.143,3110,5.712,3111,5.712,3112,5.712,3113,5.712,3114,5.071,3115,5.712,3116,4.143,3117,2.674,3118,2.674,3119,4.143,3120,2.674,3121,2.674,3122,2.674,3123,2.674,3124,2.674,3125,2.674,3126,2.674,3127,2.674,3128,2.674,3129,2.132,3130,2.674,3131,2.674,3132,5.071,3133,2.674,3134,2.674,3135,2.674,3136,2.674,3137,2.674,3138,2.674,3139,2.674,3140,2.674,3141,2.674,3142,2.674,3143,2.674,3144,2.674,3145,2.674,3146,2.674,3147,2.674,3148,2.674,3149,2.674,3150,2.347,3151,2.674,3152,2.674,3153,2.347,3154,2.674,3155,5.712,3156,5.712,3157,3.303,3158,4.143,3159,3.303,3160,3.636,3161,4.143,3162,4.143,3163,4.143,3164,3.636,3165,4.143,3166,4.143,3167,5.712,3168,5.712,3169,5.712,3170,4.143,3171,4.143,3172,4.143,3173,5.712,3174,4.143,3175,4.143,3176,4.143,3177,4.143,3178,5.712,3179,4.143]],["title/injectables/TransactionService.html",[686,2.602,910,1.182]],["body/injectables/TransactionService.html",[3,0.065,4,0.051,5,0.037,8,1.35,9,1.552,10,0.229,11,0.698,12,1.152,21,0.645,22,1.43,23,1.537,24,0.011,25,0.914,26,2.267,48,1.532,52,1.494,73,1.427,74,1.903,75,3.514,77,1.552,84,0.065,85,0.006,86,0.005,87,0.003,88,0.051,95,2.968,104,0.638,106,2.691,111,0.805,113,1.018,118,1.257,119,0.786,121,2.907,137,1.048,138,2.27,159,1.503,165,0.412,166,3.808,169,1.565,170,1.844,171,1.103,172,1.318,174,1.844,179,1.737,184,1.679,190,2.603,198,1.318,244,4.194,250,1.313,271,0.268,277,1.972,278,1.972,279,1.905,286,1.737,298,2.215,300,3.294,305,4.045,334,1.503,357,1.502,359,1.634,388,2.635,423,1.565,424,1.372,425,1.494,427,2.856,443,3.497,445,3.12,558,2.932,579,1.223,673,1.269,685,4.194,686,2.549,716,2.133,762,2.215,786,1.43,849,1.372,910,1.158,913,1.318,927,1.318,941,4.212,948,2.133,949,5.214,974,3.305,977,1.972,988,1.844,989,2.349,991,2.349,1001,2.349,1003,1.645,1026,2.349,1055,1.494,1059,3.74,1065,4.045,1095,4.556,1096,4.82,1107,2.314,1122,1.844,1123,2.425,1125,1.737,1126,2.133,1134,2.133,1157,3.305,1159,3.638,1173,3.638,1190,1.844,1206,1.737,2642,1.844,2689,1.844,2767,4.045,2836,4.454,3023,2.349,3157,3.305,3159,3.305,3160,2.349,3164,3.638,3180,2.133,3181,5.074,3182,5.074,3183,4.145,3184,4.145,3185,4.145,3186,3.638,3187,5.714,3188,3.638,3189,3.638,3190,5.074,3191,4.145,3192,4.145,3193,7.266,3194,2.676,3195,4.145,3196,2.676,3197,2.676,3198,2.676,3199,2.676,3200,2.676,3201,3.638,3202,2.676,3203,3.638,3204,2.676,3205,2.676,3206,5.714,3207,5.714,3208,2.676,3209,5.074,3210,4.145,3211,2.676,3212,2.676,3213,4.145,3214,2.676,3215,2.676,3216,2.676,3217,2.676,3218,2.676,3219,2.676,3220,2.349,3221,2.676,3222,2.349,3223,2.676,3224,2.676,3225,2.676,3226,2.676,3227,2.676,3228,4.145,3229,2.676,3230,2.349,3231,2.133,3232,2.676,3233,2.676,3234,2.676,3235,4.145,3236,4.145,3237,2.676,3238,2.349,3239,5.074,3240,4.145,3241,5.074,3242,5.074,3243,2.676,3244,5.074,3245,5.074,3246,4.145,3247,2.676,3248,3.638,3249,2.676,3250,2.676,3251,2.676,3252,2.676,3253,2.676,3254,2.676,3255,2.676,3256,4.145,3257,4.145,3258,4.145,3259,2.676,3260,2.676,3261,2.676,3262,2.676,3263,2.676,3264,2.676,3265,4.145,3266,2.676,3267,4.145,3268,2.349,3269,4.145,3270,2.676,3271,2.676,3272,2.676,3273,2.676,3274,2.676,3275,2.676,3276,2.676,3277,2.676,3278,2.676,3279,2.676,3280,2.676,3281,2.676,3282,2.676,3283,2.676,3284,2.676,3285,2.676,3286,2.676,3287,2.676,3288,2.676,3289,2.676,3290,2.676,3291,2.676,3292,2.676,3293,2.676,3294,2.676,3295,2.676,3296,2.676,3297,2.676,3298,2.676,3299,2.676,3300,2.676,3301,2.676,3302,2.676,3303,2.676,3304,2.676,3305,2.676,3306,2.676,3307,2.676,3308,2.676,3309,2.676,3310,2.676,3311,2.676,3312,2.676,3313,2.676,3314,2.676,3315,2.676,3316,2.676,3317,2.676,3318,2.676,3319,2.676,3320,2.676,3321,2.676]],["title/classes/TransactionServiceStub.html",[88,0.081,3322,3.374]],["body/classes/TransactionServiceStub.html",[3,0.144,4,0.112,5,0.081,10,0.505,12,1.266,21,0.664,24,0.011,26,2.35,84,0.144,85,0.007,86,0.009,87,0.007,88,0.112,90,2.902,104,1.105,113,0.988,118,1.382,119,0.864,137,1.122,159,1.354,165,0.295,250,1.853,357,1.431,553,3.289,558,3.674,579,2.693,762,3.148,886,3.324,1095,4.696,1096,5.71,1157,5.725,3186,6.303,3188,6.303,3189,6.303,3193,6.799,3201,6.303,3203,6.303,3322,5.725,3323,7.078,3324,5.89,3325,5.89,3326,5.17,3327,5.89,3328,5.89]],["title/components/TransactionsComponent.html",[202,0.594,358,1.324]],["body/components/TransactionsComponent.html",[3,0.072,4,0.057,5,0.041,8,1.06,10,0.254,11,0.755,12,0.884,21,0.709,23,1.375,24,0.011,26,1.218,27,0.663,48,1.621,73,1.506,84,0.132,85,0.004,86,0.005,87,0.004,88,0.057,100,0.806,104,0.691,106,1.904,111,0.872,113,1.05,115,0.956,118,0.965,119,0.759,137,0.986,138,1.445,160,3.214,165,0.365,184,0.806,190,2.398,202,0.759,203,0.928,204,1.579,205,1.044,206,1.183,207,1.044,208,0.956,212,1.253,213,2.306,214,0.877,215,1.789,216,1.789,217,2.755,218,2.977,219,2.758,220,1.789,222,1.789,234,2.57,244,4.35,250,1.747,254,0.877,270,1.183,271,0.297,274,1.462,275,1.521,279,1.684,286,1.926,298,2.397,300,1.926,310,2.397,314,0.806,315,1.488,316,1.445,317,0.828,318,2.188,319,1.077,320,0.956,321,1.963,322,0.928,323,1.077,324,1.077,325,0.928,326,1.077,327,0.956,328,1.077,329,0.928,330,1.077,331,0.928,332,1.077,333,0.928,334,0.682,335,1.077,336,0.956,337,1.628,338,1.014,339,0.956,340,1.077,341,0.928,342,1.077,343,0.928,344,1.077,345,0.928,346,1.077,347,0.956,348,1.628,349,1.014,350,0.928,351,0.928,352,1.077,353,0.956,354,1.628,355,1.014,356,0.956,357,1.846,358,1.887,359,2.521,360,0.928,361,0.928,362,1.077,363,0.928,364,1.077,365,0.928,366,1.077,367,0.984,368,1.044,369,1.077,375,3.728,376,4.748,378,4.748,379,3.728,380,3.728,381,5.639,382,3.091,383,4.155,389,4.35,391,3.091,402,3.728,404,4.445,406,4.807,408,3.576,409,3.938,411,3.728,412,2.912,413,3.091,415,3.728,416,3.091,418,2.044,419,1.521,420,1.585,421,1.585,422,1.824,423,1.735,424,1.521,425,1.656,426,2.187,439,3.091,441,3.091,443,2.044,445,1.824,446,1.926,448,2.187,449,1.679,450,2.365,451,2.365,453,2.044,462,5.021,463,3.091,467,3.307,469,3.914,686,4.35,717,2.187,974,2.365,1084,5.021,1199,3.914,1200,3.708,2548,2.604,2616,3.576,3153,2.604,3157,3.576,3159,3.576,3238,2.604,3268,3.938,3329,2.604,3330,5.409,3331,5.409,3332,4.486,3333,5.409,3334,5.409,3335,5.409,3336,5.409,3337,6.03,3338,6.03,3339,4.486,3340,2.966,3341,4.486,3342,2.966,3343,2.966,3344,2.966,3345,2.966,3346,2.966,3347,4.486,3348,2.966,3349,2.966,3350,2.966,3351,2.966,3352,2.966,3353,2.966,3354,2.966,3355,2.966,3356,2.966,3357,2.966,3358,2.966,3359,4.486,3360,2.966,3361,2.966,3362,4.486,3363,4.486,3364,2.966,3365,2.966,3366,2.966,3367,2.966,3368,4.486,3369,4.486,3370,2.966,3371,2.966,3372,6.03,3373,4.486,3374,4.486,3375,4.486,3376,4.486,3377,4.486,3378,4.486,3379,4.486]],["title/modules/TransactionsModule.html",[471,1.117,483,2.916]],["body/modules/TransactionsModule.html",[3,0.126,4,0.098,5,0.071,24,0.011,83,1.63,84,0.126,85,0.006,86,0.008,87,0.006,88,0.098,165,0.441,168,1.794,271,0.516,314,1.4,356,2.78,358,2.545,419,2.642,420,2.754,421,2.754,471,1.361,473,1.871,474,2.539,475,3.896,476,2.642,477,2.754,482,4.007,483,5.976,484,3.53,485,2.754,486,2.444,488,2.723,489,3.864,490,2.878,492,3.015,494,3.015,497,3.552,501,4.288,502,4.552,503,4.869,504,3.799,505,4.552,506,4.062,507,3.169,508,4.288,509,3.346,510,3.015,511,4.062,512,3.169,513,4.062,514,3.169,515,4.288,516,3.346,517,4.552,518,3.552,522,4.552,523,3.346,529,5.798,530,4.109,531,3.552,3104,4.109,3380,4.524,3381,4.524,3382,4.524,3383,4.524,3384,5.604,3385,5.154,3386,5.154,3387,4.524,3388,5.154]],["title/modules/TransactionsRoutingModule.html",[471,1.117,3384,2.916]],["body/modules/TransactionsRoutingModule.html",[3,0.158,4,0.123,5,0.089,24,0.011,74,1.484,83,1.443,84,0.158,85,0.008,86,0.009,87,0.008,88,0.123,165,0.403,168,1.753,202,0.906,271,0.646,276,2.343,358,2.374,473,2.343,488,3.127,533,3.777,534,3.821,535,4.236,536,3.777,540,3.97,3384,5.228,3387,5.667,3389,6.456]],["title/interfaces/Tx.html",[0,0.973,1107,2.363]],["body/interfaces/Tx.html",[0,1.897,1,3.606,2,1.872,3,0.111,4,0.087,5,0.063,7,1.103,8,1.62,9,2.276,10,0.587,11,1.023,21,0.687,23,1.621,24,0.011,25,1.551,26,2.327,27,1.864,38,3.474,48,0.987,64,2.342,80,2.237,83,1.015,84,0.111,85,0.006,86,0.007,87,0.006,117,2.792,119,0.678,121,3.253,165,0.227,254,2.025,357,2.152,449,2.276,762,4.197,871,5.012,904,3.738,1107,4.478,1186,3.129,1187,3.347,1188,3.347,1189,3.347,1190,3.129,1191,3.129,1192,4.954,1193,4.481,1194,4.481,1195,4.723,1196,4.481,1197,5.395,1198,3.347,1199,4.449,1200,4.214,1201,2.535,1202,3.347,1203,5.044,1204,4.481,1205,4.752,1206,3.947,1207,3.395,1208,5.395,1209,5.395,1210,3.129,1211,3.249]],["title/interfaces/TxToken.html",[0,0.973,1192,2.747]],["body/interfaces/TxToken.html",[0,1.906,1,3.641,2,1.917,3,0.113,4,0.089,5,0.064,7,1.13,8,1.639,9,1.741,10,0.529,11,1.04,21,0.659,23,1.67,24,0.011,25,1.589,26,2.191,27,1.921,38,3.493,48,1.011,64,2.525,80,3.044,83,1.04,84,0.113,85,0.006,86,0.008,87,0.006,117,3.799,119,0.882,121,3.536,165,0.233,254,1.375,357,2.139,449,1.741,762,4.226,871,4.265,904,2.86,1107,4.415,1186,3.206,1187,3.429,1188,3.429,1189,3.429,1190,3.206,1191,3.206,1192,5.133,1193,4.554,1194,4.554,1195,4.78,1196,4.554,1197,5.113,1198,3.429,1199,4.503,1200,4.265,1201,2.597,1202,3.429,1203,3.206,1204,3.429,1205,3.02,1206,3.02,1207,2.597,1208,3.429,1209,3.429,1210,4.257,1211,4.226]],["title/pipes/UnixDatePipe.html",[1832,2.363,2883,2.916]],["body/pipes/UnixDatePipe.html",[3,0.153,4,0.12,5,0.087,12,1.026,21,0.538,24,0.011,26,2.162,84,0.153,85,0.008,86,0.009,87,0.008,88,0.12,104,0.966,113,0.801,118,1.12,119,0.888,137,0.909,159,1.443,165,0.314,184,1.705,212,1.753,214,1.855,271,0.628,467,5.5,1205,4.075,1832,4.166,1950,5.869,2806,4.627,2809,5.005,2811,6.348,2813,5.949,2883,5.142,3390,6.549,3391,5.51,3392,7.461,3393,6.277,3394,6.277,3395,6.277,3396,6.277]],["title/classes/UserServiceStub.html",[88,0.081,3397,3.374]],["body/classes/UserServiceStub.html",[3,0.076,4,0.059,5,0.043,10,0.266,11,0.782,12,1.008,14,4.799,17,4.799,19,1.734,21,0.706,22,1.66,23,1.467,24,0.011,25,2.913,26,1.794,27,1.038,38,1.979,42,2.016,43,2.016,48,1.01,67,3.792,73,1.16,77,2.31,84,0.076,85,0.004,86,0.006,87,0.004,88,0.059,90,1.53,104,0.715,113,0.884,118,1.101,119,0.907,121,3.327,137,0.894,139,2.454,148,3.17,159,1.418,165,0.155,171,1.28,198,3.788,298,3.298,311,5.187,406,6.222,449,2.921,541,4.96,543,5.558,544,5.236,548,2.593,553,1.734,558,2.638,579,1.42,590,3.61,592,3.702,644,6.305,645,5.417,705,4.262,851,1.473,874,4.006,886,2.961,1119,4.054,1670,3.702,1672,3.702,1673,4.92,1674,6.129,1675,4.92,1676,5.444,1677,3.702,1678,3.702,1679,4.92,1680,3.702,1681,4.253,1682,3.702,1683,3.702,1684,3.702,1685,4.549,1686,3.702,1687,3.702,1688,3.2,1689,3.702,2066,3.702,2161,3.702,2191,3.702,2348,2.476,2385,3.702,2453,2.476,2461,4.434,2512,5.727,2513,4.92,2540,4.076,2852,4.099,3326,2.727,3397,3.702,3398,6.305,3399,4.644,3400,4.644,3401,3.106,3402,5.561,3403,5.561,3404,5.561,3405,7.804,3406,5.561,3407,5.561,3408,7.804,3409,7.804,3410,4.644,3411,4.644,3412,4.644,3413,4.644,3414,4.644,3415,4.644,3416,4.644,3417,4.644,3418,4.644,3419,4.644,3420,4.644,3421,4.644,3422,4.644,3423,4.644,3424,4.644,3425,4.644,3426,4.644,3427,4.644,3428,4.644,3429,4.644,3430,4.644,3431,4.644,3432,3.106,3433,4.644,3434,3.106,3435,4.644,3436,3.106,3437,3.106,3438,4.644,3439,3.106,3440,3.106,3441,3.106,3442,3.106,3443,3.106,3444,3.106,3445,3.106,3446,3.106,3447,3.106,3448,3.106,3449,2.727,3450,3.106]],["title/interfaces/W3.html",[0,0.973,2820,3.119]],["body/interfaces/W3.html",[0,1.746,2,2.322,3,0.137,4,0.107,5,0.078,7,1.369,10,0.483,11,1.176,21,0.599,24,0.011,63,4.362,64,2.595,83,1.259,84,0.137,85,0.007,86,0.009,87,0.007,88,0.107,93,5.472,95,4.087,100,2.259,116,4.536,166,4.558,178,5.733,181,1.984,301,5.57,357,1.369,908,5.57,1003,3.464,1100,4.241,1263,5.625,1413,5.57,1470,4.153,2550,5.15,2570,4.492,2817,4.492,2818,6.667,2819,4.945,2820,6.017,2821,4.945,2823,6.133,2824,6.133,2829,4.945,2830,6.133,2831,6.133]],["title/injectables/Web3Service.html",[169,2.475,910,1.182]],["body/injectables/Web3Service.html",[3,0.148,4,0.116,5,0.084,10,0.52,11,1.23,21,0.52,24,0.011,84,0.148,85,0.007,86,0.009,87,0.007,88,0.116,104,1.125,105,2.677,111,1.525,113,1.001,137,0.879,159,1.395,165,0.393,166,4.856,169,4.277,171,2.501,172,2.989,184,1.648,271,0.607,279,2.191,673,2.878,910,2.042,913,2.989,927,2.989,1295,6.242,3451,5.326,3452,8.145,3453,7.311,3454,6.067,3455,7.847,3456,6.067]],["title/coverage.html",[3457,4.621]],["body/coverage.html",[0,1.865,1,1.445,5,0.041,6,4.183,21,0.251,22,2.377,24,0.011,27,0.656,52,1.638,55,2.28,71,1.904,75,1.804,77,3.295,85,0.004,86,0.005,87,0.004,88,0.149,89,2.338,91,4.283,130,1.804,166,2.483,169,1.716,171,2.214,174,3.065,184,0.796,202,1.177,203,0.918,209,3.904,210,2.162,211,2.574,244,1.804,257,1.804,298,4.733,317,1.8,320,0.945,322,0.918,325,0.918,327,0.945,329,0.918,331,0.918,333,0.918,334,1.378,336,0.945,338,1.002,339,0.945,341,0.918,343,0.918,345,0.918,347,0.945,349,1.002,350,0.918,351,0.918,353,0.945,355,1.002,356,0.945,357,0.713,358,0.918,361,0.918,363,0.918,365,0.918,367,0.973,370,2.574,374,2.021,388,1.133,389,1.804,422,1.804,471,1.419,496,2.338,499,2.162,541,1.804,542,2.574,550,2.338,551,2.574,552,1.716,553,4.053,587,2.574,590,1.904,616,1.904,658,1.638,672,2.574,685,1.804,686,1.804,687,1.804,762,1.567,771,2.021,772,1.904,773,2.021,774,2.021,787,2.162,788,2.021,794,2.338,824,2.574,851,2.548,862,1.904,876,2.735,878,2.574,886,2.214,910,2.18,928,2.574,929,1.804,986,2.338,988,2.021,1084,2.162,1085,2.574,1086,2.574,1100,1.638,1107,1.638,1125,1.904,1186,4.131,1192,1.904,1212,2.574,1213,2.574,1216,2.021,1217,2.162,1219,2.162,1221,2.162,1260,2.574,1261,2.574,1291,2.338,1292,2.574,1322,2.574,1323,2.162,1324,2.574,1338,2.574,1339,2.574,1357,3.507,1359,2.574,1417,2.574,1428,3.96,1430,3.96,1431,3.96,1498,5.222,1502,2.574,1503,2.574,1514,2.574,1523,2.574,1526,2.162,1564,2.574,1580,2.574,1620,3.546,1621,2.574,1647,3.546,1656,2.162,1657,5.925,1658,5.925,1832,2.999,2447,2.338,2514,2.338,2580,2.574,2581,2.338,2582,2.574,2601,2.574,2635,1.904,2636,4.574,2637,4.131,2665,1.904,2712,2.574,2740,2.574,2760,2.574,2765,2.338,2775,2.338,2776,2.574,2790,2.574,2791,2.338,2805,2.021,2807,2.574,2817,3.546,2820,2.162,2832,2.574,2882,2.021,2883,2.021,2897,2.574,2910,2.574,2916,2.574,2929,2.574,2930,2.162,2931,4.283,2958,2.574,2959,2.574,2964,2.162,2965,4.283,2966,4.283,2974,2.574,2991,2.574,3056,2.338,3057,2.574,3061,2.574,3098,2.574,3103,2.574,3104,2.338,3129,2.338,3180,3.546,3322,2.338,3323,2.574,3329,2.574,3390,2.574,3391,2.574,3397,2.338,3398,2.574,3451,2.574,3457,2.338,3458,2.933,3459,2.933,3460,5.372,3461,8.308,3462,8.381,3463,4.447,3464,7.7,3465,2.574,3466,2.574,3467,2.574,3468,2.574,3469,2.574,3470,5.372,3471,2.574,3472,4.78,3473,6.443,3474,7.978,3475,2.574,3476,2.574,3477,4.283,3478,2.574,3479,2.574,3480,2.574,3481,3.904,3482,3.904,3483,2.574,3484,2.574,3485,2.574,3486,2.574,3487,2.933,3488,4.447,3489,5.372,3490,4.715,3491,4.447,3492,2.574,3493,2.933,3494,2.933,3495,2.933,3496,4.447,3497,5.372,3498,6.443,3499,4.447,3500,5.372,3501,5.372,3502,2.933,3503,3.904,3504,2.933,3505,2.933,3506,2.933,3507,2.933,3508,5.995,3509,4.447,3510,2.933,3511,2.933,3512,2.933,3513,2.574,3514,2.574,3515,2.574,3516,2.574,3517,2.933,3518,2.933,3519,2.933]],["title/dependencies.html",[474,2.51,3520,3.524]],["body/dependencies.html",[9,2.223,22,3.174,24,0.011,52,3.316,85,0.007,86,0.009,87,0.007,166,3.316,271,0.594,273,3.174,276,2.155,474,2.926,476,3.044,490,3.316,579,2.715,620,5.213,711,4.734,712,3.855,777,5.753,778,4.029,791,4.734,792,4.734,1003,3.652,1037,4.092,1122,4.092,1123,4.221,1363,3.474,3220,5.213,3222,5.213,3231,4.734,3521,7.608,3522,5.938,3523,7.216,3524,5.938,3525,5.938,3526,5.938,3527,5.938,3528,5.938,3529,5.938,3530,5.938,3531,5.938,3532,5.938,3533,5.938,3534,5.938,3535,5.938,3536,5.938,3537,5.938,3538,5.938,3539,5.938,3540,5.938,3541,5.938,3542,5.938,3543,5.938,3544,5.938,3545,5.938,3546,5.938,3547,5.938]],["title/miscellaneous/functions.html",[2553,4.062,3548,2.597]],["body/miscellaneous/functions.html",[5,0.101,7,1.949,9,3.003,10,0.39,12,1.349,21,0.673,22,3.914,24,0.011,26,1.235,32,3.351,57,2.156,64,2.502,83,1.016,85,0.006,86,0.007,87,0.006,92,2.685,101,3.95,113,0.776,118,1.473,119,0.93,131,4.851,132,3.991,134,4.851,137,1.218,138,1.96,139,1.553,140,2.951,150,4.851,160,3.681,198,2.24,250,1.576,254,1.344,334,1.576,422,3.742,576,3.133,582,5.341,705,3.742,986,4.851,1119,3.559,1278,2.796,1363,2.66,1430,3.351,1431,4.485,1499,3.625,1688,3.133,2553,3.625,2755,6.02,2765,5.468,3129,4.851,3150,3.991,3465,3.991,3466,5.341,3467,5.341,3468,3.991,3469,5.341,3471,3.991,3472,6.086,3475,3.991,3476,5.341,3477,3.625,3478,5.341,3479,5.341,3481,3.991,3482,6.02,3483,5.341,3484,5.341,3485,3.991,3486,5.341,3548,3.351,3549,4.547,3550,4.547,3551,4.547,3552,4.547,3553,5.341,3554,6.085,3555,4.547,3556,4.547,3557,4.547,3558,6.085,3559,4.547,3560,4.547,3561,4.547,3562,4.547,3563,5.341,3564,6.858,3565,4.547,3566,6.085,3567,4.547,3568,3.991,3569,3.991,3570,4.547,3571,6.085,3572,6.858,3573,7.634,3574,6.428,3575,4.547,3576,4.547,3577,4.547,3578,4.547,3579,4.547,3580,4.547,3581,4.547,3582,4.547,3583,4.547,3584,4.547,3585,3.991,3586,4.547,3587,4.547,3588,4.547,3589,6.085,3590,4.547,3591,4.547,3592,4.547,3593,4.851,3594,4.547,3595,6.085,3596,7.323,3597,5.341,3598,6.085,3599,4.547,3600,4.547,3601,6.085,3602,6.085,3603,4.547]],["title/index.html",[10,0.302,3604,3.093,3605,3.093]],["body/index.html",[4,0.091,5,0.087,24,0.008,54,2.793,73,1.193,85,0.006,86,0.008,87,0.006,100,1.296,119,0.832,171,3.198,184,1.707,202,0.986,205,1.681,218,2.629,359,1.538,471,2.144,473,1.733,486,2.981,547,3.099,548,2.666,552,3.676,555,4.19,559,5.179,576,4.842,707,3.29,734,4.19,828,4.19,874,3.099,891,2.447,898,3.519,900,2.936,1003,2.936,1037,5.145,1078,5.872,1123,2.793,1207,2.666,1256,6.167,1262,4.08,1293,4.19,1397,4.561,1505,5.517,1582,4.19,1612,5.011,1638,3.099,2095,5.602,2671,4.561,2852,3.519,3521,4.19,3585,6.167,3606,6.285,3607,4.774,3608,7.026,3609,7.758,3610,7.63,3611,8.121,3612,5.517,3613,4.774,3614,4.774,3615,6.167,3616,8.241,3617,4.774,3618,5.517,3619,4.774,3620,4.774,3621,4.774,3622,4.774,3623,4.774,3624,4.774,3625,4.19,3626,4.774,3627,4.19,3628,4.774,3629,6.81,3630,4.774,3631,4.774,3632,4.19,3633,4.774,3634,7.965,3635,4.774,3636,4.774,3637,4.774,3638,4.774,3639,6.285,3640,4.774,3641,6.167,3642,7.026,3643,4.19,3644,4.774,3645,4.774,3646,4.19,3647,5.517,3648,6.285,3649,7.466,3650,5.517,3651,4.774,3652,6.554,3653,4.774,3654,4.774,3655,6.185,3656,4.774,3657,6.285,3658,4.774,3659,4.19,3660,4.774,3661,4.774,3662,4.774,3663,4.774,3664,4.774,3665,4.774,3666,7.026,3667,4.774,3668,4.774,3669,4.774,3670,4.774,3671,4.19,3672,6.285,3673,4.774,3674,4.774,3675,4.774,3676,4.774,3677,4.774,3678,4.19,3679,4.19,3680,4.774,3681,3.806,3682,4.774,3683,4.774]],["title/license.html",[3604,3.093,3605,3.093,3684,3.093]],["body/license.html",[0,0.994,2,1.045,4,0.147,5,0.026,9,0.949,20,1.646,21,0.159,24,0.002,25,2.059,26,0.505,28,0.606,35,3.945,36,1.283,38,1.974,44,0.578,54,4.09,57,2.632,64,2.284,65,1.089,85,0.002,86,0.002,87,0.002,88,0.02,99,1.811,100,1.258,101,2.317,104,0.159,105,3.085,113,0.132,116,2.01,121,0.441,128,0.909,141,0.909,145,2.46,146,1.869,147,3.614,149,3.489,156,1.372,159,0.238,165,0.052,184,1.175,198,1.759,202,0.501,250,0.238,279,0.289,305,0.825,312,2.01,357,1.051,404,1.869,408,0.825,423,1.089,449,0.388,486,0.491,539,0.672,547,2.317,559,5.102,562,2.468,563,0.606,565,0.825,580,1.634,581,1.634,590,0.672,616,0.672,631,0.909,658,0.578,691,0.637,700,1.208,705,2.195,724,0.672,727,0.909,729,2.317,743,0.713,809,2.631,851,0.491,874,2.317,879,1.484,881,3.169,886,0.767,898,1.372,899,0.825,902,4.1,904,1.904,911,3.014,912,3.294,997,0.909,1003,0.637,1005,0.909,1013,0.909,1014,1.634,1035,0.909,1037,2.46,1055,0.578,1096,1.372,1119,2.088,1123,0.606,1161,0.909,1162,1.634,1200,1.904,1252,1.646,1254,1.372,1265,3.949,1279,1.283,1280,3.169,1283,1.634,1305,1.634,1369,0.909,1377,0.713,1397,4.846,1398,0.909,1406,1.484,1414,2.225,1425,0.909,1426,1.634,1427,1.634,1446,2.468,1451,1.484,1461,3.693,1463,0.825,1465,2.021,1494,5.46,1612,1.484,1623,0.825,1624,0.909,1637,0.763,1638,0.672,1639,1.372,1641,0.763,1660,2.717,1663,0.909,1681,1.747,1685,0.763,1827,0.825,1959,0.825,1979,0.825,2025,1.869,2115,0.825,2134,0.825,2163,0.825,2169,0.825,2178,0.825,2186,6.769,2188,4.1,2407,0.825,2408,3.169,2524,1.634,2525,1.634,2549,0.909,2550,2.282,2552,2.225,2602,1.484,2616,0.825,2623,3.133,2628,0.909,2647,0.825,2667,3.945,2671,2.01,2718,2.021,2791,0.825,2835,0.909,2852,3.614,2915,2.225,2942,2.021,3248,1.634,3449,1.634,3457,1.484,3516,0.909,3563,5.164,3568,6.137,3569,1.634,3574,0.909,3593,0.825,3597,1.634,3610,4.066,3612,2.717,3615,0.909,3618,1.634,3625,2.717,3627,2.717,3629,0.909,3632,0.909,3643,0.909,3646,4.872,3647,2.225,3650,0.909,3652,0.909,3659,2.225,3671,0.909,3678,4.066,3679,3.797,3684,7.492,3685,6.499,3686,1.035,3687,1.035,3688,2.535,3689,7.282,3690,4.632,3691,6.596,3692,7.117,3693,3.974,3694,1.035,3695,1.035,3696,1.861,3697,3.569,3698,3.569,3699,2.535,3700,2.535,3701,1.035,3702,1.035,3703,1.861,3704,3.974,3705,1.035,3706,3.974,3707,1.035,3708,1.035,3709,4.632,3710,1.035,3711,1.035,3712,1.035,3713,5.883,3714,7.898,3715,5.883,3716,2.535,3717,2.535,3718,1.861,3719,1.861,3720,4.325,3721,4.325,3722,5.883,3723,3.569,3724,1.035,3725,1.035,3726,3.096,3727,4.632,3728,1.861,3729,4.632,3730,2.535,3731,1.035,3732,1.861,3733,1.035,3734,2.535,3735,6.499,3736,3.569,3737,1.861,3738,3.096,3739,1.035,3740,1.035,3741,1.861,3742,3.096,3743,5.55,3744,1.861,3745,6.686,3746,1.861,3747,3.096,3748,4.325,3749,3.569,3750,1.035,3751,4.632,3752,3.569,3753,7.378,3754,2.535,3755,4.325,3756,1.035,3757,1.035,3758,1.035,3759,4.632,3760,1.861,3761,5.357,3762,5.142,3763,3.569,3764,1.861,3765,1.035,3766,1.035,3767,6.028,3768,1.861,3769,1.035,3770,5.725,3771,1.861,3772,1.035,3773,2.535,3774,1.035,3775,1.035,3776,1.035,3777,1.035,3778,1.035,3779,1.035,3780,1.035,3781,1.035,3782,1.035,3783,1.861,3784,1.035,3785,1.035,3786,1.035,3787,1.861,3788,1.035,3789,1.035,3790,1.861,3791,1.861,3792,5.883,3793,1.035,3794,1.861,3795,1.861,3796,1.035,3797,1.035,3798,2.535,3799,1.861,3800,2.535,3801,1.035,3802,1.035,3803,3.974,3804,1.035,3805,1.035,3806,3.569,3807,1.035,3808,1.035,3809,3.096,3810,1.035,3811,1.035,3812,1.861,3813,2.535,3814,1.035,3815,1.035,3816,4.902,3817,1.035,3818,5.883,3819,3.096,3820,3.569,3821,3.974,3822,2.535,3823,1.035,3824,2.535,3825,6.395,3826,1.861,3827,1.035,3828,1.035,3829,1.035,3830,2.535,3831,7.798,3832,5.142,3833,1.035,3834,1.035,3835,1.861,3836,1.861,3837,1.035,3838,5.142,3839,1.035,3840,3.096,3841,4.632,3842,1.035,3843,2.535,3844,2.535,3845,1.861,3846,3.974,3847,7.712,3848,2.535,3849,4.902,3850,3.096,3851,4.325,3852,1.861,3853,1.035,3854,1.861,3855,2.535,3856,4.902,3857,3.096,3858,1.035,3859,1.861,3860,1.861,3861,3.096,3862,3.096,3863,1.035,3864,2.535,3865,1.035,3866,7.056,3867,1.861,3868,1.035,3869,4.632,3870,1.035,3871,2.535,3872,6.028,3873,3.096,3874,1.861,3875,5.357,3876,3.974,3877,1.035,3878,1.035,3879,4.632,3880,1.035,3881,1.861,3882,1.035,3883,1.861,3884,2.535,3885,2.535,3886,1.035,3887,1.035,3888,1.035,3889,2.535,3890,2.535,3891,1.035,3892,1.035,3893,1.035,3894,1.861,3895,3.974,3896,1.035,3897,2.535,3898,2.535,3899,3.974,3900,2.535,3901,2.535,3902,1.035,3903,1.035,3904,3.569,3905,3.974,3906,1.035,3907,1.035,3908,1.035,3909,2.535,3910,1.035,3911,1.035,3912,1.035,3913,1.035,3914,1.035,3915,1.861,3916,1.035,3917,6.848,3918,4.632,3919,1.035,3920,1.861,3921,1.035,3922,1.035,3923,1.861,3924,1.861,3925,1.035,3926,1.035,3927,1.035,3928,1.861,3929,2.535,3930,1.035,3931,1.861,3932,1.035,3933,1.035,3934,1.035,3935,1.035,3936,5.142,3937,4.325,3938,3.096,3939,1.035,3940,3.569,3941,1.035,3942,1.861,3943,1.035,3944,1.035,3945,1.035,3946,1.035,3947,1.035,3948,2.535,3949,2.535,3950,1.035,3951,1.035,3952,1.861,3953,1.861,3954,1.861,3955,1.035,3956,1.861,3957,1.035,3958,1.035,3959,1.035,3960,1.035,3961,1.035,3962,1.035,3963,2.535,3964,1.035,3965,1.035,3966,6.028,3967,1.035,3968,1.035,3969,1.035,3970,3.569,3971,3.569,3972,1.035,3973,1.035,3974,2.535,3975,1.035,3976,1.035,3977,3.096,3978,1.035,3979,1.861,3980,1.035,3981,1.035,3982,1.035,3983,1.035,3984,1.035,3985,1.861,3986,1.861,3987,1.035,3988,2.535,3989,1.035,3990,1.035,3991,1.861,3992,1.035,3993,1.035,3994,1.035,3995,1.035,3996,1.861,3997,1.861,3998,3.974,3999,1.035,4000,1.035,4001,1.861,4002,2.535,4003,2.535,4004,3.096,4005,3.096,4006,3.096,4007,1.861,4008,1.035,4009,3.569,4010,3.569,4011,1.035,4012,1.861,4013,1.861,4014,3.569,4015,1.861,4016,3.096,4017,3.096,4018,1.861,4019,2.535,4020,5.883,4021,3.569,4022,1.035,4023,1.035,4024,1.035,4025,2.535,4026,2.535,4027,1.861,4028,1.861,4029,1.035,4030,1.035,4031,1.035,4032,1.861,4033,1.035,4034,1.035,4035,1.035,4036,2.535,4037,1.035,4038,1.035,4039,2.535,4040,1.035,4041,1.861,4042,1.035,4043,1.035,4044,1.035,4045,1.861,4046,1.861,4047,3.974,4048,6.686,4049,2.535,4050,1.861,4051,1.861,4052,1.861,4053,1.861,4054,3.096,4055,1.861,4056,1.035,4057,1.035,4058,1.035,4059,1.035,4060,3.974,4061,1.861,4062,1.035,4063,1.035,4064,1.035,4065,1.035,4066,1.861,4067,1.035,4068,1.861,4069,1.035,4070,3.569,4071,1.035,4072,1.035,4073,1.035,4074,1.035,4075,1.035,4076,1.861,4077,1.035,4078,1.035,4079,1.035,4080,2.535,4081,3.569,4082,3.096,4083,1.861,4084,1.035,4085,1.035,4086,1.035,4087,1.035,4088,1.035,4089,1.861,4090,1.035,4091,1.035,4092,2.535,4093,3.096,4094,1.035,4095,1.035,4096,1.861,4097,1.035,4098,1.035,4099,2.535,4100,1.035,4101,1.035,4102,1.035,4103,1.035,4104,1.035,4105,1.861,4106,1.035,4107,1.035,4108,1.035,4109,1.035,4110,2.535,4111,1.035,4112,1.035,4113,1.035,4114,1.035,4115,3.569,4116,1.035,4117,1.035,4118,3.096,4119,1.035,4120,1.035,4121,1.035,4122,1.035,4123,1.035,4124,1.035,4125,2.535,4126,1.035,4127,1.035,4128,1.035,4129,2.535,4130,1.035,4131,1.035,4132,2.535,4133,1.035,4134,1.861,4135,1.035,4136,1.035,4137,1.035,4138,1.035,4139,1.035,4140,1.035,4141,1.035,4142,1.035,4143,1.861,4144,1.035,4145,1.035,4146,1.035,4147,1.861,4148,1.861,4149,1.035,4150,1.035,4151,2.535,4152,1.035,4153,2.535,4154,1.861,4155,1.035,4156,1.861,4157,1.861,4158,1.035,4159,2.535,4160,4.325,4161,1.035,4162,1.861,4163,1.634,4164,1.035,4165,1.861,4166,1.035,4167,1.035,4168,1.035,4169,1.035,4170,1.035,4171,1.861,4172,1.035,4173,3.096,4174,1.035,4175,3.569,4176,1.035,4177,1.035,4178,1.035,4179,1.035,4180,1.035,4181,1.861,4182,1.861,4183,1.861,4184,2.535,4185,1.035,4186,1.861,4187,1.861,4188,1.035,4189,2.535,4190,1.035,4191,1.861,4192,1.035,4193,1.861,4194,1.035,4195,1.861,4196,1.035,4197,1.035,4198,1.861,4199,6.848,4200,1.861,4201,1.035,4202,3.569,4203,5.142,4204,2.535,4205,1.035,4206,1.035,4207,1.035,4208,3.096,4209,1.035,4210,1.035,4211,2.535,4212,1.861,4213,1.035,4214,1.035,4215,1.035,4216,1.035,4217,1.035,4218,1.035,4219,1.035,4220,1.035,4221,3.096,4222,1.861,4223,1.861,4224,1.035,4225,1.035,4226,2.535,4227,1.035,4228,1.861,4229,2.535,4230,1.861,4231,1.035,4232,1.035,4233,1.035,4234,1.035,4235,1.861,4236,2.535,4237,1.035,4238,1.035,4239,1.861,4240,1.035,4241,1.035,4242,1.035,4243,1.035,4244,1.035,4245,1.035,4246,2.535,4247,1.861,4248,1.035,4249,1.035,4250,3.096,4251,1.035,4252,2.535,4253,1.035,4254,1.035,4255,1.861,4256,1.035,4257,1.035,4258,1.035,4259,2.535,4260,1.861,4261,1.035,4262,4.325,4263,1.861,4264,2.535,4265,3.096,4266,1.035,4267,1.035,4268,1.861,4269,1.035,4270,2.535,4271,1.035,4272,1.861,4273,1.035,4274,1.035,4275,1.035,4276,1.035,4277,2.535,4278,1.035,4279,1.861,4280,2.535,4281,1.861,4282,1.035,4283,1.861,4284,1.035,4285,1.035,4286,1.861,4287,1.861,4288,1.035,4289,1.035,4290,1.861,4291,1.035,4292,1.035,4293,1.035,4294,1.035,4295,1.035,4296,1.035,4297,1.035,4298,1.035,4299,1.035,4300,1.035,4301,1.861,4302,2.535,4303,1.035,4304,1.035,4305,1.035,4306,1.035,4307,1.035,4308,1.861,4309,1.035,4310,1.035,4311,1.035,4312,1.035,4313,1.035,4314,1.035,4315,1.035,4316,1.035,4317,1.035,4318,1.035,4319,1.035,4320,1.035,4321,1.035,4322,3.096,4323,1.035,4324,1.861,4325,1.035,4326,1.035,4327,1.035,4328,1.035,4329,1.035,4330,1.035,4331,1.035,4332,1.035,4333,1.035,4334,1.035,4335,2.535,4336,1.035,4337,1.035,4338,1.035,4339,1.035,4340,1.861,4341,1.035,4342,1.035,4343,1.035,4344,1.035,4345,1.035,4346,1.861,4347,1.861,4348,2.535,4349,1.035,4350,1.861,4351,1.035,4352,1.035,4353,1.035,4354,1.035,4355,2.535,4356,1.861,4357,1.035,4358,1.861,4359,1.861,4360,1.861,4361,1.035,4362,1.035,4363,1.035,4364,1.035,4365,1.035,4366,1.035,4367,1.861,4368,1.035,4369,1.035,4370,1.861,4371,1.035,4372,2.535,4373,1.035,4374,1.035,4375,1.035,4376,1.035,4377,1.035,4378,1.035,4379,1.035,4380,1.035,4381,1.035,4382,1.035,4383,1.035,4384,1.035,4385,1.035,4386,1.035,4387,1.035,4388,1.035,4389,1.035,4390,1.035,4391,1.035,4392,1.035,4393,1.035,4394,1.035,4395,1.035,4396,1.035,4397,1.035,4398,1.035,4399,1.035,4400,1.035,4401,1.035,4402,1.035,4403,2.535,4404,1.861,4405,1.035,4406,1.035,4407,1.035,4408,1.035,4409,1.035,4410,1.861,4411,1.035,4412,1.035,4413,1.861,4414,1.861,4415,1.035,4416,1.035,4417,1.035,4418,1.035,4419,1.035,4420,1.035,4421,1.035,4422,1.035,4423,1.035,4424,1.035,4425,1.035,4426,1.035,4427,1.035,4428,1.035,4429,1.035,4430,1.035,4431,1.035,4432,1.035,4433,1.035,4434,1.035,4435,1.035,4436,1.035,4437,1.035,4438,1.035]],["title/modules.html",[473,2.104]],["body/modules.html",[24,0.009,85,0.007,86,0.009,87,0.007,147,6.37,472,4.48,473,2.206,481,4.188,482,2.994,483,4.188,663,4.48,667,4.188,764,4.48,770,4.188,778,4.857,916,4.48,920,4.188,2718,6.936,2720,4.48,2724,4.188,2865,4.48,2869,4.188,3083,4.48,3087,4.188,3384,4.188,4439,8.699,4440,8.926,4441,8.641]],["title/overview.html",[3681,4.621]],["body/overview.html",[2,1.636,24,0.011,77,1.486,83,0.887,85,0.005,86,0.007,87,0.005,90,1.956,203,2,204,1.398,314,1.078,320,2.059,322,2,325,2,327,2.493,329,2,331,2,333,2,336,2.493,339,2.493,341,2,343,2,345,2,347,2.493,350,2,351,2,353,2.493,356,2.493,358,2,360,1.242,361,2.422,363,2,365,2,471,1.048,472,6.263,473,1.441,474,1.956,475,2.121,476,2.035,477,2.121,478,3.484,479,3.484,480,3.484,481,4.404,482,4.379,483,5.71,484,2.963,485,2.121,486,1.883,663,5.82,664,3.484,665,3.484,666,3.484,667,4.404,705,2.441,764,6.291,765,3.484,766,3.484,767,3.484,768,3.484,769,3.484,770,4.404,771,4.404,772,4.149,773,4.404,774,4.404,877,3.165,916,5.99,917,3.484,918,3.484,919,3.484,920,4.404,927,1.956,1119,2.322,1681,2.736,2720,5.82,2721,3.484,2722,3.484,2723,3.484,2724,4.404,2805,5.333,2806,2.926,2865,5.99,2866,3.484,2867,3.484,2868,3.484,2869,4.404,2879,3.484,2880,3.484,2881,3.484,2882,5.333,2883,5.333,3083,5.99,3084,3.484,3085,3.484,3086,3.484,3087,4.404,3380,3.484,3381,3.484,3382,3.484,3383,3.484,3384,4.404,3681,3.165,4163,3.484,4442,3.97,4443,3.97,4444,5.545]],["title/routes.html",[534,2.749]],["body/routes.html",[24,0.01,85,0.009,86,0.01,87,0.009,534,3.309]],["title/miscellaneous/variables.html",[3548,2.597,3655,4.062]],["body/miscellaneous/variables.html",[1,0.881,6,1.161,8,0.913,9,1.446,10,0.153,11,0.301,16,1.233,17,1.1,18,1.233,19,0.999,20,1.161,21,0.641,22,2.688,24,0.011,25,2.222,26,0.486,27,0.4,28,1.752,31,1.046,32,1.319,38,0.763,39,1.233,40,1.233,41,1.233,42,1.161,43,1.161,44,0.999,45,1.233,47,1.1,48,1.715,49,1.233,50,1.233,51,1.233,52,0.999,53,1.233,54,1.046,64,2.152,67,2.401,70,0.999,72,0.917,73,1.919,75,1.842,76,1.161,77,1.446,78,2.933,79,1.944,80,1.476,81,1.233,82,1.233,83,0.4,85,0.002,86,0.004,87,0.002,91,1.426,93,1.233,95,1.752,100,0.813,116,1.944,120,2.388,139,1.719,148,2.219,160,2.401,166,3.038,171,2.382,173,2.388,174,3.749,175,2.388,176,1.57,177,2.388,178,2.064,179,1.944,184,0.486,198,0.881,208,0.576,298,0.956,311,2.508,357,0.435,359,0.576,374,2.064,531,1.233,541,3.346,543,3.749,544,3.532,547,1.944,548,2.157,572,4.338,590,2.508,658,1.672,705,1.1,712,1.944,784,1.426,787,2.208,800,3.391,809,1.319,810,1.426,811,1.426,851,1.421,873,2.848,874,1.944,876,1.1,886,0.737,1078,1.319,1119,1.046,1216,2.064,1217,2.848,1219,2.848,1254,1.319,1263,1.233,1279,1.233,1447,2.208,1526,2.208,1656,2.208,1657,1.426,1658,5.021,1668,3.966,1669,1.57,1670,2.388,1671,1.57,1672,2.388,1673,1.426,1674,3.602,1675,1.426,1676,2.848,1677,1.426,1678,1.426,1679,2.388,1680,1.426,1681,1.233,1682,1.426,1683,1.426,1684,1.426,1685,1.319,1686,1.426,1687,1.426,1688,1.233,1689,1.426,1690,2.629,1691,3.966,1692,1.57,1693,1.57,1694,1.57,1695,1.57,1696,1.57,1697,1.57,1698,1.57,1699,1.57,1700,1.57,1701,1.57,1702,1.57,1703,1.57,1704,1.57,1705,1.57,1706,1.57,1707,2.629,1708,1.57,1709,1.57,1710,2.629,1711,1.57,1712,1.57,1713,1.57,1714,3.391,1715,3.391,1716,1.57,1717,2.629,1718,1.57,1719,2.629,1720,2.629,1721,2.629,1722,1.57,1723,1.57,1724,1.57,1725,1.57,1726,1.57,1727,1.57,1728,1.57,1729,1.57,1730,1.57,1731,1.57,1732,1.57,1733,1.57,1734,1.57,1735,1.57,1736,1.57,1737,1.57,1738,1.57,1739,1.57,1740,1.57,1741,1.57,1742,1.57,1743,1.57,1744,1.57,1745,1.57,1746,1.57,1747,1.57,1748,1.57,1749,1.57,1750,1.57,1751,1.57,1752,1.57,1753,1.57,1754,1.57,1755,2.629,1756,1.57,1757,1.57,1758,1.57,1759,1.57,1760,1.57,1761,1.57,1762,1.57,1763,1.57,1764,1.57,1765,1.57,1766,1.57,1767,1.57,1768,2.629,1769,1.57,1770,1.57,1771,1.57,1772,2.629,1773,1.57,1774,1.57,1775,1.57,1776,1.57,1777,1.57,1778,1.57,1779,1.57,1780,1.57,1781,1.57,1782,1.57,1783,1.57,1784,1.57,1785,1.57,1786,1.57,1787,1.57,1788,1.57,1789,1.57,1790,1.57,1791,1.57,1792,1.57,1793,1.57,1794,1.57,1795,1.57,1796,1.57,1797,1.57,1798,1.57,1799,3.391,1800,1.57,1801,1.57,1802,1.57,1803,1.57,1804,1.57,1805,1.57,1806,1.57,1807,1.57,1808,1.57,1809,1.57,1810,1.57,1811,1.57,1812,1.57,1813,2.629,1814,1.57,1815,1.57,1816,1.57,1817,1.57,1818,1.57,1819,1.57,1820,1.57,1821,2.629,1822,1.57,1823,1.57,1824,1.57,1825,1.57,1826,1.57,1827,1.426,1828,1.57,1829,1.57,1830,1.57,1831,1.57,1832,0.999,1833,1.57,1834,1.57,1835,1.57,1836,1.57,1837,1.57,1838,1.57,1839,1.57,1840,2.629,1841,1.57,1842,1.57,1843,2.629,1844,1.57,1845,1.57,1846,1.57,1847,1.57,1848,1.57,1849,1.57,1850,1.57,1851,1.57,1852,1.57,1853,1.57,1854,1.57,1855,1.57,1856,1.57,1857,1.57,1858,1.57,1859,1.57,1860,3.391,1861,3.966,1862,1.57,1863,1.57,1864,1.57,1865,1.57,1866,1.57,1867,1.57,1868,1.57,1869,1.57,1870,1.57,1871,1.57,1872,1.57,1873,1.57,1874,1.57,1875,1.57,1876,1.57,1877,1.57,1878,1.57,1879,1.57,1880,1.57,1881,1.57,1882,1.57,1883,1.57,1884,1.57,1885,1.57,1886,1.57,1887,1.57,1888,1.57,1889,1.57,1890,1.57,1891,1.57,1892,1.57,1893,1.57,1894,1.57,1895,1.57,1896,1.57,1897,1.57,1898,1.57,1899,1.57,1900,1.57,1901,1.57,1902,1.57,1903,1.57,1904,1.57,1905,1.57,1906,1.57,1907,2.629,1908,3.391,1909,1.57,1910,1.57,1911,1.57,1912,1.57,1913,3.391,1914,3.391,1915,1.57,1916,2.629,1917,1.57,1918,1.57,1919,1.57,1920,1.57,1921,1.57,1922,1.57,1923,1.57,1924,1.57,1925,1.57,1926,1.57,1927,1.57,1928,1.57,1929,1.57,1930,1.57,1931,3.391,1932,1.57,1933,1.57,1934,1.57,1935,1.57,1936,1.57,1937,1.57,1938,1.57,1939,1.57,1940,1.57,1941,1.57,1942,1.57,1943,1.57,1944,1.57,1945,1.57,1946,1.57,1947,1.57,1948,1.57,1949,1.57,1950,2.208,1951,2.629,1952,2.629,1953,2.629,1954,2.629,1955,1.57,1956,1.57,1957,1.57,1958,1.57,1959,1.426,1960,1.57,1961,1.57,1962,1.57,1963,1.57,1964,1.57,1965,1.57,1966,1.57,1967,1.57,1968,1.57,1969,1.57,1970,1.57,1971,1.57,1972,1.57,1973,1.57,1974,1.57,1975,1.57,1976,1.57,1977,1.57,1978,1.57,1979,1.426,1980,1.57,1981,1.57,1982,1.57,1983,1.57,1984,1.57,1985,1.57,1986,1.57,1987,1.57,1988,1.57,1989,1.57,1990,1.57,1991,1.57,1992,1.57,1993,1.57,1994,1.57,1995,1.57,1996,2.629,1997,3.966,1998,1.57,1999,1.57,2000,1.57,2001,1.57,2002,1.57,2003,1.57,2004,1.57,2005,1.57,2006,1.57,2007,1.57,2008,1.57,2009,1.57,2010,1.57,2011,1.57,2012,1.57,2013,1.57,2014,1.57,2015,1.57,2016,1.57,2017,1.57,2018,1.57,2019,1.57,2020,1.57,2021,2.629,2022,1.57,2023,1.57,2024,1.57,2025,1.319,2026,1.57,2027,1.57,2028,1.57,2029,1.57,2030,1.57,2031,1.57,2032,1.57,2033,1.57,2034,1.57,2035,1.57,2036,1.57,2037,1.57,2038,1.57,2039,1.57,2040,1.57,2041,1.57,2042,1.57,2043,1.57,2044,1.57,2045,1.57,2046,1.57,2047,1.57,2048,1.57,2049,1.57,2050,1.57,2051,1.57,2052,1.57,2053,1.57,2054,1.57,2055,2.629,2056,1.57,2057,1.57,2058,1.57,2059,1.57,2060,1.57,2061,1.57,2062,1.57,2063,1.57,2064,2.629,2065,1.57,2066,1.426,2067,1.57,2068,1.57,2069,1.57,2070,1.57,2071,1.57,2072,1.57,2073,1.57,2074,1.57,2075,1.57,2076,2.629,2077,1.57,2078,1.57,2079,1.57,2080,1.57,2081,1.57,2082,1.57,2083,1.57,2084,1.57,2085,1.57,2086,1.57,2087,1.57,2088,1.57,2089,1.57,2090,1.57,2091,1.57,2092,1.57,2093,1.57,2094,2.629,2095,2.388,2096,1.57,2097,1.57,2098,1.57,2099,1.57,2100,1.57,2101,1.57,2102,1.57,2103,1.57,2104,1.57,2105,1.57,2106,1.57,2107,1.57,2108,1.57,2109,1.57,2110,1.57,2111,1.57,2112,1.57,2113,1.57,2114,1.57,2115,1.426,2116,1.57,2117,1.57,2118,1.57,2119,1.57,2120,1.57,2121,1.57,2122,1.57,2123,1.57,2124,1.57,2125,1.57,2126,1.57,2127,1.57,2128,1.57,2129,1.57,2130,1.57,2131,1.57,2132,1.57,2133,1.57,2134,1.426,2135,1.57,2136,1.57,2137,1.57,2138,1.57,2139,1.57,2140,1.57,2141,1.57,2142,1.57,2143,1.57,2144,1.57,2145,1.57,2146,1.57,2147,1.57,2148,1.57,2149,1.57,2150,1.57,2151,1.57,2152,1.57,2153,2.629,2154,1.57,2155,1.57,2156,1.57,2157,1.57,2158,1.57,2159,1.57,2160,1.57,2161,1.426,2162,1.57,2163,1.426,2164,1.57,2165,1.57,2166,1.57,2167,1.57,2168,1.57,2169,1.426,2170,1.57,2171,1.57,2172,1.57,2173,1.57,2174,1.57,2175,1.57,2176,1.57,2177,1.57,2178,1.426,2179,1.57,2180,1.57,2181,1.57,2182,1.57,2183,1.57,2184,1.57,2185,1.57,2186,1.426,2187,1.57,2188,1.426,2189,1.57,2190,1.57,2191,2.388,2192,1.57,2193,1.57,2194,1.57,2195,1.57,2196,1.57,2197,1.57,2198,1.57,2199,1.57,2200,1.57,2201,1.57,2202,1.57,2203,1.57,2204,1.57,2205,1.57,2206,1.57,2207,1.57,2208,1.57,2209,1.57,2210,1.57,2211,1.57,2212,1.57,2213,1.57,2214,1.57,2215,1.57,2216,1.57,2217,1.57,2218,1.57,2219,1.57,2220,1.57,2221,1.57,2222,1.57,2223,1.57,2224,1.57,2225,1.57,2226,1.57,2227,1.57,2228,1.57,2229,1.57,2230,1.57,2231,1.57,2232,1.57,2233,1.57,2234,1.57,2235,1.57,2236,1.57,2237,1.57,2238,1.57,2239,2.629,2240,1.57,2241,1.57,2242,1.57,2243,1.57,2244,1.57,2245,1.57,2246,1.57,2247,1.57,2248,1.57,2249,1.57,2250,1.57,2251,1.57,2252,1.57,2253,1.57,2254,1.57,2255,1.57,2256,1.57,2257,3.391,2258,1.57,2259,1.57,2260,1.57,2261,1.57,2262,1.57,2263,1.57,2264,1.57,2265,1.57,2266,1.57,2267,1.57,2268,1.57,2269,1.57,2270,1.57,2271,1.57,2272,1.57,2273,1.57,2274,1.57,2275,1.57,2276,1.57,2277,1.57,2278,1.57,2279,1.57,2280,1.57,2281,1.57,2282,1.57,2283,1.57,2284,1.57,2285,1.57,2286,1.57,2287,1.57,2288,1.57,2289,1.57,2290,1.57,2291,1.57,2292,1.57,2293,1.57,2294,1.57,2295,1.57,2296,1.57,2297,1.57,2298,1.57,2299,1.57,2300,1.57,2301,1.57,2302,1.57,2303,1.57,2304,1.57,2305,1.57,2306,1.57,2307,1.57,2308,1.57,2309,1.57,2310,1.57,2311,1.57,2312,1.57,2313,1.57,2314,1.57,2315,1.57,2316,1.57,2317,1.57,2318,1.57,2319,1.57,2320,1.57,2321,1.57,2322,1.57,2323,1.57,2324,1.57,2325,1.57,2326,1.57,2327,1.57,2328,1.57,2329,1.57,2330,1.57,2331,1.57,2332,1.57,2333,1.57,2334,1.57,2335,1.57,2336,1.57,2337,1.57,2338,1.57,2339,1.57,2340,1.57,2341,1.57,2342,1.57,2343,1.57,2344,1.57,2345,1.57,2346,2.629,2347,1.57,2348,2.388,2349,1.57,2350,1.57,2351,1.57,2352,1.57,2353,1.57,2354,1.57,2355,1.57,2356,1.57,2357,1.57,2358,1.57,2359,1.57,2360,1.57,2361,1.57,2362,1.57,2363,1.57,2364,1.57,2365,1.426,2366,1.57,2367,1.57,2368,1.57,2369,1.57,2370,1.57,2371,1.57,2372,1.57,2373,1.57,2374,1.57,2375,1.57,2376,1.57,2377,2.629,2378,2.629,2379,1.57,2380,1.57,2381,1.57,2382,1.57,2383,1.57,2384,1.57,2385,2.388,2386,1.57,2387,1.57,2388,1.57,2389,1.57,2390,1.57,2391,1.57,2392,1.57,2393,1.57,2394,1.57,2395,1.57,2396,1.57,2397,1.57,2398,1.57,2399,1.57,2400,1.57,2401,1.57,2402,1.57,2403,1.57,2404,1.57,2405,1.57,2406,1.57,2407,1.426,2408,1.426,2409,1.57,2410,1.57,2411,1.57,2412,2.629,2413,1.57,2414,1.57,2415,1.57,2416,1.57,2417,1.57,2418,1.57,2419,1.57,2420,2.629,2421,1.57,2422,1.57,2423,1.57,2424,1.57,2425,1.57,2426,1.57,2427,1.57,2428,1.57,2429,1.57,2430,1.57,2431,1.57,2432,1.57,2433,1.57,2434,1.57,2435,1.57,2436,1.57,2437,1.57,2438,1.57,2439,1.57,2440,1.57,2441,1.57,2442,1.57,2443,1.57,2444,1.57,2445,1.57,2446,1.57,2447,1.426,2448,1.57,2449,1.57,2450,1.57,2451,1.57,2452,1.57,2453,2.388,2454,1.57,2455,1.57,2456,1.57,2457,1.57,2458,1.57,2459,1.57,2460,1.57,2461,1.426,2462,1.57,2463,1.57,2464,1.57,2465,1.57,2466,1.57,2467,1.57,2468,1.57,2469,1.57,2470,1.57,2471,1.57,2472,1.57,2473,1.57,2474,1.57,2475,1.57,2476,1.57,2477,1.57,2478,1.57,2479,1.57,2480,1.57,2481,1.57,2482,1.57,2483,1.57,2484,1.57,2485,1.57,2486,1.57,2487,1.57,2488,1.57,2489,1.57,2490,1.57,2491,1.57,2492,1.57,2493,1.57,2494,1.57,2495,1.57,2496,1.57,2497,1.57,2498,1.57,2499,1.57,2500,1.57,2501,1.57,2502,1.57,2503,1.57,2504,1.57,2505,1.57,2506,1.57,2507,1.57,2508,1.57,2509,1.57,2510,1.57,2511,1.57,2512,1.426,2513,1.426,2514,2.388,2515,1.57,2516,1.57,2517,1.57,2518,1.57,2636,1.161,2674,1.233,2965,1.426,2966,3.08,2985,1.57,3180,1.426,3230,2.629,3231,2.388,3472,2.388,3477,1.426,3480,2.629,3490,2.629,3492,3.391,3503,1.57,3513,1.57,3514,1.57,3515,1.57,3548,1.319,3553,1.57,3593,1.426,3641,3.391,3655,1.426,4445,2.995,4446,2.995,4447,6.059,4448,1.789,4449,1.789,4450,1.789,4451,1.789,4452,1.789,4453,1.789,4454,1.789,4455,3.863,4456,3.863,4457,3.863,4458,3.863,4459,3.863,4460,3.863,4461,3.863,4462,3.863,4463,3.863,4464,3.863,4465,3.863,4466,3.863,4467,3.863,4468,3.863,4469,3.863,4470,3.863,4471,3.863,4472,3.863,4473,3.863,4474,3.863,4475,3.863,4476,3.863,4477,3.863,4478,3.863,4479,3.863,4480,1.789,4481,1.789,4482,1.789,4483,1.789,4484,1.789]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":77,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"pipes/TokenRatioPipe.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":637,"title":{},"body":{"components/AdminComponent.html":{}}}],["0.0.7",{"_index":3533,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":3527,"title":{},"body":{"dependencies.html":{}}}],["0.10.2",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["0.12.3",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":638,"title":{},"body":{"components/AdminComponent.html":{}}}],["0/1",{"_index":3474,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3496,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3500,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3499,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":3510,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":3507,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3501,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3502,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":3506,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":3512,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3518,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":3495,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3508,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":3504,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3498,"title":{},"body":{"coverage.html":{}}}],["0/47",{"_index":3505,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3497,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3511,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3509,"title":{},"body":{"coverage.html":{}}}],["04/02/2020",{"_index":3413,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["05/28/2020",{"_index":3424,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["08/16/2020",{"_index":3406,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["0px",{"_index":626,"title":{},"body":{"components/AdminComponent.html":{}}}],["0x51d3c8e2e421604e2b644117a362d589c5434739",{"_index":3444,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["0x9d7c284907acbd4a0ce2ddd0aa69147a921a573d",{"_index":3445,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["0xa686005ce37dce7738436256982c3903f2e4ea8e",{"_index":2927,"title":{},"body":{"interfaces/Token.html":{}}}],["0xc0ffee254729296a45a3885639ac7e10f9d54979",{"_index":188,"title":{},"body":{"classes/AccountIndex.html":{}}}],["0xc86ff893ac40d3950b4d5f94a9b837258b0a9865",{"_index":3405,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["0xea6225212005e86a4490018ded4bf37f3e772161",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0xeb3907ecad74a0013c259d5874ae7f22dcbcc95c",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":198,"title":{"interfaces/Signature-1.html":{}},"body":{"classes/AccountIndex.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":3462,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":404,"title":{},"body":{"components/AccountsComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TransactionsComponent.html":{},"license.html":{}}}],["10.2.0",{"_index":3521,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.7",{"_index":3523,"title":{},"body":{"dependencies.html":{}}}],["10/10/2020",{"_index":3429,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["100",{"_index":298,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AppComponent.html":{},"injectables/BlockSyncService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1680,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["1000).tolocaledatestring('en",{"_index":3395,"title":{},"body":{"pipes/UnixDatePipe.html":{}}}],["11",{"_index":3979,"title":{},"body":{"license.html":{}}}],["11/11",{"_index":3487,"title":{},"body":{"coverage.html":{}}}],["11/16/2020",{"_index":3419,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["12",{"_index":4444,"title":{},"body":{"overview.html":{}}}],["12987",{"_index":3407,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["13",{"_index":4337,"title":{},"body":{"license.html":{}}}],["14/14",{"_index":3493,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":4162,"title":{},"body":{"license.html":{}}}],["151.002995",{"_index":3448,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["1595537208",{"_index":3442,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["16",{"_index":4163,"title":{},"body":{"license.html":{},"overview.html":{}}}],["17",{"_index":4442,"title":{},"body":{"overview.html":{}}}],["1996",{"_index":3984,"title":{},"body":{"license.html":{}}}],["2",{"_index":1119,"title":{},"body":{"injectables/BlockSyncService.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/TokenRegistry.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":3531,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":3470,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":408,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionsComponent.html":{},"license.html":{}}}],["200",{"_index":1687,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["2007",{"_index":3688,"title":{},"body":{"license.html":{}}}],["2021",{"_index":4410,"title":{},"body":{"license.html":{}}}],["22",{"_index":4443,"title":{},"body":{"overview.html":{}}}],["22.430670",{"_index":3447,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["25412341234",{"_index":3412,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["25412345678",{"_index":3404,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["25462518374",{"_index":3428,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["254700000000",{"_index":81,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["25498765432",{"_index":3418,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["25498769876",{"_index":3423,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["26/26",{"_index":3491,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":4318,"title":{},"body":{"license.html":{}}}],["29",{"_index":3686,"title":{},"body":{"license.html":{}}}],["3",{"_index":705,"title":{},"body":{"components/AppComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0",{"_index":82,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["3.5.1",{"_index":3538,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3464,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":3517,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":4217,"title":{},"body":{"license.html":{}}}],["3000",{"_index":3152,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["300px",{"_index":1355,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["32",{"_index":3312,"title":{},"body":{"injectables/TransactionService.html":{}}}],["39;0xc0ffee254729296a45a3885639ac7e10f9d54979&#39",{"_index":133,"title":{},"body":{"classes/AccountIndex.html":{}}}],["39;2&#39",{"_index":2982,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["39;hello",{"_index":3565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["39;sarafu&#39",{"_index":2976,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["4",{"_index":1681,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.2.1",{"_index":3539,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":3532,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3488,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2571,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["401",{"_index":1018,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["403",{"_index":1410,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["450",{"_index":3420,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["5",{"_index":1685,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["5.0.31",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":3489,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":409,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionsComponent.html":{}}}],["5000",{"_index":2598,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["56",{"_index":1826,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["5621",{"_index":3425,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["56281",{"_index":3414,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["6",{"_index":1688,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"pipes/TokenRatioPipe.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":3540,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3473,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3516,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6b",{"_index":4067,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4087,"title":{},"body":{"license.html":{}}}],["6rem",{"_index":662,"title":{},"body":{"components/AdminComponent.html":{}}}],["7",{"_index":4007,"title":{},"body":{"license.html":{}}}],["7/7",{"_index":3494,"title":{},"body":{"coverage.html":{}}}],["768px",{"_index":703,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["8",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["8/8",{"_index":3463,"title":{},"body":{"coverage.html":{}}}],["8000000",{"_index":3296,"title":{},"body":{"injectables/TransactionService.html":{}}}],["817",{"_index":3430,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["8996",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":3460,"title":{},"body":{"coverage.html":{}}}],["_models",{"_index":621,"title":{},"body":{"components/AdminComponent.html":{}}}],["_pipes/unix",{"_index":2895,"title":{},"body":{"modules/SharedModule.html":{}}}],["abi",{"_index":174,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["abicoder",{"_index":3283,"title":{},"body":{"injectables/TransactionService.html":{}}}],["abicoder.encode",{"_index":3285,"title":{},"body":{"injectables/TransactionService.html":{}}}],["ability",{"_index":4131,"title":{},"body":{"license.html":{}}}],["above",{"_index":2552,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["absence",{"_index":4008,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4392,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4422,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":1299,"title":{},"body":{"classes/CustomValidator.html":{}}}],["abuse",{"_index":3786,"title":{},"body":{"license.html":{}}}],["academy",{"_index":1984,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4222,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":896,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["acceptance",{"_index":4221,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":2780,"title":{},"body":{"guards/RoleGuard.html":{}}}],["acces",{"_index":2425,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":881,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["accessible",{"_index":4289,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":238,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["accompanied",{"_index":4049,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4396,"title":{},"body":{"license.html":{}}}],["accompanying",{"_index":2748,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["accord",{"_index":4006,"title":{},"body":{"license.html":{}}}],["according",{"_index":1463,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["accordingly",{"_index":1393,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["account",{"_index":8,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signature.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"miscellaneous/variables.html":{}}}],["account'},{'name",{"_index":332,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["account.component",{"_index":500,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["account.component.html",{"_index":1215,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.scss",{"_index":1214,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts",{"_index":1213,"title":{},"body":{"components/CreateAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:14",{"_index":1228,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:15",{"_index":1229,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:16",{"_index":1230,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:17",{"_index":1227,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:18",{"_index":1226,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:19",{"_index":1225,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:20",{"_index":1222,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:28",{"_index":1223,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:60",{"_index":1232,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.component.ts:64",{"_index":1224,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["account.type",{"_index":458,"title":{},"body":{"components/AccountsComponent.html":{}}}],["account/create",{"_index":499,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/CreateAccountComponent.html":{},"coverage.html":{}}}],["accountant",{"_index":2068,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["accountdetails",{"_index":1,"title":{"interfaces/AccountDetails.html":{}},"body":{"interfaces/AccountDetails.html":{},"components/AccountsComponent.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountdetailscomponent",{"_index":320,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountindex",{"_index":89,"title":{"classes/AccountIndex.html":{}},"body":{"classes/AccountIndex.html":{},"coverage.html":{}}}],["accountinfo",{"_index":3269,"title":{},"body":{"injectables/TransactionService.html":{}}}],["accountinfo.vcard",{"_index":3271,"title":{},"body":{"injectables/TransactionService.html":{}}}],["accounts",{"_index":94,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SidebarComponent.html":{}}}],["accounts'},{'name",{"_index":323,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["accounts.component.html",{"_index":372,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounts.component.scss",{"_index":371,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounts.push(account",{"_index":200,"title":{},"body":{"classes/AccountIndex.html":{}}}],["accounts/${strip0x(account.identities.evm[`bloxberg:${environment.bloxbergchainid}`][0",{"_index":454,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounts/${strip0x(res.identities.evm[`bloxberg:${environment.bloxbergchainid}`][0",{"_index":303,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["accountscomponent",{"_index":322,"title":{"components/AccountsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountsearchcomponent",{"_index":203,"title":{"components/AccountSearchComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountsmodule",{"_index":472,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsroutingmodule",{"_index":481,"title":{"modules/AccountsRoutingModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["accountstype",{"_index":373,"title":{},"body":{"components/AccountsComponent.html":{}}}],["accounttype",{"_index":461,"title":{},"body":{"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{}}}],["accounttypes",{"_index":374,"title":{},"body":{"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["achieve",{"_index":4402,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3946,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4268,"title":{},"body":{"license.html":{}}}],["action",{"_index":541,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action.action",{"_index":655,"title":{},"body":{"components/AdminComponent.html":{}}}],["action.approval",{"_index":659,"title":{},"body":{"components/AdminComponent.html":{}}}],["action.id",{"_index":2556,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["action.role",{"_index":654,"title":{},"body":{"components/AdminComponent.html":{}}}],["action.user",{"_index":653,"title":{},"body":{"components/AdminComponent.html":{}}}],["actions",{"_index":590,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["actions.find((action",{"_index":2555,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["activatedroutesnapshot",{"_index":893,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["activatedroutestub",{"_index":550,"title":{"classes/ActivatedRouteStub.html":{}},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["activateroute",{"_index":554,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["active",{"_index":908,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Settings.html":{},"interfaces/W3.html":{}}}],["activities",{"_index":3864,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4314,"title":{},"body":{"license.html":{}}}],["actual",{"_index":4294,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":369,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["actually",{"_index":4109,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3837,"title":{},"body":{"license.html":{}}}],["add",{"_index":562,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/AuthComponent.html":{},"license.html":{}}}],["add0x",{"_index":3223,"title":{},"body":{"injectables/TransactionService.html":{}}}],["add0x(tohex(tx.serializerlp",{"_index":3317,"title":{},"body":{"injectables/TransactionService.html":{}}}],["added",{"_index":2915,"title":{},"body":{"interfaces/Staff.html":{},"license.html":{}}}],["additional",{"_index":4020,"title":{},"body":{"license.html":{}}}],["address",{"_index":121,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"license.html":{}}}],["addressed",{"_index":3834,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":162,"title":{},"body":{"classes/AccountIndex.html":{}}}],["addressof",{"_index":2967,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["addressof(&#39;sarafu&#39",{"_index":2977,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["addressof('sarafu",{"_index":2986,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["addressof(identifier",{"_index":2972,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["addresssearchform",{"_index":224,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["addresssearchformstub",{"_index":241,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["addresssearchloading",{"_index":225,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["addresssearchsubmitted",{"_index":226,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["addtoaccountregistry",{"_index":107,"title":{},"body":{"classes/AccountIndex.html":{}}}],["addtoaccountregistry(&#39;0xc0ffee254729296a45a3885639ac7e10f9d54979&#39",{"_index":136,"title":{},"body":{"classes/AccountIndex.html":{}}}],["addtoaccountregistry('0xc0ffee254729296a45a3885639ac7e10f9d54979",{"_index":189,"title":{},"body":{"classes/AccountIndex.html":{}}}],["addtoaccountregistry(address",{"_index":125,"title":{},"body":{"classes/AccountIndex.html":{}}}],["addtoken",{"_index":2994,"title":{},"body":{"injectables/TokenService.html":{}}}],["addtoken(token",{"_index":3002,"title":{},"body":{"injectables/TokenService.html":{}}}],["addtransaction",{"_index":3183,"title":{},"body":{"injectables/TransactionService.html":{}}}],["addtransaction(transaction",{"_index":3192,"title":{},"body":{"injectables/TransactionService.html":{}}}],["addtrusteduser",{"_index":933,"title":{},"body":{"injectables/AuthService.html":{}}}],["addtrusteduser(user",{"_index":951,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":548,"title":{},"body":{"interfaces/Action.html":{},"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"modules/PagesRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"classes/UserServiceStub.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["admin's",{"_index":546,"title":{},"body":{"interfaces/Action.html":{}}}],["admin'},{'name",{"_index":326,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["admin.component.html",{"_index":589,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.scss",{"_index":588,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincomponent",{"_index":325,"title":{"components/AdminComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminmodule",{"_index":663,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":667,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adopted",{"_index":3982,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4139,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4384,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4140,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4335,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4251,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3943,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":3330,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["again",{"_index":728,"title":{},"body":{"components/AppComponent.html":{}}}],["against",{"_index":3597,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["age",{"_index":13,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["agent",{"_index":2066,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["aggregate",{"_index":4036,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4330,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4371,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4280,"title":{},"body":{"license.html":{}}}],["agrovet",{"_index":2349,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["aim",{"_index":3782,"title":{},"body":{"license.html":{}}}],["airtime",{"_index":2428,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["alert('access",{"_index":1412,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["alert('account",{"_index":304,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["algo",{"_index":58,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["algorithm",{"_index":56,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["alleging",{"_index":4258,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3804,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":1414,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"license.html":{}}}],["allows",{"_index":96,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["along",{"_index":4010,"title":{},"body":{"license.html":{}}}],["alpha.6",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["already",{"_index":141,"title":{},"body":{"classes/AccountIndex.html":{},"license.html":{}}}],["alternative",{"_index":4063,"title":{},"body":{"license.html":{}}}],["although",{"_index":3778,"title":{},"body":{"license.html":{}}}],["amani",{"_index":1716,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["amount",{"_index":1195,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["ancillary",{"_index":4224,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3763,"title":{},"body":{"license.html":{}}}],["andshow",{"_index":4426,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1078,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":620,"title":{},"body":{"components/AdminComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3522,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":3614,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":490,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":786,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/TransactionService.html":{}}}],["angular/compiler",{"_index":3524,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":271,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"pipes/UnixDatePipe.html":{},"injectables/Web3Service.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":273,"title":{},"body":{"components/AccountSearchComponent.html":{},"modules/AccountsModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/OrganizationComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3525,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":512,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/card",{"_index":514,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/checkbox",{"_index":504,"title":{},"body":{"modules/AccountsModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/core",{"_index":523,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/CustomErrorStateMatcher.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/dialog",{"_index":1334,"title":{},"body":{"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":509,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/icon",{"_index":516,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/input",{"_index":507,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/menu",{"_index":2877,"title":{},"body":{"modules/SettingsModule.html":{}}}],["angular/material/paginator",{"_index":420,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/progress",{"_index":525,"title":{},"body":{"modules/AccountsModule.html":{}}}],["angular/material/radio",{"_index":2875,"title":{},"body":{"modules/SettingsModule.html":{}}}],["angular/material/select",{"_index":518,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/sidenav",{"_index":3094,"title":{},"body":{"modules/TokensModule.html":{}}}],["angular/material/snack",{"_index":530,"title":{},"body":{"modules/AccountsModule.html":{},"components/TransactionDetailsComponent.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/sort",{"_index":421,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/table",{"_index":419,"title":{},"body":{"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{}}}],["angular/material/tabs",{"_index":521,"title":{},"body":{"modules/AccountsModule.html":{}}}],["angular/material/toolbar",{"_index":3096,"title":{},"body":{"modules/TokensModule.html":{}}}],["angular/platform",{"_index":777,"title":{},"body":{"modules/AppModule.html":{},"pipes/SafePipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":276,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsRoutingModule.html":{},"classes/ActivatedRouteStub.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"modules/PagesRoutingModule.html":{},"guards/RoleGuard.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/TokensComponent.html":{},"modules/TokensRoutingModule.html":{},"components/TransactionDetailsComponent.html":{},"modules/TransactionsRoutingModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":711,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":615,"title":{},"body":{"components/AdminComponent.html":{}}}],["animate('225ms",{"_index":634,"title":{},"body":{"components/AdminComponent.html":{}}}],["animations",{"_index":622,"title":{},"body":{"components/AdminComponent.html":{}}}],["anti",{"_index":3969,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4017,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3850,"title":{},"body":{"license.html":{}}}],["api",{"_index":2522,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["app",{"_index":218,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":674,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":3633,"title":{},"body":{"index.html":{}}}],["app/_eth",{"_index":3022,"title":{},"body":{"injectables/TokenService.html":{}}}],["app/_guards",{"_index":789,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app/_helpers",{"_index":274,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{},"injectables/RegistryService.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["app/_helpers/global",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{}}}],["app/_interceptors",{"_index":793,"title":{},"body":{"modules/AppModule.html":{}}}],["app/_models",{"_index":425,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TokenDetailsComponent.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["app/_models/account",{"_index":1198,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["app/_models/staff",{"_index":2849,"title":{},"body":{"components/SettingsComponent.html":{}}}],["app/_pgp",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/KeystoreService.html":{}}}],["app/_pgp/pgp",{"_index":2675,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["app/_services",{"_index":275,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["app/_services/auth.service",{"_index":3229,"title":{},"body":{"injectables/TransactionService.html":{}}}],["app/_services/error",{"_index":847,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["app/_services/keystore.service",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["app/_services/logging.service",{"_index":849,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TransactionService.html":{}}}],["app/_services/registry.service",{"_index":1126,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["app/_services/transaction.service",{"_index":1124,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["app/_services/user.service",{"_index":3218,"title":{},"body":{"injectables/TransactionService.html":{}}}],["app/_services/web3.service",{"_index":170,"title":{},"body":{"classes/AccountIndex.html":{},"injectables/BlockSyncService.html":{},"injectables/RegistryService.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{}}}],["app/app",{"_index":780,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":781,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/_directives/password",{"_index":924,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/auth/auth",{"_index":922,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/auth/auth.component",{"_index":923,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["app/shared/_directives/menu",{"_index":2888,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/_pipes/safe.pipe",{"_index":2893,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/_pipes/token",{"_index":2890,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/error",{"_index":1349,"title":{},"body":{"injectables/ErrorDialogService.html":{},"modules/SharedModule.html":{}}}],["app/shared/footer/footer.component",{"_index":2886,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/shared.module",{"_index":494,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["app/shared/sidebar/sidebar.component",{"_index":2887,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/shared/topbar/topbar.component",{"_index":2885,"title":{},"body":{"modules/SharedModule.html":{}}}],["appcomponent",{"_index":327,"title":{"components/AppComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":3856,"title":{},"body":{"license.html":{}}}],["application",{"_index":167,"title":{},"body":{"classes/AccountIndex.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{}}}],["application/json;charset=utf",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{}}}],["applications",{"_index":4434,"title":{},"body":{"license.html":{}}}],["applied",{"_index":3811,"title":{},"body":{"license.html":{}}}],["applies",{"_index":3718,"title":{},"body":{"license.html":{}}}],["apply",{"_index":3722,"title":{},"body":{"license.html":{}}}],["appmenuselection",{"_index":1626,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["appmenuselection]'},{'name",{"_index":362,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["appmenutoggle",{"_index":1648,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["appmenutoggle]'},{'name",{"_index":364,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["appmodule",{"_index":764,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppasswordtoggle",{"_index":2741,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["apppasswordtoggle]'},{'name",{"_index":366,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["appropriate",{"_index":1461,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["appropriately",{"_index":4000,"title":{},"body":{"license.html":{}}}],["approuterlink",{"_index":368,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["approutingmodule",{"_index":770,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approval",{"_index":543,"title":{},"body":{"interfaces/Action.html":{},"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["approvalstatus",{"_index":591,"title":{},"body":{"components/AdminComponent.html":{}}}],["approvalstatus(action.approval",{"_index":656,"title":{},"body":{"components/AdminComponent.html":{}}}],["approvalstatus(status",{"_index":596,"title":{},"body":{"components/AdminComponent.html":{}}}],["approve",{"_index":612,"title":{},"body":{"components/AdminComponent.html":{}}}],["approveaction",{"_index":592,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{}}}],["approveaction(action",{"_index":598,"title":{},"body":{"components/AdminComponent.html":{}}}],["approveaction(action.id",{"_index":647,"title":{},"body":{"components/AdminComponent.html":{}}}],["approveaction(id",{"_index":3431,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["approved",{"_index":644,"title":{},"body":{"components/AdminComponent.html":{},"classes/UserServiceStub.html":{}}}],["approximates",{"_index":4391,"title":{},"body":{"license.html":{}}}],["area",{"_index":44,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Signature.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["area.tolowercase().split",{"_index":1560,"title":{},"body":{"injectables/LocationService.html":{}}}],["area_name",{"_index":45,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["area_type",{"_index":46,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["areanames",{"_index":1216,"title":{},"body":{"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["areanames[key].includes(keyword",{"_index":1557,"title":{},"body":{"injectables/LocationService.html":{}}}],["areanameslist",{"_index":1524,"title":{},"body":{"injectables/LocationService.html":{}}}],["areanamessubject",{"_index":1525,"title":{},"body":{"injectables/LocationService.html":{}}}],["areatypes",{"_index":1526,"title":{},"body":{"injectables/LocationService.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["areatypes[key].includes(keyword",{"_index":1563,"title":{},"body":{"injectables/LocationService.html":{}}}],["areatypeslist",{"_index":1527,"title":{},"body":{"injectables/LocationService.html":{}}}],["areatypessubject",{"_index":1528,"title":{},"body":{"injectables/LocationService.html":{}}}],["args",{"_index":2811,"title":{},"body":{"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{}}}],["arguments",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["arise",{"_index":3793,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4375,"title":{},"body":{"license.html":{}}}],["around",{"_index":1635,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["arr",{"_index":3559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arrange",{"_index":4290,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":4302,"title":{},"body":{"license.html":{}}}],["array",{"_index":160,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CreateAccountComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"components/SettingsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arraydata",{"_index":3576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arraysum",{"_index":3467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["arraysum(arr",{"_index":3557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["article",{"_index":3978,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":3635,"title":{},"body":{"index.html":{}}}],["artisan",{"_index":2176,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["artist",{"_index":2065,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["askari",{"_index":2067,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["asking",{"_index":3740,"title":{},"body":{"license.html":{}}}],["assert",{"_index":3758,"title":{},"body":{"license.html":{}}}],["assets",{"_index":4241,"title":{},"body":{"license.html":{}}}],["assets/js/block",{"_index":2771,"title":{},"body":{"injectables/RegistryService.html":{}}}],["assigned",{"_index":2978,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["associated",{"_index":899,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["assume",{"_index":4366,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":4395,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4183,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3814,"title":{},"body":{"license.html":{}}}],["async",{"_index":106,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/KeystoreService.html":{},"classes/PGPSigner.html":{},"injectables/RegistryService.html":{},"components/SettingsComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["attach",{"_index":4404,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4197,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":3774,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":4166,"title":{},"body":{"license.html":{}}}],["auth",{"_index":814,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth'},{'name",{"_index":330,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["auth.component.html",{"_index":826,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":825,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.dev.grassrootseconomics.net",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcomponent",{"_index":329,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticate",{"_index":1021,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":882,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["authguard",{"_index":788,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authheader",{"_index":1019,"title":{},"body":{"injectables/AuthService.html":{}}}],["authmodule",{"_index":916,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4165,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["authorized",{"_index":1035,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["authorizes",{"_index":4263,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":4306,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3721,"title":{},"body":{"license.html":{}}}],["authroutingmodule",{"_index":920,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":685,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/SettingsComponent.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["automated",{"_index":3667,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":4233,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3625,"title":{},"body":{"index.html":{},"license.html":{}}}],["automerge",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["availability",{"_index":129,"title":{},"body":{"classes/AccountIndex.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{}}}],["available",{"_index":147,"title":{},"body":{"classes/AccountIndex.html":{},"components/AppComponent.html":{},"license.html":{},"modules.html":{}}}],["avenue",{"_index":3582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["avocado",{"_index":2192,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":3808,"title":{},"body":{"license.html":{}}}],["await",{"_index":190,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/KeystoreService.html":{},"classes/PGPSigner.html":{},"injectables/RegistryService.html":{},"components/SettingsComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["away",{"_index":3708,"title":{},"body":{"license.html":{}}}],["b",{"_index":3905,"title":{},"body":{"license.html":{}}}],["baby",{"_index":1973,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["babycare",{"_index":1972,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":1395,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["backend.ts",{"_index":1658,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backend.ts:936",{"_index":1662,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["bag",{"_index":2386,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bajia",{"_index":2194,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["baker",{"_index":2069,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["balance",{"_index":14,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AccountsComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"interfaces/Token.html":{},"classes/UserServiceStub.html":{}}}],["bamburi",{"_index":1862,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["banana",{"_index":2199,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bananas",{"_index":2200,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bangla",{"_index":1886,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bangladesh",{"_index":1887,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":531,"title":{},"body":{"modules/AccountsModule.html":{},"interceptors/MockBackendInterceptor.html":{},"components/TransactionDetailsComponent.html":{},"modules/TransactionsModule.html":{},"miscellaneous/variables.html":{}}}],["barafu",{"_index":2344,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["barakoa",{"_index":2351,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["barber",{"_index":2072,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["base",{"_index":1640,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["based",{"_index":3846,"title":{},"body":{"license.html":{}}}],["basic",{"_index":3935,"title":{},"body":{"license.html":{}}}],["bead",{"_index":2387,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["beadwork",{"_index":2070,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["beans",{"_index":2196,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpConfigInterceptor.html":{}}}],["beautician",{"_index":2183,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["beauty",{"_index":2071,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["beba",{"_index":2455,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bebabeba",{"_index":2456,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bed",{"_index":2391,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bedding",{"_index":2389,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["behalf",{"_index":3957,"title":{},"body":{"license.html":{}}}],["behave",{"_index":1267,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["behaviorsubject",{"_index":977,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocationService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["behaviorsubject(false",{"_index":3014,"title":{},"body":{"injectables/TokenService.html":{}}}],["behaviorsubject(this.areanames",{"_index":1541,"title":{},"body":{"injectables/LocationService.html":{}}}],["behaviorsubject(this.areatypes",{"_index":1546,"title":{},"body":{"injectables/LocationService.html":{}}}],["behaviorsubject(this.transactions",{"_index":3210,"title":{},"body":{"injectables/TransactionService.html":{}}}],["being",{"_index":1305,"title":{},"body":{"classes/CustomValidator.html":{},"license.html":{}}}],["believe",{"_index":4299,"title":{},"body":{"license.html":{}}}],["below",{"_index":3964,"title":{},"body":{"license.html":{}}}],["belt",{"_index":2388,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["benefit",{"_index":4293,"title":{},"body":{"license.html":{}}}],["best",{"_index":4401,"title":{},"body":{"license.html":{}}}],["between",{"_index":3933,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4038,"title":{},"body":{"license.html":{}}}],["bezier(0.4",{"_index":636,"title":{},"body":{"components/AdminComponent.html":{}}}],["bhajia",{"_index":2193,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["biashara",{"_index":2112,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bicycle",{"_index":2458,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bike",{"_index":2457,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["binding",{"_index":1284,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["bio",{"_index":3409,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["biogas",{"_index":2487,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["biringanya",{"_index":2198,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["biscuits",{"_index":2197,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bit",{"_index":1109,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bitwise",{"_index":1146,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["block",{"_index":871,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["blockchain",{"_index":178,"title":{},"body":{"classes/AccountIndex.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"interfaces/W3.html":{},"miscellaneous/variables.html":{}}}],["blockfilterbinstr",{"_index":1168,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["blockfilterbinstr.charcodeat(i",{"_index":1175,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["blocks",{"_index":2824,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["blocksync",{"_index":1087,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["blocksync(address",{"_index":1094,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["blocksyncservice",{"_index":1084,"title":{"injectables/BlockSyncService.html":{}},"body":{"injectables/BlockSyncService.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["blocktxfilterbinstr",{"_index":1176,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["blocktxfilterbinstr.charcodeat(i",{"_index":1181,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bloomblockbytes",{"_index":1114,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bloomblocktxbytes",{"_index":1116,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bloomrounds",{"_index":1117,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bloxberg:8996",{"_index":40,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["bloxbergchainid",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boda",{"_index":2460,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bodaboda",{"_index":2461,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":1377,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["body.approval",{"_index":2559,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["bofu",{"_index":1717,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bombolulu",{"_index":1869,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bomet",{"_index":1936,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bone",{"_index":1170,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["bone.map((e",{"_index":1172,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["book",{"_index":1955,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":254,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/LoggingService.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":476,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["both",{"_index":3768,"title":{},"body":{"license.html":{}}}],["botique",{"_index":2393,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["boutique",{"_index":2394,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":1369,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"license.html":{}}}],["bread",{"_index":2284,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":1409,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["brewer",{"_index":2190,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["bricks",{"_index":2166,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":4440,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"pipes/SafePipe.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":783,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":782,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":776,"title":{},"body":{"modules/AppModule.html":{}}}],["btwo",{"_index":1178,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["btwo.map((e",{"_index":1180,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["buck",{"_index":3411,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["build",{"_index":3634,"title":{},"body":{"index.html":{}}}],["build:dev",{"_index":3638,"title":{},"body":{"index.html":{}}}],["build:prod",{"_index":3640,"title":{},"body":{"index.html":{}}}],["bungoma",{"_index":1938,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["buru",{"_index":1840,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["busaa",{"_index":2271,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["busia",{"_index":1917,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["business",{"_index":28,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/CreateAccountComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Signature.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["businesscategory",{"_index":1239,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["butcher",{"_index":2224,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["butchery",{"_index":2225,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":660,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["c",{"_index":3690,"title":{},"body":{"license.html":{}}}],["cabbages",{"_index":2273,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cachedtx.tx.txhash",{"_index":3236,"title":{},"body":{"injectables/TransactionService.html":{}}}],["cachesize",{"_index":3193,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["cafe",{"_index":2403,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cake",{"_index":2211,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":2523,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["called",{"_index":3844,"title":{},"body":{"license.html":{}}}],["calls",{"_index":3586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["canactivate",{"_index":820,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":892,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["candebug",{"_index":1581,"title":{},"body":{"injectables/LoggingService.html":{}}}],["candy",{"_index":2399,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["capabilities",{"_index":891,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"index.html":{}}}],["capenter",{"_index":2078,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["car",{"_index":2076,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["card",{"_index":2624,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["care",{"_index":1974,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["caretaker",{"_index":2075,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["carpenter",{"_index":2088,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["carrier",{"_index":2463,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["carry",{"_index":4012,"title":{},"body":{"license.html":{}}}],["cart",{"_index":2462,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["carwash",{"_index":2084,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":1406,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["cases",{"_index":4105,"title":{},"body":{"license.html":{}}}],["cashier",{"_index":1669,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cassava",{"_index":2210,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["casual",{"_index":2073,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":432,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["catch((e",{"_index":2702,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["catcherror",{"_index":710,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":1385,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["categories",{"_index":1217,"title":{},"body":{"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":15,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/CreateAccountComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["catering",{"_index":2081,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["caught",{"_index":1379,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cause",{"_index":4041,"title":{},"body":{"license.html":{}}}],["cdr",{"_index":2590,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["cease",{"_index":4201,"title":{},"body":{"license.html":{}}}],["cement",{"_index":2392,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["centralized",{"_index":1433,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["cereal",{"_index":2205,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cereals",{"_index":2212,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":1660,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["cessation",{"_index":4213,"title":{},"body":{"license.html":{}}}],["chai",{"_index":2208,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chakula",{"_index":2202,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["challenge",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["chama",{"_index":2379,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["changamwe",{"_index":1898,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":874,"title":{},"body":{"components/AuthComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":3772,"title":{},"body":{"license.html":{}}}],["changedetection",{"_index":215,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["changedetectionstrategy",{"_index":270,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":216,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["changedetectorref",{"_index":2588,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["changes",{"_index":3603,"title":{},"body":{"miscellaneous/functions.html":{}}}],["changesdescription",{"_index":3601,"title":{},"body":{"miscellaneous/functions.html":{}}}],["changing",{"_index":3701,"title":{},"body":{"license.html":{}}}],["chapati",{"_index":2204,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chapo",{"_index":2207,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["characterized",{"_index":4128,"title":{},"body":{"license.html":{}}}],["charcoal",{"_index":2489,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["charcol",{"_index":2488,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["charge",{"_index":3727,"title":{},"body":{"license.html":{}}}],["charging",{"_index":2136,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":3672,"title":{},"body":{"index.html":{}}}],["checks",{"_index":144,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"guards/RoleGuard.html":{}}}],["chef",{"_index":2080,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chemicals",{"_index":2353,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chemist",{"_index":2352,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chibuga",{"_index":1718,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chicken",{"_index":2216,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chidzivuni",{"_index":1730,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chidzuvini",{"_index":1729,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chief",{"_index":2023,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chigale",{"_index":1724,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chigato",{"_index":1723,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chigojoni",{"_index":1721,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chikole",{"_index":1725,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chikomani",{"_index":1719,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chikomeni",{"_index":1728,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chikuyu",{"_index":1731,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["children",{"_index":1993,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chilongoni",{"_index":1720,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chilumani",{"_index":1726,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chinguluni",{"_index":1722,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chipo",{"_index":2206,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chips",{"_index":2209,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chizingo",{"_index":1732,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chizini",{"_index":1727,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["choma",{"_index":2267,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["choo",{"_index":2036,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["choose",{"_index":4350,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4354,"title":{},"body":{"license.html":{}}}],["christine",{"_index":1677,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["chumvi",{"_index":2272,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["church",{"_index":2017,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["chv",{"_index":2354,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cic",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{},"classes/Settings.html":{},"injectables/TransactionService.html":{},"interfaces/W3.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["cic_convert",{"_index":1141,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["cic_transfer",{"_index":1139,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["cicada",{"_index":707,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["ciccacheurl",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cicconvert(event",{"_index":761,"title":{},"body":{"components/AppComponent.html":{}}}],["cicmetaurl",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cicnet/cic",{"_index":1122,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"dependencies.html":{}}}],["cicnet/schemas",{"_index":3528,"title":{},"body":{"dependencies.html":{}}}],["cicregistry",{"_index":2767,"title":{},"body":{"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["cictransfer(event",{"_index":757,"title":{},"body":{"components/AppComponent.html":{}}}],["cicussdurl",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["circumstances",{"_index":3962,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3970,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4394,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4255,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4265,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{"classes/AccountIndex.html":{},"classes/ActivatedRouteStub.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"classes/HttpError.html":{},"classes/PGPSigner.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"classes/TokenServiceStub.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{}},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"license.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/AccountIndex.html":{},"classes/ActivatedRouteStub.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"classes/HttpError.html":{},"classes/PGPSigner.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"classes/TokenServiceStub.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{},"overview.html":{}}}],["cleaner",{"_index":2049,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cleaning",{"_index":2042,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["clear",{"_index":4073,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":3765,"title":{},"body":{"license.html":{}}}],["cles",{"_index":3422,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["cli",{"_index":3609,"title":{},"body":{"index.html":{}}}],["click",{"_index":1633,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["client",{"_index":1123,"title":{},"body":{"injectables/BlockSyncService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["clinic",{"_index":2366,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["clinical",{"_index":2367,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":3564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["close",{"_index":2934,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["closely",{"_index":4390,"title":{},"body":{"license.html":{}}}],["closewindow",{"_index":2936,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["cloth",{"_index":2400,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["club",{"_index":2448,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["clues",{"_index":1399,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["cluster_accountsmodule",{"_index":478,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_declarations",{"_index":480,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_imports",{"_index":479,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":664,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":666,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":665,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":769,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":768,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":917,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":919,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":918,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_pagesmodule",{"_index":2721,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_declarations",{"_index":2722,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_imports",{"_index":2723,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":2866,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2868,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2867,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2879,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2880,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2881,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tokensmodule",{"_index":3084,"title":{},"body":{"modules/TokensModule.html":{},"overview.html":{}}}],["cluster_tokensmodule_declarations",{"_index":3085,"title":{},"body":{"modules/TokensModule.html":{},"overview.html":{}}}],["cluster_tokensmodule_imports",{"_index":3086,"title":{},"body":{"modules/TokensModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule",{"_index":3380,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_declarations",{"_index":3383,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_exports",{"_index":3381,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["cluster_transactionsmodule_imports",{"_index":3382,"title":{},"body":{"modules/TransactionsModule.html":{},"overview.html":{}}}],["coach",{"_index":1956,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cobbler",{"_index":2083,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cobler",{"_index":2082,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["coconut",{"_index":2203,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":1397,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"components/OrganizationComponent.html":{},"index.html":{},"license.html":{}}}],["codebase",{"_index":3677,"title":{},"body":{"index.html":{}}}],["coffee",{"_index":2215,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["collapsed",{"_index":633,"title":{},"body":{"components/AdminComponent.html":{}}}],["collect",{"_index":4332,"title":{},"body":{"license.html":{}}}],["collection",{"_index":2051,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["college",{"_index":1966,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["columnstodisplay",{"_index":3064,"title":{},"body":{"components/TokensComponent.html":{}}}],["combination",{"_index":4339,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4336,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4032,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4018,"title":{},"body":{"license.html":{}}}],["command",{"_index":3682,"title":{},"body":{"index.html":{}}}],["commands",{"_index":3884,"title":{},"body":{"license.html":{}}}],["commas",{"_index":3581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comment",{"_index":2911,"title":{},"body":{"interfaces/Staff.html":{}}}],["commercial",{"_index":4114,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":4281,"title":{},"body":{"license.html":{}}}],["common",{"_index":4108,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":489,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["communication",{"_index":3931,"title":{},"body":{"license.html":{}}}],["community",{"_index":2365,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"components/TokenDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["compilation",{"_index":4028,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4037,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4316,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3914,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1683,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["compliance",{"_index":4238,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3955,"title":{},"body":{"license.html":{}}}],["component",{"_index":202,"title":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{},"guards/RoleGuard.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsRoutingModule.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component_template",{"_index":319,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["components",{"_index":204,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["computer",{"_index":3859,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3807,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":4338,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4344,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":4311,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3818,"title":{},"body":{"license.html":{}}}],["conductor",{"_index":2468,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":1507,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["config.interceptor.ts",{"_index":1503,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{},"coverage.html":{}}}],["config.interceptor.ts:10",{"_index":1506,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["config.interceptor.ts:21",{"_index":1508,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["configurations",{"_index":1505,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{},"index.html":{}}}],["confirm",{"_index":1303,"title":{},"body":{"classes/CustomValidator.html":{}}}],["confirm('approve",{"_index":646,"title":{},"body":{"components/AdminComponent.html":{}}}],["confirm('create",{"_index":1251,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["confirm('disapprove",{"_index":649,"title":{},"body":{"components/AdminComponent.html":{}}}],["confirm('new",{"_index":737,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm('set",{"_index":2620,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["confirmpassword",{"_index":1316,"title":{},"body":{"classes/CustomValidator.html":{}}}],["congo",{"_index":1810,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["connected",{"_index":2830,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AccountIndex.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"interfaces/W3.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["consequence",{"_index":4226,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4374,"title":{},"body":{"license.html":{}}}],["conservation",{"_index":2034,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["consider",{"_index":4432,"title":{},"body":{"license.html":{}}}],["considered",{"_index":4185,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4272,"title":{},"body":{"license.html":{}}}],["console.log('here",{"_index":3440,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["console.log(arraysum([1",{"_index":3561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.log(await",{"_index":135,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["console.log(copytoclipboard(&#39;hello",{"_index":3567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["conspicuously",{"_index":3999,"title":{},"body":{"license.html":{}}}],["const",{"_index":74,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"modules/TokensRoutingModule.html":{},"injectables/TransactionService.html":{},"modules/TransactionsRoutingModule.html":{}}}],["constantly",{"_index":3802,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3945,"title":{},"body":{"license.html":{}}}],["construction",{"_index":2079,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"injectables/Web3Service.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":1335,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["constructor(authservice",{"_index":684,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(blocksyncservice",{"_index":3340,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["constructor(cdr",{"_index":2587,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["constructor(contractaddress",{"_index":112,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["constructor(data",{"_index":1328,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1342,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["constructor(elementref",{"_index":1628,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["constructor(errordialogservice",{"_index":1366,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["constructor(formbuilder",{"_index":242,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["constructor(httpclient",{"_index":948,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocationService.html":{},"injectables/TransactionService.html":{}}}],["constructor(initialparams",{"_index":566,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["constructor(keystore",{"_index":2649,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["constructor(logger",{"_index":1590,"title":{},"body":{"injectables/LoggingService.html":{}}}],["constructor(loggingservice",{"_index":1441,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"interceptors/LoggingInterceptor.html":{}}}],["constructor(message",{"_index":1471,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["constructor(private",{"_index":639,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuard.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{}}}],["constructor(public",{"_index":1351,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["constructor(router",{"_index":883,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"components/TransactionDetailsComponent.html":{}}}],["constructor(scanfilter",{"_index":2821,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["constructor(tokenservice",{"_index":3066,"title":{},"body":{"components/TokensComponent.html":{}}}],["constructor(transactionservice",{"_index":1092,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["constructor(userservice",{"_index":387,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{}}}],["construed",{"_index":4320,"title":{},"body":{"license.html":{}}}],["consult",{"_index":1965,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["consultant",{"_index":1964,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["consumer",{"_index":4093,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4415,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1398,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"license.html":{}}}],["contained",{"_index":3658,"title":{},"body":{"index.html":{}}}],["containing",{"_index":4168,"title":{},"body":{"license.html":{}}}],["contains",{"_index":898,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"index.html":{},"license.html":{}}}],["content",{"_index":743,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"license.html":{}}}],["content?.classlist.add('active",{"_index":753,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["content?.classlist.contains('active",{"_index":752,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["content?.classlist.remove('active",{"_index":755,"title":{},"body":{"components/AppComponent.html":{}}}],["content?.classlist.toggle('active",{"_index":1654,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["contents",{"_index":4276,"title":{},"body":{"license.html":{}}}],["context",{"_index":3908,"title":{},"body":{"license.html":{}}}],["continue",{"_index":4134,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4121,"title":{},"body":{"license.html":{}}}],["contract",{"_index":80,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"miscellaneous/variables.html":{}}}],["contract's",{"_index":120,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["contractaddress",{"_index":102,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["contractual",{"_index":4182,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4326,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3710,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4262,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4264,"title":{},"body":{"license.html":{}}}],["control",{"_index":1280,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"license.html":{}}}],["control.dirty",{"_index":1289,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["control.get('confirmpassword').seterrors",{"_index":1318,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.get('confirmpassword').value",{"_index":1317,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.get('password').value",{"_index":1315,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.invalid",{"_index":1288,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["control.touched",{"_index":1290,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["control.value",{"_index":1320,"title":{},"body":{"classes/CustomValidator.html":{}}}],["controlled",{"_index":4267,"title":{},"body":{"license.html":{}}}],["controls",{"_index":1266,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["convenient",{"_index":3877,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":762,"title":{"interfaces/Conversion.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"coverage.html":{}}}],["conversion.fromvalue",{"_index":3252,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.recipient",{"_index":3258,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.sender",{"_index":3257,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.tovalue",{"_index":3254,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.trader",{"_index":3256,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.tx.txhash",{"_index":3250,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversion.type",{"_index":3251,"title":{},"body":{"injectables/TransactionService.html":{}}}],["conversions",{"_index":2515,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":2921,"title":{},"body":{"interfaces/Token.html":{}}}],["converted",{"_index":3577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converting",{"_index":3579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converts",{"_index":3592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttoparammap",{"_index":578,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["convey",{"_index":3866,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4304,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4129,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3872,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4181,"title":{},"body":{"license.html":{}}}],["cook",{"_index":2213,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["copied",{"_index":3150,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"miscellaneous/functions.html":{}}}],["copies",{"_index":3563,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["copy",{"_index":3568,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["copy.ts",{"_index":3469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["copyaddress",{"_index":3109,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["copyaddress(address",{"_index":3119,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["copying",{"_index":3819,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1425,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["copyright",{"_index":3689,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3829,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3959,"title":{},"body":{"license.html":{}}}],["copytoclipboard",{"_index":3129,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["copytoclipboard(address",{"_index":3148,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["copytoclipboard(text",{"_index":3562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corn",{"_index":2214,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["correction",{"_index":4369,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":3917,"title":{},"body":{"license.html":{}}}],["cosmetics",{"_index":2373,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cost",{"_index":4061,"title":{},"body":{"license.html":{}}}],["counsellor",{"_index":1997,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["count",{"_index":195,"title":{},"body":{"classes/AccountIndex.html":{},"injectables/TokenService.html":{}}}],["counterclaim",{"_index":4256,"title":{},"body":{"license.html":{}}}],["counties",{"_index":1932,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["countries",{"_index":3863,"title":{},"body":{"license.html":{}}}],["country",{"_index":2025,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"components/OrganizationComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["countrycode",{"_index":2617,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["county",{"_index":2026,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["course",{"_index":4427,"title":{},"body":{"license.html":{}}}],["court",{"_index":4325,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4389,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4284,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":3457,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":3847,"title":{},"body":{"license.html":{}}}],["create",{"_index":115,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Staff.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["createaccountcomponent",{"_index":331,"title":{"components/CreateAccountComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["created",{"_index":406,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionsComponent.html":{},"classes/UserServiceStub.html":{}}}],["createform",{"_index":1218,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["createformstub",{"_index":1220,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["credentials",{"_index":2858,"title":{},"body":{"components/SettingsComponent.html":{}}}],["credit",{"_index":2383,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["crisps",{"_index":2201,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":3887,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1979,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["csv",{"_index":3573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["csv.ts",{"_index":3472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["cubic",{"_index":635,"title":{},"body":{"components/AdminComponent.html":{}}}],["curated",{"_index":1668,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["cure",{"_index":4216,"title":{},"body":{"license.html":{}}}],["currency",{"_index":2949,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["currentuser",{"_index":2782,"title":{},"body":{"guards/RoleGuard.html":{}}}],["currentyear",{"_index":1421,"title":{},"body":{"components/FooterComponent.html":{}}}],["custom",{"_index":1262,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"index.html":{}}}],["customarily",{"_index":4052,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4057,"title":{},"body":{"license.html":{}}}],["customerrorstatematcher",{"_index":257,"title":{"classes/CustomErrorStateMatcher.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"components/OrganizationComponent.html":{},"coverage.html":{}}}],["customevent",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["customevent(eventtype",{"_index":1160,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["customvalidator",{"_index":1291,"title":{"classes/CustomValidator.html":{}},"body":{"classes/CustomValidator.html":{},"coverage.html":{}}}],["cyber",{"_index":1987,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":4026,"title":{},"body":{"license.html":{}}}],["dagaa",{"_index":2217,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dagoreti",{"_index":1814,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dagoretti",{"_index":1856,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["daktari",{"_index":2356,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":4372,"title":{},"body":{"license.html":{}}}],["dandora",{"_index":1815,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["danger",{"_index":3810,"title":{},"body":{"license.html":{}}}],["danish",{"_index":2004,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dashboard",{"_index":2902,"title":{},"body":{"components/SidebarComponent.html":{}}}],["dashboardurl",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":9,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Conversion.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["data.message",{"_index":1336,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["data?.status",{"_index":1337,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["datafile",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":375,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["datasource.filter",{"_index":3367,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["date",{"_index":2835,"title":{},"body":{"components/SettingsComponent.html":{},"license.html":{}}}],["date().getfullyear",{"_index":1424,"title":{},"body":{"components/FooterComponent.html":{}}}],["date(timestamp",{"_index":3394,"title":{},"body":{"pipes/UnixDatePipe.html":{}}}],["date.now",{"_index":76,"title":{},"body":{"interfaces/AccountDetails.html":{},"interceptors/LoggingInterceptor.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["date.pipe",{"_index":2896,"title":{},"body":{"modules/SharedModule.html":{}}}],["date.pipe.ts",{"_index":3391,"title":{},"body":{"pipes/UnixDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:7",{"_index":3393,"title":{},"body":{"pipes/UnixDatePipe.html":{}}}],["date_registered",{"_index":16,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["dateregistered",{"_index":3441,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["dawa",{"_index":2357,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":30,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["daycare",{"_index":1971,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["days",{"_index":4212,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1611,"title":{},"body":{"injectables/LoggingService.html":{}}}],["december",{"_index":3983,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4352,"title":{},"body":{"license.html":{}}}],["decimals",{"_index":2917,"title":{},"body":{"interfaces/Token.html":{}}}],["declarations",{"_index":475,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"overview.html":{}}}],["declining",{"_index":4174,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":412,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/ErrorDialogComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["deemed",{"_index":3972,"title":{},"body":{"license.html":{}}}],["default",{"_index":73,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/ErrorDialogService.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocationService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"injectables/RegistryService.html":{},"directives/RouterLinkDirectiveStub.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"pipes/TokenRatioPipe.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"classes/UserServiceStub.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultaccount",{"_index":75,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultpagesize",{"_index":376,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionsComponent.html":{}}}],["defaults",{"_index":3580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defective",{"_index":4365,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4323,"title":{},"body":{"license.html":{}}}],["defined",{"_index":113,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["defines",{"_index":1264,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{}}}],["defining",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":3924,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3823,"title":{},"body":{"license.html":{}}}],["delay",{"_index":1664,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["delayed",{"_index":2520,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["delimiter",{"_index":3572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dematerialize",{"_index":1665,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["demo",{"_index":1990,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["denied",{"_index":4136,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4282,"title":{},"body":{"license.html":{}}}],["denomination",{"_index":2923,"title":{},"body":{"interfaces/Token.html":{}}}],["denote",{"_index":1466,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["deny",{"_index":3777,"title":{},"body":{"license.html":{}}}],["denying",{"_index":3739,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":474,"title":{"dependencies.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":152,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["deployed",{"_index":117,"title":{},"body":{"classes/AccountIndex.html":{},"interfaces/Conversion.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["deprive",{"_index":4291,"title":{},"body":{"license.html":{}}}],["dera",{"_index":2416,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dereva",{"_index":2467,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Conversion.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"classes/Settings.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":2087,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["designated",{"_index":4069,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3706,"title":{},"body":{"license.html":{}}}],["destination",{"_index":3175,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["destinationtoken",{"_index":1187,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["detached",{"_index":2693,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["detail",{"_index":1161,"title":{},"body":{"injectables/BlockSyncService.html":{},"license.html":{}}}],["details",{"_index":65,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AdminComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":321,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["details.component",{"_index":497,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsModule.html":{}}}],["details.component.html",{"_index":2933,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["details.component.scss",{"_index":2932,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["details.component.ts",{"_index":2931,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:18",{"_index":2938,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":2937,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":3117,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":2941,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":2940,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":3126,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":3128,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":3127,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":3116,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:39",{"_index":3121,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:59",{"_index":3124,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:63",{"_index":3123,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":3125,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":3122,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:80",{"_index":3120,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.component.ts:86",{"_index":3118,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["details.the",{"_index":4424,"title":{},"body":{"license.html":{}}}],["details/account",{"_index":496,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"coverage.html":{}}}],["details/token",{"_index":2930,"title":{},"body":{"components/TokenDetailsComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"coverage.html":{}}}],["details/transaction",{"_index":3104,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"modules/TransactionsModule.html":{},"coverage.html":{}}}],["detergent",{"_index":2414,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["detergents",{"_index":2415,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["determining",{"_index":4103,"title":{},"body":{"license.html":{}}}],["dev",{"_index":3620,"title":{},"body":{"index.html":{}}}],["develop",{"_index":4398,"title":{},"body":{"license.html":{}}}],["developers",{"_index":3754,"title":{},"body":{"license.html":{}}}],["development",{"_index":3615,"title":{},"body":{"index.html":{},"license.html":{}}}],["devices",{"_index":3776,"title":{},"body":{"license.html":{}}}],["dgst",{"_index":2641,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["dhobi",{"_index":2085,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dialog",{"_index":1325,"title":{},"body":{"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["dialog'},{'name",{"_index":335,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["dialog.component",{"_index":1350,"title":{},"body":{"injectables/ErrorDialogService.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1327,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1326,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1324,"title":{},"body":{"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1329,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":1331,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["dialog.service",{"_index":848,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["dialog.service.ts",{"_index":1339,"title":{},"body":{"injectables/ErrorDialogService.html":{},"coverage.html":{}}}],["dialog.service.ts:11",{"_index":1347,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["dialog.service.ts:13",{"_index":1346,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["dialog.service.ts:9",{"_index":1344,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["dialog/error",{"_index":1323,"title":{},"body":{"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1353,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1356,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["diani",{"_index":1902,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dictates",{"_index":880,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["diesel",{"_index":2511,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":4343,"title":{},"body":{"license.html":{}}}],["different",{"_index":1446,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["differently",{"_index":4161,"title":{},"body":{"license.html":{}}}],["digest",{"_index":61,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["direction",{"_index":3958,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4074,"title":{},"body":{"license.html":{}}}],["directive",{"_index":317,"title":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["directives",{"_index":360,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3630,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3852,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1256,"title":{},"body":{"components/CreateAccountComponent.html":{},"index.html":{}}}],["directoryentry",{"_index":1237,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["disableconsolelogging",{"_index":804,"title":{},"body":{"modules/AppModule.html":{}}}],["disapprove",{"_index":657,"title":{},"body":{"components/AdminComponent.html":{}}}],["disapproveaction",{"_index":593,"title":{},"body":{"components/AdminComponent.html":{}}}],["disapproveaction(action",{"_index":600,"title":{},"body":{"components/AdminComponent.html":{}}}],["disburse",{"_index":1675,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["disbursement",{"_index":2615,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["disbursements",{"_index":2516,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":3994,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4355,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4158,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":4308,"title":{},"body":{"license.html":{}}}],["dispatcher",{"_index":1378,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["dispensary",{"_index":2350,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":4027,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":4167,"title":{},"body":{"license.html":{}}}],["displayedcolumns",{"_index":377,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{}}}],["displaying",{"_index":1269,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"interceptors/ErrorInterceptor.html":{}}}],["displays",{"_index":3874,"title":{},"body":{"license.html":{}}}],["dist",{"_index":3637,"title":{},"body":{"index.html":{}}}],["distinguishing",{"_index":4345,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3698,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":4411,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4312,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3820,"title":{},"body":{"license.html":{}}}],["divone",{"_index":864,"title":{},"body":{"components/AuthComponent.html":{}}}],["divtwo",{"_index":866,"title":{},"body":{"components/AuthComponent.html":{}}}],["doctor",{"_index":2355,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":3700,"title":{},"body":{"license.html":{}}}],["document.getelementbyid('content",{"_index":744,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{}}}],["document.getelementbyid('one",{"_index":865,"title":{},"body":{"components/AuthComponent.html":{}}}],["document.getelementbyid('one').style.display",{"_index":1041,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.getelementbyid('sidebar",{"_index":742,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{}}}],["document.getelementbyid('sidebarcollapse",{"_index":746,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{}}}],["document.getelementbyid('state').innerhtml",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.getelementbyid('two",{"_index":867,"title":{},"body":{"components/AuthComponent.html":{}}}],["document.getelementbyid('two').style.display",{"_index":1042,"title":{},"body":{"injectables/AuthService.html":{}}}],["document.getelementbyid(this.iconid",{"_index":2751,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["document.getelementbyid(this.id",{"_index":2750,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["documentation",{"_index":3458,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":4144,"title":{},"body":{"license.html":{}}}],["doe",{"_index":3403,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["doesn\\'t",{"_index":1054,"title":{},"body":{"injectables/AuthService.html":{}}}],["dofilter",{"_index":382,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["dofilter(value",{"_index":391,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["dom",{"_index":207,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["domains",{"_index":3795,"title":{},"body":{"license.html":{}}}],["domsanitizer",{"_index":2814,"title":{},"body":{"pipes/SafePipe.html":{}}}],["donald",{"_index":3417,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["donholm",{"_index":1813,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["donhom",{"_index":1817,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["donor",{"_index":2020,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["donut",{"_index":2218,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["doti",{"_index":1733,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["double",{"_index":556,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["doubtful",{"_index":4104,"title":{},"body":{"license.html":{}}}],["dough",{"_index":2219,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["download",{"_index":3575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downloadcsv",{"_index":383,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["downloaded",{"_index":3578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downstream",{"_index":4235,"title":{},"body":{"license.html":{}}}],["driver",{"_index":2466,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["duka",{"_index":2406,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["durable",{"_index":4051,"title":{},"body":{"license.html":{}}}],["duration",{"_index":3151,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["during",{"_index":68,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["dwelling",{"_index":4102,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":3526,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3926,"title":{},"body":{"license.html":{}}}],["dzivani",{"_index":1735,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dzovuni",{"_index":1736,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["dzugwe",{"_index":1734,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":700,"title":{},"body":{"components/AppComponent.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["e.matches",{"_index":749,"title":{},"body":{"components/AppComponent.html":{}}}],["e2e",{"_index":3653,"title":{},"body":{"index.html":{}}}],["each",{"_index":3832,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":3845,"title":{},"body":{"license.html":{}}}],["east",{"_index":1850,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["economics",{"_index":1427,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["education",{"_index":1954,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["educator",{"_index":1995,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":4387,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3992,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3973,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3812,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":4249,"title":{},"body":{"license.html":{}}}],["egg",{"_index":2309,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eimu",{"_index":1976,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["elapsedtime",{"_index":1575,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["elder",{"_index":2022,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eldoret",{"_index":1939,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["electrian",{"_index":2074,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["electricals",{"_index":2401,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["electrician",{"_index":2164,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["electronic",{"_index":4416,"title":{},"body":{"license.html":{}}}],["electronics",{"_index":2161,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":316,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["element.style.display",{"_index":872,"title":{},"body":{"components/AuthComponent.html":{}}}],["elementref",{"_index":1629,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["elim",{"_index":1975,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":47,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"interfaces/Staff.html":{},"miscellaneous/variables.html":{}}}],["embakasi",{"_index":1848,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["embakassi",{"_index":1847,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["embodied",{"_index":4046,"title":{},"body":{"license.html":{}}}],["emergency",{"_index":2377,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["employer",{"_index":4429,"title":{},"body":{"license.html":{}}}],["enable",{"_index":3907,"title":{},"body":{"license.html":{}}}],["enabled",{"_index":807,"title":{},"body":{"modules/AppModule.html":{}}}],["enables",{"_index":3868,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":62,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["end",{"_index":3652,"title":{},"body":{"index.html":{},"license.html":{}}}],["endpoint",{"_index":725,"title":{},"body":{"components/AppComponent.html":{}}}],["enforce",{"_index":4283,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3996,"title":{},"body":{"license.html":{}}}],["engine",{"_index":63,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"classes/Settings.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/W3.html":{}}}],["engineer",{"_index":2121,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["enroller",{"_index":1674,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":2524,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["enter",{"_index":875,"title":{},"body":{"components/AuthComponent.html":{}}}],["entered",{"_index":4317,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4016,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4334,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4239,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1257,"title":{},"body":{"components/CreateAccountComponent.html":{},"classes/TokenRegistry.html":{}}}],["entry(2",{"_index":2983,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["entry(serial",{"_index":2979,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["env",{"_index":1582,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{}}}],["env.example",{"_index":3660,"title":{},"body":{"index.html":{}}}],["env.ts",{"_index":3661,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":3217,"title":{},"body":{"injectables/TransactionService.html":{}}}],["envelope.fromjson(json.stringify(account)).unwrap().m.data",{"_index":3270,"title":{},"body":{"injectables/TransactionService.html":{}}}],["environment",{"_index":171,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/LocationService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PagesComponent.html":{},"injectables/RegistryService.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.cicmetaurl",{"_index":1029,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.dashboardurl",{"_index":2717,"title":{},"body":{"components/PagesComponent.html":{}}}],["environment.dev.ts",{"_index":3664,"title":{},"body":{"index.html":{}}}],["environment.loggingurl}/api/logs",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.loglevel",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.prod.ts",{"_index":3665,"title":{},"body":{"index.html":{}}}],["environment.production",{"_index":808,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.registryaddress",{"_index":2769,"title":{},"body":{"injectables/RegistryService.html":{}}}],["environment.serverloglevel",{"_index":801,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.trusteddeclaratoraddress",{"_index":3239,"title":{},"body":{"injectables/TransactionService.html":{}}}],["environment.web3provider",{"_index":1131,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["equivalent",{"_index":3948,"title":{},"body":{"license.html":{}}}],["err",{"_index":1058,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["err.error",{"_index":1387,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.error.message",{"_index":1394,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.message",{"_index":1061,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.status",{"_index":1402,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statustext",{"_index":1062,"title":{},"body":{"injectables/AuthService.html":{}}}],["erroneously",{"_index":3775,"title":{},"body":{"license.html":{}}}],["error",{"_index":334,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["error's",{"_index":1469,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["error('the",{"_index":1048,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(message",{"_index":1480,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["error.message",{"_index":1477,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["error.stack",{"_index":1482,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["error.status",{"_index":1479,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["error.statustext",{"_index":1501,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["error.tostring",{"_index":1478,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["errordialogcomponent",{"_index":333,"title":{"components/ErrorDialogComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordialogservice",{"_index":687,"title":{"injectables/ErrorDialogService.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["errorevent",{"_index":1389,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorhandler",{"_index":779,"title":{},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["errorinterceptor",{"_index":771,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":1386,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errors",{"_index":1302,"title":{},"body":{"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["errorstatematcher",{"_index":1271,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["errortracestring",{"_index":1455,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["errortracestring.includes('/src/app",{"_index":1486,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["errortracestring.includes(whitelistsentence",{"_index":1488,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["essential",{"_index":3909,"title":{},"body":{"license.html":{}}}],["establish",{"_index":177,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["eth",{"_index":2629,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["ethereum",{"_index":3443,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["ethers",{"_index":3222,"title":{},"body":{"injectables/TransactionService.html":{},"dependencies.html":{}}}],["ethiopia",{"_index":2630,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["even",{"_index":2525,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["event",{"_index":691,"title":{},"body":{"components/AppComponent.html":{},"interceptors/LoggingInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["event.detail.tx",{"_index":758,"title":{},"body":{"components/AppComponent.html":{}}}],["eventemitter",{"_index":2939,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["events",{"_index":1565,"title":{},"body":{"interceptors/LoggingInterceptor.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["eventtype",{"_index":1105,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["everyone",{"_index":3696,"title":{},"body":{"license.html":{}}}],["evm",{"_index":39,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["exact",{"_index":3842,"title":{},"body":{"license.html":{}}}],["example",{"_index":101,"title":{},"body":{"classes/AccountIndex.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"classes/TokenRegistry.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["except",{"_index":3857,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1434,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["exceptions",{"_index":4148,"title":{},"body":{"license.html":{}}}],["exchange",{"_index":3155,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["excluded",{"_index":4091,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4321,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4407,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4273,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3953,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4327,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3898,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3650,"title":{},"body":{"index.html":{},"license.html":{}}}],["executing",{"_index":3858,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":4250,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3993,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1285,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["expand",{"_index":611,"title":{},"body":{"components/AdminComponent.html":{}}}],["expandcollapse",{"_index":594,"title":{},"body":{"components/AdminComponent.html":{}}}],["expandcollapse(row",{"_index":604,"title":{},"body":{"components/AdminComponent.html":{}}}],["expected",{"_index":4112,"title":{},"body":{"license.html":{}}}],["expects",{"_index":4111,"title":{},"body":{"license.html":{}}}],["expert",{"_index":1991,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["explains",{"_index":3766,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":3942,"title":{},"body":{"license.html":{}}}],["export",{"_index":84,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{}}}],["exportcsv",{"_index":422,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exportcsv(arraydata",{"_index":3570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exportcsv(this.accounts",{"_index":460,"title":{},"body":{"components/AccountsComponent.html":{}}}],["exportcsv(this.actions",{"_index":652,"title":{},"body":{"components/AdminComponent.html":{}}}],["exportcsv(this.tokens",{"_index":3082,"title":{},"body":{"components/TokensComponent.html":{}}}],["exportcsv(this.transactions",{"_index":3371,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["exportcsv(this.trustedusers",{"_index":2855,"title":{},"body":{"components/SettingsComponent.html":{}}}],["exports",{"_index":83,"title":{},"body":{"interfaces/AccountDetails.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"interfaces/Transaction.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"miscellaneous/functions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["express",{"_index":4279,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4357,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1311,"title":{},"body":{"classes/CustomValidator.html":{}}}],["expressly",{"_index":4196,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1639,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"license.html":{}}}],["extended",{"_index":4307,"title":{},"body":{"license.html":{}}}],["extends",{"_index":1436,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["extensions",{"_index":4031,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3876,"title":{},"body":{"license.html":{}}}],["external",{"_index":3446,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["eye",{"_index":2757,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["f",{"_index":4179,"title":{},"body":{"license.html":{}}}],["facilitator",{"_index":2006,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["facilities",{"_index":3954,"title":{},"body":{"license.html":{}}}],["facing",{"_index":1415,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["fagio",{"_index":2038,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":1060,"title":{},"body":{"injectables/AuthService.html":{},"classes/CustomValidator.html":{},"interceptors/LoggingInterceptor.html":{}}}],["failedpinattempts",{"_index":3408,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["fails",{"_index":4209,"title":{},"body":{"license.html":{}}}],["failure",{"_index":4382,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3947,"title":{},"body":{"license.html":{}}}],["faith",{"_index":2009,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["falcon",{"_index":1867,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":148,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateAccountComponent.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"components/OrganizationComponent.html":{},"guards/RoleGuard.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":4097,"title":{},"body":{"license.html":{}}}],["family/surname",{"_index":1255,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["farm",{"_index":2056,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["farmer",{"_index":2057,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["farming",{"_index":2055,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fashion",{"_index":3839,"title":{},"body":{"license.html":{}}}],["favor",{"_index":4106,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3632,"title":{},"body":{"index.html":{},"license.html":{}}}],["fee",{"_index":3747,"title":{},"body":{"license.html":{}}}],["feels",{"_index":429,"title":{},"body":{"components/AccountsComponent.html":{}}}],["female",{"_index":2513,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":173,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["fetch(environment.cicmetaurl",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(environment.cicmetaurl).then((response",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetch(environment.publickeysurl).then((res",{"_index":1076,"title":{},"body":{"injectables/AuthService.html":{}}}],["fetched",{"_index":2975,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["fetcher",{"_index":1088,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["fetcher(settings",{"_index":1099,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["fetching",{"_index":3583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fia",{"_index":3427,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["field",{"_index":510,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"classes/CustomValidator.html":{},"modules/PagesModule.html":{},"directives/PasswordToggleDirective.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["filegetter",{"_index":2761,"title":{},"body":{"injectables/RegistryService.html":{}}}],["filename",{"_index":3571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":3627,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":463,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["filter_rounds",{"_index":1167,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["filteraccounts",{"_index":384,"title":{},"body":{"components/AccountsComponent.html":{}}}],["filters",{"_index":1166,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["filtertransactions",{"_index":3337,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["final",{"_index":1193,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["finalize",{"_index":1569,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["finally",{"_index":3248,"title":{},"body":{"injectables/TransactionService.html":{},"license.html":{}}}],["finance",{"_index":2384,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":4076,"title":{},"body":{"license.html":{}}}],["fingerprint",{"_index":2645,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["fire",{"_index":2498,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["firewood",{"_index":2499,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["firm",{"_index":2189,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":423,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"license.html":{}}}],["fish",{"_index":2228,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":4360,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2700,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["fixed",{"_index":4050,"title":{},"body":{"license.html":{}}}],["flag",{"_index":2678,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["flow",{"_index":3932,"title":{},"body":{"license.html":{}}}],["flowers",{"_index":2441,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fn",{"_index":49,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["follow",{"_index":3822,"title":{},"body":{"license.html":{}}}],["following",{"_index":4277,"title":{},"body":{"license.html":{}}}],["food",{"_index":2191,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["footballer",{"_index":2141,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1418,"title":{},"body":{"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/SidebarStubComponent.html":{},"components/TopbarStubComponent.html":{}}}],["footer'},{'name",{"_index":337,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["footer.component.html",{"_index":1420,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1419,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":336,"title":{"components/FooterComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["footerstubcomponent",{"_index":338,"title":{"components/FooterStubComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":3991,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":1411,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["force",{"_index":3950,"title":{},"body":{"license.html":{}}}],["form",{"_index":1265,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"directives/PasswordToggleDirective.html":{},"license.html":{}}}],["form.submitted",{"_index":1287,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["format",{"_index":3574,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["format:lint",{"_index":3675,"title":{},"body":{"index.html":{}}}],["formatting",{"_index":3666,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":243,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["formcontrol",{"_index":1274,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["formgroup",{"_index":252,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"components/OrganizationComponent.html":{}}}],["formgroupdirective",{"_index":1275,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["forms",{"_index":4042,"title":{},"body":{"license.html":{}}}],["forward",{"_index":2531,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["forwarded",{"_index":1509,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{}}}],["found",{"_index":305,"title":{},"body":{"components/AccountSearchComponent.html":{},"injectables/TransactionService.html":{},"license.html":{}}}],["foundation",{"_index":3693,"title":{},"body":{"license.html":{}}}],["free",{"_index":3691,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":3709,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":3750,"title":{},"body":{"license.html":{}}}],["freelance",{"_index":2159,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fromhex",{"_index":3224,"title":{},"body":{"injectables/TransactionService.html":{}}}],["fromhex(methodsignature",{"_index":3287,"title":{},"body":{"injectables/TransactionService.html":{}}}],["fromhex(strip0x(transferauthaddress",{"_index":3298,"title":{},"body":{"injectables/TransactionService.html":{}}}],["fromvalue",{"_index":1188,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["fruit",{"_index":2226,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fruits",{"_index":2227,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fua",{"_index":2110,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fuata",{"_index":1844,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fuel",{"_index":2492,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fuel/energy",{"_index":2484,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["fulfilling",{"_index":3976,"title":{},"body":{"license.html":{}}}],["full",{"_index":539,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"license.html":{}}}],["function",{"_index":1498,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"coverage.html":{}}}],["functionality",{"_index":2638,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["functioning",{"_index":4122,"title":{},"body":{"license.html":{}}}],["functions",{"_index":2553,"title":{"miscellaneous/functions.html":{}},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3780,"title":{},"body":{"license.html":{}}}],["fundi",{"_index":2089,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["furniture",{"_index":2450,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":3678,"title":{},"body":{"index.html":{},"license.html":{}}}],["future",{"_index":3799,"title":{},"body":{"license.html":{}}}],["g",{"_index":3613,"title":{},"body":{"index.html":{}}}],["g.e",{"_index":1909,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gandini",{"_index":1751,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["garage",{"_index":2127,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["garbage",{"_index":2037,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gardener",{"_index":2043,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gari",{"_index":2481,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gas",{"_index":2503,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gatina",{"_index":1825,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gb",{"_index":3396,"title":{},"body":{"pipes/UnixDatePipe.html":{}}}],["ge",{"_index":1910,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gender",{"_index":17,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/CreateAccountComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["genders",{"_index":1219,"title":{},"body":{"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["general",{"_index":1494,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["generalized",{"_index":1468,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["generally",{"_index":3922,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3629,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":1207,"title":{},"body":{"interfaces/Conversion.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"index.html":{}}}],["ger",{"_index":2631,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["germany",{"_index":2632,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["get(`${environment.cicmetaurl}/areanames",{"_index":1550,"title":{},"body":{"injectables/LocationService.html":{}}}],["get(`${environment.cicmetaurl}/areatypes",{"_index":1558,"title":{},"body":{"injectables/LocationService.html":{}}}],["getaccountdetailsfrommeta(await",{"_index":3242,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getaccountinfo",{"_index":3184,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getaccountinfo(account",{"_index":3195,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getaccounttypes",{"_index":444,"title":{},"body":{"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["getactionbyid",{"_index":2540,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{}}}],["getactionbyid(id",{"_index":3433,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["getactions",{"_index":2538,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["getaddresssearchformstub",{"_index":268,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["getaddresstransactions",{"_index":3185,"title":{},"body":{"injectables/TransactionService.html":{}}}],["getaddresstransactions(address",{"_index":1159,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TransactionService.html":{}}}],["getalltransactions",{"_index":3186,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["getalltransactions(offset",{"_index":1157,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["getareanamebylocation",{"_index":1529,"title":{},"body":{"injectables/LocationService.html":{}}}],["getareanamebylocation(location",{"_index":1534,"title":{},"body":{"injectables/LocationService.html":{}}}],["getareanames",{"_index":1530,"title":{},"body":{"injectables/LocationService.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["getareatypebyarea",{"_index":1531,"title":{},"body":{"injectables/LocationService.html":{}}}],["getareatypebyarea(area",{"_index":1537,"title":{},"body":{"injectables/LocationService.html":{}}}],["getareatypes",{"_index":1532,"title":{},"body":{"injectables/LocationService.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["getbysymbol",{"_index":3058,"title":{},"body":{"classes/TokenServiceStub.html":{}}}],["getbysymbol(symbol",{"_index":3059,"title":{},"body":{"classes/TokenServiceStub.html":{}}}],["getcategories",{"_index":2545,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["getchallenge",{"_index":934,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcreateformstub",{"_index":1231,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["getgenders",{"_index":1247,"title":{},"body":{"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["getinstance",{"_index":3452,"title":{},"body":{"injectables/Web3Service.html":{}}}],["getkeyformstub",{"_index":845,"title":{},"body":{"components/AuthComponent.html":{}}}],["getkeystore",{"_index":1515,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["getnamesearchformstub",{"_index":264,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["getorganizationformstub",{"_index":2612,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getphonesearchformstub",{"_index":266,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["getprivatekey",{"_index":935,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprivatekeyinfo",{"_index":936,"title":{},"body":{"injectables/AuthService.html":{}}}],["getpublickeys",{"_index":937,"title":{},"body":{"injectables/AuthService.html":{}}}],["getregistry",{"_index":2762,"title":{},"body":{"injectables/RegistryService.html":{}}}],["getsessiontoken",{"_index":938,"title":{},"body":{"injectables/AuthService.html":{}}}],["getter.ts",{"_index":3476,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":3604,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettokenbalance",{"_index":2995,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbalance(address",{"_index":3004,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbyaddress",{"_index":2996,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbyaddress(address",{"_index":3006,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbysymbol",{"_index":2997,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenbysymbol(symbol",{"_index":3008,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokenname",{"_index":2998,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokens",{"_index":2999,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettokensymbol",{"_index":3000,"title":{},"body":{"injectables/TokenService.html":{}}}],["gettransactiontypes",{"_index":2548,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"components/TransactionsComponent.html":{}}}],["gettrustedusers",{"_index":939,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser",{"_index":3399,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["getuser(userkey",{"_index":3435,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["getuserbyid",{"_index":3400,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["getuserbyid(id",{"_index":3438,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["getwithtoken",{"_index":940,"title":{},"body":{"injectables/AuthService.html":{}}}],["githeri",{"_index":2229,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["githurai",{"_index":1851,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["give",{"_index":4009,"title":{},"body":{"license.html":{}}}],["given",{"_index":1252,"title":{},"body":{"components/CreateAccountComponent.html":{},"classes/CustomValidator.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"classes/TokenRegistry.html":{},"license.html":{}}}],["givenname",{"_index":1235,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["gives",{"_index":4023,"title":{},"body":{"license.html":{}}}],["giving",{"_index":3760,"title":{},"body":{"license.html":{}}}],["global",{"_index":1443,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["globalerrorhandler",{"_index":772,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"coverage.html":{},"overview.html":{}}}],["gnu",{"_index":3685,"title":{},"body":{"license.html":{}}}],["go",{"_index":3680,"title":{},"body":{"index.html":{}}}],["goats",{"_index":2234,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gona",{"_index":1749,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["good",{"_index":2313,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["governed",{"_index":4151,"title":{},"body":{"license.html":{}}}],["government",{"_index":2021,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["gpl",{"_index":3755,"title":{},"body":{"license.html":{}}}],["grant",{"_index":4175,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3937,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4229,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4441,"title":{},"body":{"modules.html":{}}}],["grassroots",{"_index":1426,"title":{},"body":{"components/FooterComponent.html":{},"license.html":{}}}],["gratis",{"_index":3746,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4399,"title":{},"body":{"license.html":{}}}],["grocer",{"_index":2231,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["groceries",{"_index":3415,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["grocery",{"_index":2230,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["groundnuts",{"_index":2220,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":1672,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["guarantee",{"_index":3712,"title":{},"body":{"license.html":{}}}],["guard",{"_index":876,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guards",{"_index":877,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["gui",{"_index":4428,"title":{},"body":{"license.html":{}}}],["guitarist",{"_index":2175,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["guro",{"_index":1750,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hair",{"_index":2116,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["halt",{"_index":731,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":1392,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"directives/PasswordToggleDirective.html":{}}}],["handled",{"_index":2551,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["handleerror",{"_index":1438,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(error",{"_index":1444,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["handlenetworkchange",{"_index":2586,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["handler",{"_index":430,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["handler.ts",{"_index":1431,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handler.ts:104",{"_index":1460,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:16",{"_index":1513,"title":{},"body":{"classes/HttpError.html":{}}}],["handler.ts:41",{"_index":1442,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:58",{"_index":1445,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler.ts:84",{"_index":1453,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleroute",{"_index":2535,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["handlers",{"_index":2534,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["handles",{"_index":1361,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["handling",{"_index":1435,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["hanje",{"_index":1737,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["happened",{"_index":1497,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["hardware",{"_index":2413,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":1206,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["hash.tostring('hex').substring(0",{"_index":3282,"title":{},"body":{"injectables/TransactionService.html":{}}}],["hashfunction",{"_index":3277,"title":{},"body":{"injectables/TransactionService.html":{}}}],["hashfunction.digest",{"_index":3280,"title":{},"body":{"injectables/TransactionService.html":{}}}],["hashfunction.update('createrequest(address,address,address,uint256",{"_index":3279,"title":{},"body":{"injectables/TransactionService.html":{}}}],["haveaccount",{"_index":108,"title":{},"body":{"classes/AccountIndex.html":{}}}],["haveaccount(&#39;0xc0ffee254729296a45a3885639ac7e10f9d54979&#39",{"_index":153,"title":{},"body":{"classes/AccountIndex.html":{}}}],["haveaccount('0xc0ffee254729296a45a3885639ac7e10f9d54979",{"_index":193,"title":{},"body":{"classes/AccountIndex.html":{}}}],["haveaccount(address",{"_index":142,"title":{},"body":{"classes/AccountIndex.html":{}}}],["having",{"_index":3952,"title":{},"body":{"license.html":{}}}],["hawinga",{"_index":1923,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hawker",{"_index":2091,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hawking",{"_index":2090,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hazina",{"_index":1696,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["headmaster",{"_index":1994,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headmistress",{"_index":1985,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headteacher",{"_index":1986,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["health",{"_index":2348,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["heath",{"_index":2364,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":625,"title":{},"body":{"components/AdminComponent.html":{}}}],["help",{"_index":2095,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":2570,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/Settings.html":{},"interfaces/W3.html":{}}}],["hera",{"_index":3421,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["herbalist",{"_index":2359,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hereafter",{"_index":4269,"title":{},"body":{"license.html":{}}}],["hi",{"_index":1113,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["hidden",{"_index":629,"title":{},"body":{"components/AdminComponent.html":{}}}],["hoba",{"_index":1015,"title":{},"body":{"injectables/AuthService.html":{}}}],["hobaparsechallengeheader",{"_index":981,"title":{},"body":{"injectables/AuthService.html":{}}}],["hobaparsechallengeheader(authheader",{"_index":1022,"title":{},"body":{"injectables/AuthService.html":{}}}],["hobaresponseencoded",{"_index":966,"title":{},"body":{"injectables/AuthService.html":{}}}],["holder",{"_index":4203,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4157,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2652,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["holel",{"_index":2222,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["homabay",{"_index":1927,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["homaboy",{"_index":1928,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":310,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"modules/PagesRoutingModule.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["hook",{"_index":1432,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["hope",{"_index":4412,"title":{},"body":{"license.html":{}}}],["hospital",{"_index":2358,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":709,"title":{},"body":{"components/AppComponent.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["hostlistener('click",{"_index":2801,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["hostlistener('window:cic_convert",{"_index":760,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:cic_transfer",{"_index":756,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":681,"title":{},"body":{"components/AppComponent.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["hosts",{"_index":4077,"title":{},"body":{"license.html":{}}}],["hotel",{"_index":2221,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hoteli",{"_index":2223,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["house",{"_index":2094,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["housegirl",{"_index":2096,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["househelp",{"_index":2092,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["household",{"_index":4098,"title":{},"body":{"license.html":{}}}],["hsehelp",{"_index":2093,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":315,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["htmlelement",{"_index":741,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["http",{"_index":1363,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":3624,"title":{},"body":{"index.html":{}}}],["http://localhost:8000",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":949,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocationService.html":{},"injectables/TransactionService.html":{}}}],["httpclientmodule",{"_index":785,"title":{},"body":{"modules/AppModule.html":{}}}],["httpconfiginterceptor",{"_index":773,"title":{"interceptors/HttpConfigInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HttpConfigInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httperror",{"_index":862,"title":{"classes/HttpError.html":{}},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"coverage.html":{}}}],["httperror('unknown",{"_index":1036,"title":{},"body":{"injectables/AuthService.html":{}}}],["httperror('you",{"_index":1034,"title":{},"body":{"injectables/AuthService.html":{}}}],["httperror.message",{"_index":863,"title":{},"body":{"components/AuthComponent.html":{}}}],["httperrorresponse",{"_index":1380,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["httperrorresponse).status",{"_index":1491,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["httpevent",{"_index":1381,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpgetter",{"_index":2765,"title":{},"body":{"injectables/RegistryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httphandler",{"_index":1373,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpinterceptor",{"_index":1382,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httprequest",{"_index":1372,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["httpresponse",{"_index":1568,"title":{},"body":{"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["https://blockexplorer.bloxberg.org/address",{"_index":3132,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["https://cache.dev.grassrootseconomics.net",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dashboard.sarafu.network",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://dev.grassrootseconomics.net/.well",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":3695,"title":{},"body":{"license.html":{}}}],["https://meta",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://user.dev.grassrootseconomics.net",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":4414,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":4437,"title":{},"body":{"license.html":{}}}],["huruma",{"_index":1818,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hustler",{"_index":2111,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hypothetical",{"_index":4425,"title":{},"body":{"license.html":{}}}],["icon",{"_index":2745,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["icon.classlist.add('fa",{"_index":2758,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["icon.classlist.remove('fa",{"_index":2756,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["iconid",{"_index":2743,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["id",{"_index":67,"title":{},"body":{"interfaces/AccountDetails.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"components/CreateAccountComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"directives/PasswordToggleDirective.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"interfaces/Staff.html":{},"classes/TokenRegistry.html":{},"modules/TokensRoutingModule.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["identifiable",{"_index":4297,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":2974,"title":{},"body":{"classes/TokenRegistry.html":{},"coverage.html":{}}}],["identifiers",{"_index":33,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["identifying",{"_index":37,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["identities",{"_index":18,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["idfromurl",{"_index":2557,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["idnumber",{"_index":1234,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["iframes",{"_index":2719,"title":{},"body":{"components/PagesComponent.html":{}}}],["ignore",{"_index":2753,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["imam",{"_index":2011,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["immagration",{"_index":2033,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":1641,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"license.html":{}}}],["implementation",{"_index":879,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["implements",{"_index":212,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{}}}],["implied",{"_index":4322,"title":{},"body":{"license.html":{}}}],["import",{"_index":165,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"license.html":{}}}],["import('@app/auth/auth.module').then((m",{"_index":816,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('@pages/accounts/accounts.module').then((m",{"_index":2734,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["import('@pages/admin/admin.module').then((m",{"_index":2738,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["import('@pages/pages.module').then((m",{"_index":818,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('@pages/settings/settings.module').then((m",{"_index":2732,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["import('@pages/tokens/tokens.module').then((m",{"_index":2736,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["import('@pages/transactions/transactions.module').then((m",{"_index":2730,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["importing",{"_index":4261,"title":{},"body":{"license.html":{}}}],["imports",{"_index":168,"title":{},"body":{"classes/AccountIndex.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"guards/RoleGuard.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["impose",{"_index":4184,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4324,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4376,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4379,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3694,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4373,"title":{},"body":{"license.html":{}}}],["include",{"_index":3899,"title":{},"body":{"license.html":{}}}],["included",{"_index":3901,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3862,"title":{},"body":{"license.html":{}}}],["including",{"_index":3918,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":4040,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":2948,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["income",{"_index":2953,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["incompatible",{"_index":3781,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4430,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4101,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":4180,"title":{},"body":{"license.html":{}}}],["independent",{"_index":4029,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":4232,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4194,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1283,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"license.html":{}}}],["individuals",{"_index":3787,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1827,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{}}}],["inform",{"_index":4084,"title":{},"body":{"license.html":{}}}],["information",{"_index":38,"title":{},"body":{"interfaces/AccountDetails.html":{},"guards/AuthGuard.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/OrganizationComponent.html":{},"guards/RoleGuard.html":{},"interfaces/Signature.html":{},"interfaces/Token.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["infringe",{"_index":4230,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4259,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3855,"title":{},"body":{"license.html":{}}}],["init",{"_index":941,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["initial",{"_index":1194,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["initialization",{"_index":1368,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{}}}],["initialize",{"_index":1470,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"classes/Settings.html":{},"interfaces/W3.html":{}}}],["initialized",{"_index":549,"title":{},"body":{"interfaces/Action.html":{}}}],["initializing",{"_index":2651,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["initialparams",{"_index":569,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["initiate",{"_index":4253,"title":{},"body":{"license.html":{}}}],["initiator",{"_index":1196,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["inject",{"_index":1332,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1330,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["injectable",{"_index":910,"title":{"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{},"coverage.html":{}}}],["injectables",{"_index":927,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{},"overview.html":{}}}],["input",{"_index":1278,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{},"miscellaneous/functions.html":{}}}],["input('routerlink",{"_index":2799,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["inputs",{"_index":1294,"title":{},"body":{"classes/CustomValidator.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["inside",{"_index":1637,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"license.html":{}}}],["install",{"_index":3612,"title":{},"body":{"index.html":{},"license.html":{}}}],["installation",{"_index":4118,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4132,"title":{},"body":{"license.html":{}}}],["instance",{"_index":93,"title":{},"body":{"classes/AccountIndex.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"interfaces/W3.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1388,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{}}}],["instantiates",{"_index":885,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["instead",{"_index":4436,"title":{},"body":{"license.html":{}}}],["instructor",{"_index":1981,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["insurance",{"_index":2148,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["intact",{"_index":4003,"title":{},"body":{"license.html":{}}}],["intended",{"_index":3711,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3995,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3871,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":3873,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":1365,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["intercept(request",{"_index":1371,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interceptor",{"_index":1357,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":1358,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["intercepts",{"_index":1360,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["interchange",{"_index":4053,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4247,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccountDetails.html":{},"interfaces/Action.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{}},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"interfaces/Action.html":{},"injectables/AuthService.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"classes/Settings.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Action.html":{},"interfaces/Conversion.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":4124,"title":{},"body":{"license.html":{}}}],["intern",{"_index":2001,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["internal",{"_index":2533,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["internally",{"_index":1659,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["interpretation",{"_index":4386,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3916,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3930,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":1049,"title":{},"body":{"injectables/AuthService.html":{},"classes/CustomErrorStateMatcher.html":{}}}],["invalidate",{"_index":4024,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":3939,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":1608,"title":{},"body":{"injectables/LoggingService.html":{}}}],["isdialogopen",{"_index":1340,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["isencryptedkeycheck",{"_index":1052,"title":{},"body":{"injectables/AuthService.html":{}}}],["iserrorstate",{"_index":1272,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":1273,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["issubmitted",{"_index":1286,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["isvalidkeycheck",{"_index":1046,"title":{},"body":{"injectables/AuthService.html":{}}}],["iswarning",{"_index":1439,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["iswarning(errortracestring",{"_index":1452,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["it's",{"_index":1456,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["item",{"_index":1624,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"license.html":{}}}],["items",{"_index":1661,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["itself",{"_index":4137,"title":{},"body":{"license.html":{}}}],["jack",{"_index":1686,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["jane",{"_index":3410,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["jembe",{"_index":2062,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["jewel",{"_index":2446,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["jik",{"_index":2390,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["jogoo",{"_index":1835,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["john",{"_index":3402,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["jomvu",{"_index":1899,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["journalist",{"_index":1982,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["jquery",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem(atob('cicada_user",{"_index":2783,"title":{},"body":{"guards/RoleGuard.html":{}}}],["json.stringify",{"_index":1403,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["jua",{"_index":2101,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["juacali",{"_index":2100,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["juakali",{"_index":2098,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["jualikali",{"_index":2099,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["juice",{"_index":2345,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["juja",{"_index":1833,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["junda",{"_index":1879,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["june",{"_index":3687,"title":{},"body":{"license.html":{}}}],["kabete",{"_index":1816,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kabiro",{"_index":1846,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kadongo",{"_index":1871,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kafuduni",{"_index":1744,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kahawa",{"_index":2262,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kaimati",{"_index":2259,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kajiado",{"_index":1942,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kakamega",{"_index":1940,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kakuma",{"_index":1913,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kalalani",{"_index":1743,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kali",{"_index":2102,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kaloleni",{"_index":1745,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kamba",{"_index":2257,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kambi",{"_index":1694,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kamongo",{"_index":1705,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kandongo",{"_index":1870,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kangemi",{"_index":1808,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kanisa",{"_index":2018,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kariobangi",{"_index":1828,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["karma",{"_index":3651,"title":{},"body":{"index.html":{}}}],["kasarani",{"_index":1829,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kasauni",{"_index":1864,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kasemeni",{"_index":1738,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["katundani",{"_index":1739,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kawangware",{"_index":1811,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kayaba",{"_index":1692,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kayba",{"_index":1693,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kayole",{"_index":1830,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kazi",{"_index":2107,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ke",{"_index":2625,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["kebeba",{"_index":2454,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["keccak",{"_index":3219,"title":{},"body":{"injectables/TransactionService.html":{}}}],["keccak(256",{"_index":3278,"title":{},"body":{"injectables/TransactionService.html":{}}}],["keep",{"_index":4002,"title":{},"body":{"license.html":{}}}],["keki",{"_index":2263,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kenya",{"_index":2626,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["kenyatta",{"_index":1822,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kericho",{"_index":1941,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kernel",{"_index":3910,"title":{},"body":{"license.html":{}}}],["kerosene",{"_index":2510,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kerosine",{"_index":2509,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":851,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CustomValidator.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["keyform",{"_index":827,"title":{},"body":{"components/AuthComponent.html":{}}}],["keyformstub",{"_index":834,"title":{},"body":{"components/AuthComponent.html":{}}}],["keyring",{"_index":3492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":724,"title":{},"body":{"components/AppComponent.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["keystore",{"_index":2642,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TransactionService.html":{}}}],["keystore.getprivatekey",{"_index":3305,"title":{},"body":{"injectables/TransactionService.html":{}}}],["keystoreservice",{"_index":988,"title":{"injectables/KeystoreService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/KeystoreService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["keystoreservice.getkeystore",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["keystoreservice.mutablekeystore",{"_index":1520,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["keyword",{"_index":1554,"title":{},"body":{"injectables/LocationService.html":{}}}],["keywords",{"_index":1552,"title":{},"body":{"injectables/LocationService.html":{}}}],["khaimati",{"_index":2258,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kiambu",{"_index":1946,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibanda",{"_index":2396,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibandaogo",{"_index":1740,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibandaongo",{"_index":1741,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibera",{"_index":1802,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibira",{"_index":1803,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kibra",{"_index":1804,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kidzuvini",{"_index":1742,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kikuyu",{"_index":1838,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kilfi",{"_index":1903,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kilibole",{"_index":1746,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kilifi",{"_index":78,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["kinango",{"_index":1714,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3867,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":3703,"title":{},"body":{"license.html":{}}}],["kingston",{"_index":1702,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kingstone",{"_index":1704,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kinyozi",{"_index":2106,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kiosk",{"_index":2397,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kirembe",{"_index":1857,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kisauni",{"_index":1860,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kisii",{"_index":1935,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kisumu",{"_index":1921,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kitabu",{"_index":2008,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kitengela",{"_index":1819,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kitui",{"_index":1914,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kizingo",{"_index":1888,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kmoja",{"_index":1849,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["knitting",{"_index":2108,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["know",{"_index":3732,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":4286,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4295,"title":{},"body":{"license.html":{}}}],["known/publickeys",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kokotoni",{"_index":1797,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["korokocho",{"_index":1703,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["korosho",{"_index":2343,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kra",{"_index":2031,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["krcs",{"_index":2003,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kubeba",{"_index":2469,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kufua",{"_index":2109,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kujenga",{"_index":2105,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kuku",{"_index":2261,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kulima",{"_index":2059,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kunde",{"_index":2260,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kuni",{"_index":2490,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kushona",{"_index":2097,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kusumu",{"_index":1930,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kwale",{"_index":1715,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kwangware",{"_index":1812,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["kware",{"_index":1845,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lab",{"_index":2370,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["labor",{"_index":2113,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["labour",{"_index":2064,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["landi",{"_index":1852,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["landlord",{"_index":2086,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["langata",{"_index":1853,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":3894,"title":{},"body":{"license.html":{}}}],["larger",{"_index":4033,"title":{},"body":{"license.html":{}}}],["last",{"_index":109,"title":{},"body":{"classes/AccountIndex.html":{}}}],["last(5",{"_index":161,"title":{},"body":{"classes/AccountIndex.html":{}}}],["last(numberofaccounts",{"_index":154,"title":{},"body":{"classes/AccountIndex.html":{}}}],["later",{"_index":729,"title":{},"body":{"components/AppComponent.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["latitude",{"_index":42,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["laundry",{"_index":2114,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["law",{"_index":2188,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["laws",{"_index":3826,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4257,"title":{},"body":{"license.html":{}}}],["lazy",{"_index":3631,"title":{},"body":{"index.html":{}}}],["leader",{"_index":2030,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["leaving",{"_index":1050,"title":{},"body":{"injectables/AuthService.html":{}}}],["lecturer",{"_index":1968,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["legal",{"_index":3761,"title":{},"body":{"license.html":{}}}],["legend",{"_index":314,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"overview.html":{}}}],["leso",{"_index":2404,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lesser",{"_index":4435,"title":{},"body":{"license.html":{}}}],["lesso",{"_index":2405,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lesson",{"_index":1983,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":798,"title":{},"body":{"modules/AppModule.html":{}}}],["lgpl.html",{"_index":4438,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4160,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3854,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3897,"title":{},"body":{"license.html":{}}}],["library",{"_index":4092,"title":{},"body":{"license.html":{}}}],["license",{"_index":3684,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3830,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3833,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3835,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3704,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4234,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4173,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":4227,"title":{},"body":{"license.html":{}}}],["likoni",{"_index":1885,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":1096,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"license.html":{}}}],["limitation",{"_index":4370,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4358,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4159,"title":{},"body":{"license.html":{}}}],["limuru",{"_index":1854,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lindi",{"_index":1801,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":4408,"title":{},"body":{"license.html":{}}}],["line:directive",{"_index":2797,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["line:no",{"_index":1145,"title":{},"body":{"injectables/BlockSyncService.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["lines",{"_index":2395,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":2791,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{},"coverage.html":{},"license.html":{}}}],["linked",{"_index":3927,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4433,"title":{},"body":{"license.html":{}}}],["linkparams",{"_index":2800,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["linting",{"_index":3676,"title":{},"body":{"index.html":{}}}],["list",{"_index":3883,"title":{},"body":{"license.html":{}}}],["literal",{"_index":32,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Token.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4254,"title":{},"body":{"license.html":{}}}],["lo",{"_index":1112,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["load",{"_index":434,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TokenService.html":{}}}],["loadchildren",{"_index":815,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PagesRoutingModule.html":{}}}],["loaded",{"_index":900,"title":{},"body":{"guards/AuthGuard.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"index.html":{}}}],["loading",{"_index":828,"title":{},"body":{"components/AuthComponent.html":{},"index.html":{}}}],["loan",{"_index":2380,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":3618,"title":{},"body":{"index.html":{},"license.html":{}}}],["localstorage",{"_index":909,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.getitem(btoa('cicada_private_key",{"_index":914,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["localstorage.removeitem(btoa('cicada_private_key",{"_index":1064,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem(btoa('cicada_private_key",{"_index":1057,"title":{},"body":{"injectables/AuthService.html":{}}}],["located",{"_index":3656,"title":{},"body":{"index.html":{}}}],["location",{"_index":19,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["location.tolowercase().split",{"_index":1553,"title":{},"body":{"injectables/LocationService.html":{}}}],["locationservice",{"_index":1221,"title":{"injectables/LocationService.html":{}},"body":{"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"coverage.html":{}}}],["log",{"_index":1040,"title":{},"body":{"injectables/AuthService.html":{}}}],["logerror",{"_index":1440,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["logerror(error",{"_index":1459,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["logger",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggingService.html":{},"dependencies.html":{}}}],["loggermodule",{"_index":790,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forroot",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1370,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["logginginterceptor",{"_index":774,"title":{"interceptors/LoggingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoggingInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["loggingservice",{"_index":388,"title":{"injectables/LoggingService.html":{}},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokensComponent.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["loggingurl",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":830,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["loginresult",{"_index":859,"title":{},"body":{"components/AuthComponent.html":{}}}],["loginview",{"_index":942,"title":{},"body":{"injectables/AuthService.html":{}}}],["loglevel",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":943,"title":{},"body":{"injectables/AuthService.html":{},"components/SettingsComponent.html":{}}}],["logs",{"_index":1462,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["long",{"_index":3949,"title":{},"body":{"license.html":{}}}],["longitude",{"_index":43,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["loss",{"_index":4377,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4380,"title":{},"body":{"license.html":{}}}],["lower",{"_index":2951,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["lowest",{"_index":197,"title":{},"body":{"classes/AccountIndex.html":{}}}],["lunga",{"_index":1710,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lungalunga",{"_index":1706,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lungu",{"_index":1709,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["lutsangani",{"_index":1747,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":72,"title":{},"body":{"interfaces/AccountDetails.html":{},"injectables/BlockSyncService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"miscellaneous/variables.html":{}}}],["m.accountsmodule",{"_index":2735,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["m.adminmodule",{"_index":2739,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["m.authmodule",{"_index":817,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.pagesmodule",{"_index":819,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2733,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["m.tokensmodule",{"_index":2737,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["m.transactionsmodule",{"_index":2731,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["maalim",{"_index":1963,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maandazi",{"_index":2295,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maandzi",{"_index":2338,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mabenda",{"_index":2235,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mabesheni",{"_index":1768,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mabuyu",{"_index":2274,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["machakos",{"_index":1937,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["machine",{"_index":4043,"title":{},"body":{"license.html":{}}}],["machungwa",{"_index":2275,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":1279,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Staff.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["madewani",{"_index":1764,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["madrasa",{"_index":2012,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maembe",{"_index":2158,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mafuta",{"_index":2494,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["magari",{"_index":2482,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["magogoni",{"_index":1877,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["magongo",{"_index":1896,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["magongoni",{"_index":1878,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mahamri",{"_index":2303,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maharagwe",{"_index":2301,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mahindi",{"_index":2294,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":4418,"title":{},"body":{"license.html":{}}}],["mailman",{"_index":2032,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":1953,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maintain",{"_index":4072,"title":{},"body":{"license.html":{}}}],["maize",{"_index":2288,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["majani",{"_index":2157,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["majaoni",{"_index":1875,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["majengo",{"_index":1791,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maji",{"_index":2347,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":3904,"title":{},"body":{"license.html":{}}}],["makaa",{"_index":2493,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makadara",{"_index":1820,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makanga",{"_index":2483,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":3715,"title":{},"body":{"license.html":{}}}],["makes",{"_index":3967,"title":{},"body":{"license.html":{}}}],["makina",{"_index":1805,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["making",{"_index":3841,"title":{},"body":{"license.html":{}}}],["makobeni",{"_index":1763,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makonge",{"_index":2179,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makongeni",{"_index":1906,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makueni",{"_index":1933,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makuluni",{"_index":1761,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makupa",{"_index":1891,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["makuti",{"_index":2104,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["male",{"_index":2512,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["mali",{"_index":2412,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["malimali",{"_index":2410,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":2857,"title":{},"body":{"components/SettingsComponent.html":{}}}],["manager",{"_index":2122,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["managing",{"_index":3607,"title":{},"body":{"index.html":{}}}],["manamba",{"_index":2474,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mandazi",{"_index":2292,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mango",{"_index":2248,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mangwe",{"_index":2422,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["manipulation",{"_index":890,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"guards/RoleGuard.html":{}}}],["manner",{"_index":4270,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":3779,"title":{},"body":{"license.html":{}}}],["manyani",{"_index":1876,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":1313,"title":{},"body":{"classes/CustomValidator.html":{}}}],["march",{"_index":4319,"title":{},"body":{"license.html":{}}}],["mariakani",{"_index":1762,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["marital",{"_index":1996,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["marked",{"_index":3771,"title":{},"body":{"license.html":{}}}],["market",{"_index":1859,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["marketing",{"_index":2182,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":4178,"title":{},"body":{"license.html":{}}}],["marondo",{"_index":2337,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["masai",{"_index":1695,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mask",{"_index":2368,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["masks",{"_index":3828,"title":{},"body":{"license.html":{}}}],["mason",{"_index":2125,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":1333,"title":{},"body":{"components/ErrorDialogComponent.html":{}}}],["matatu",{"_index":2459,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":511,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matcardmodule",{"_index":513,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["match",{"_index":1304,"title":{},"body":{"classes/CustomValidator.html":{}}}],["matcheckboxmodule",{"_index":503,"title":{},"body":{"modules/AccountsModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matcher",{"_index":227,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["matcher.ts",{"_index":1261,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"coverage.html":{}}}],["matcher.ts:17",{"_index":1277,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["matches",{"_index":2779,"title":{},"body":{"guards/RoleGuard.html":{}}}],["matching",{"_index":86,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1343,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["matdialogmodule",{"_index":2892,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogref",{"_index":1348,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["material",{"_index":2667,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["material.digest",{"_index":2684,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["materialize",{"_index":1666,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["materially",{"_index":4138,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":508,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["math.min(this.transactions.length",{"_index":3266,"title":{},"body":{"injectables/TransactionService.html":{}}}],["math.pow(10",{"_index":2963,"title":{},"body":{"pipes/TokenRatioPipe.html":{}}}],["mathare",{"_index":1831,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mathere",{"_index":1855,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":515,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matinputmodule",{"_index":506,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matmenumodule",{"_index":2876,"title":{},"body":{"modules/SettingsModule.html":{}}}],["matoke",{"_index":2339,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":411,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["matpaginatormodule",{"_index":505,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matprogressspinnermodule",{"_index":524,"title":{},"body":{"modules/AccountsModule.html":{}}}],["matpseudocheckboxmodule",{"_index":3092,"title":{},"body":{"modules/TokensModule.html":{}}}],["matradiomodule",{"_index":2874,"title":{},"body":{"modules/SettingsModule.html":{}}}],["matress",{"_index":2429,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["matripplemodule",{"_index":522,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["matselectmodule",{"_index":517,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TransactionsModule.html":{}}}],["matsidenavmodule",{"_index":3093,"title":{},"body":{"modules/TokensModule.html":{}}}],["matsnackbar",{"_index":3115,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["matsnackbarmodule",{"_index":529,"title":{},"body":{"modules/AccountsModule.html":{},"modules/TransactionsModule.html":{}}}],["matsort",{"_index":415,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["matsortmodule",{"_index":502,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["mattabledatasource",{"_index":402,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["mattabledatasource(accounts",{"_index":437,"title":{},"body":{"components/AccountsComponent.html":{}}}],["mattabledatasource(actions",{"_index":642,"title":{},"body":{"components/AdminComponent.html":{}}}],["mattabledatasource(tokens",{"_index":3081,"title":{},"body":{"components/TokensComponent.html":{}}}],["mattabledatasource(transactions",{"_index":3361,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["mattabledatasource(users",{"_index":2851,"title":{},"body":{"components/SettingsComponent.html":{}}}],["mattablemodule",{"_index":501,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["mattabsmodule",{"_index":520,"title":{},"body":{"modules/AccountsModule.html":{}}}],["mattoolbarmodule",{"_index":3095,"title":{},"body":{"modules/TokensModule.html":{}}}],["mattress",{"_index":2430,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mattresses",{"_index":2431,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["matuga",{"_index":1792,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["matunda",{"_index":2247,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mawe",{"_index":2156,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mayai",{"_index":2310,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mazera",{"_index":1770,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mazeras",{"_index":1769,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mazingira",{"_index":2046,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["maziwa",{"_index":2268,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbaazi",{"_index":2293,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbao",{"_index":2491,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbata",{"_index":2289,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbenda",{"_index":2236,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbita",{"_index":1919,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbog",{"_index":2270,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mboga",{"_index":2269,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbonga",{"_index":2195,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mbuzi",{"_index":2276,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mc",{"_index":3416,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["mchanga",{"_index":2426,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mchele",{"_index":2246,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mchicha",{"_index":2278,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mchuuzi",{"_index":2291,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mchuzi",{"_index":2290,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["meaning",{"_index":4188,"title":{},"body":{"license.html":{}}}],["means",{"_index":3825,"title":{},"body":{"license.html":{}}}],["measure",{"_index":3975,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3988,"title":{},"body":{"license.html":{}}}],["meat",{"_index":2297,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mechanic",{"_index":2128,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mediaquery",{"_index":676,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["mediaquery.matches",{"_index":1645,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["mediaquerylist",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["medicine",{"_index":2369,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":3998,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4011,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3886,"title":{},"body":{"license.html":{}}}],["mellon",{"_index":2250,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["melon",{"_index":2249,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":1623,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"license.html":{}}}],["menuselectiondirective",{"_index":361,"title":{"directives/MenuSelectionDirective.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menutoggledirective",{"_index":363,"title":{"directives/MenuToggleDirective.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["merchantability",{"_index":4359,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3870,"title":{},"body":{"license.html":{}}}],["mergemap",{"_index":1667,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["merging",{"_index":4243,"title":{},"body":{"license.html":{}}}],["meru",{"_index":1934,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":60,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ErrorDialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["message:\\n${message}.\\nstack",{"_index":1481,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["messages",{"_index":1270,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["met",{"_index":3941,"title":{},"body":{"license.html":{}}}],["meta",{"_index":52,"title":{"interfaces/Meta.html":{}},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"injectables/TransactionService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":214,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{}}}],["metal",{"_index":2185,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["metaresponse",{"_index":71,"title":{"interfaces/MetaResponse.html":{}},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"coverage.html":{}}}],["method",{"_index":561,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["methods",{"_index":104,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"license.html":{}}}],["methodsignature",{"_index":3281,"title":{},"body":{"injectables/TransactionService.html":{}}}],["mfugaji",{"_index":2130,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mganga",{"_index":2360,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mgema",{"_index":2140,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mhogo",{"_index":2298,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miatsani",{"_index":1774,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miatsiani",{"_index":1755,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2952,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["mienzeni",{"_index":1756,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mifugo",{"_index":2311,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["migori",{"_index":1929,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miguneni",{"_index":1778,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mihogo",{"_index":2299,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mikate",{"_index":2285,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mikeka",{"_index":2423,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mikindani",{"_index":1798,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["milk",{"_index":2266,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mill",{"_index":2118,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miloeni",{"_index":1767,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mined",{"_index":1204,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["minheight",{"_index":627,"title":{},"body":{"components/AdminComponent.html":{}}}],["mining",{"_index":1197,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["minting",{"_index":2925,"title":{},"body":{"interfaces/Token.html":{}}}],["minyenzeni",{"_index":1758,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mioleni",{"_index":1760,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miraa",{"_index":2265,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miritini",{"_index":1897,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["misc",{"_index":1799,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":3548,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":4169,"title":{},"body":{"license.html":{}}}],["miti",{"_index":2047,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mitumba",{"_index":2304,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mitungi",{"_index":2411,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miwa",{"_index":2302,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miyani",{"_index":1759,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["miyenzeni",{"_index":1754,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mjambere",{"_index":1874,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mjengo",{"_index":2160,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mjenzi",{"_index":2129,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mjinga",{"_index":1882,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mkanyeni",{"_index":1752,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mkate",{"_index":2283,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mkokoteni",{"_index":2476,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mksiti",{"_index":2019,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mkulima",{"_index":2058,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mlaleo",{"_index":1883,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mlola",{"_index":1771,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mlolongo",{"_index":1821,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mnarani",{"_index":1907,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mnazi",{"_index":2277,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mnyenzeni",{"_index":1757,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mnyuchi",{"_index":1863,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":572,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mockbackendinterceptor",{"_index":1656,"title":{"interceptors/MockBackendInterceptor.html":{}},"body":{"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockbackendprovider",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1612,"title":{},"body":{"injectables/LoggingService.html":{},"index.html":{},"license.html":{}}}],["model",{"_index":4058,"title":{},"body":{"license.html":{}}}],["modification",{"_index":3821,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3889,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3770,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4015,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3743,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3860,"title":{},"body":{"license.html":{}}}],["module",{"_index":471,"title":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/FooterStubComponent.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"components/SidebarStubComponent.html":{},"modules/TokensModule.html":{},"components/TopbarStubComponent.html":{},"modules/TransactionsModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":473,"title":{"modules.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mogoka",{"_index":2296,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mombasa",{"_index":1861,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":903,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["more",{"_index":3679,"title":{},"body":{"index.html":{},"license.html":{}}}],["moreover",{"_index":4214,"title":{},"body":{"license.html":{}}}],["moto",{"_index":2495,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["motorbike",{"_index":2479,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["motorist",{"_index":2478,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mover",{"_index":2477,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["movie",{"_index":2424,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mpesa",{"_index":2433,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mpishi",{"_index":2138,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mpsea",{"_index":2432,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ms",{"_index":1578,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["mshomoro",{"_index":1872,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mshomoroni",{"_index":1881,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msusi",{"_index":2139,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mtambo",{"_index":2119,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mtopanga",{"_index":1873,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mtumba",{"_index":2126,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mtwapa",{"_index":1904,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["muguka",{"_index":2264,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["muhogo",{"_index":2300,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mukuru",{"_index":1690,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mulunguni",{"_index":1773,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mumias",{"_index":1926,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["musician",{"_index":2177,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mutablekeystore",{"_index":929,"title":{},"body":{"injectables/AuthService.html":{},"injectables/KeystoreService.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["mutablepgpkeystore",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"injectables/KeystoreService.html":{},"coverage.html":{}}}],["mutumba",{"_index":2402,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["muugano",{"_index":1772,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mvita",{"_index":1892,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mvuvi",{"_index":2155,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwache",{"_index":1775,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwakirunge",{"_index":1880,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwalimu",{"_index":1962,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwangani",{"_index":1776,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwangaraba",{"_index":1765,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwashanga",{"_index":1766,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwea",{"_index":1947,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwehavikonje",{"_index":1777,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwiki",{"_index":1843,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mwingi",{"_index":1915,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["mworoni",{"_index":1865,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["myenzeni",{"_index":1753,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":50,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["nairobi",{"_index":1691,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nakuru",{"_index":1948,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":119,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name(s",{"_index":1253,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["names",{"_index":1254,"title":{},"body":{"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["namesearchform",{"_index":228,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["namesearchformstub",{"_index":239,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["namesearchloading",{"_index":229,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["namesearchsubmitted",{"_index":230,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["nandi",{"_index":1943,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["narok",{"_index":1949,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["native",{"_index":1636,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["nature",{"_index":4030,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":3623,"title":{},"body":{"index.html":{}}}],["navigatedto",{"_index":2792,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["navigation",{"_index":887,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"guards/RoleGuard.html":{}}}],["navigator.online",{"_index":2593,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["nazi",{"_index":2281,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ndizi",{"_index":2255,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["necessary",{"_index":4367,"title":{},"body":{"license.html":{}}}],["need",{"_index":3736,"title":{},"body":{"license.html":{}}}],["needed",{"_index":3800,"title":{},"body":{"license.html":{}}}],["network",{"_index":100,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/W3.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["networkstatuscomponent",{"_index":339,"title":{"components/NetworkStatusComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"components/OrganizationComponent.html":{},"injectables/RegistryService.html":{},"components/SettingsComponent.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newevent",{"_index":1089,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["newevent(tx",{"_index":1104,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["next",{"_index":563,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/BlockSyncService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"directives/RouterLinkDirectiveStub.html":{},"license.html":{}}}],["next.handle(request",{"_index":1512,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":1384,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request).pipe(tap(event",{"_index":1573,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["ng",{"_index":3616,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":3338,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["ngano",{"_index":2280,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ngform",{"_index":1276,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["ngmodule",{"_index":488,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["ngombe",{"_index":2279,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ngombeni",{"_index":1893,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ngong",{"_index":1841,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ngoninit",{"_index":234,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["nguo",{"_index":2124,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ngx",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggingService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":1591,"title":{},"body":{"injectables/LoggingService.html":{}}}],["ngxloggerlevel.error",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngómbeni",{"_index":1894,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["njugu",{"_index":2256,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nobody",{"_index":1495,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["nointernetconnection",{"_index":2585,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["non",{"_index":3816,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":4065,"title":{},"body":{"license.html":{}}}],["none",{"_index":873,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nopasswordmatch",{"_index":1319,"title":{},"body":{"classes/CustomValidator.html":{}}}],["normal",{"_index":3902,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4096,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":4228,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3879,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3875,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4215,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4210,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4156,"title":{},"body":{"license.html":{}}}],["now",{"_index":1051,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":3611,"title":{},"body":{"index.html":{}}}],["null",{"_index":1098,"title":{},"body":{"injectables/BlockSyncService.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["number",{"_index":26,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"components/AppComponent.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Signature.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["number(await",{"_index":3293,"title":{},"body":{"injectables/TransactionService.html":{}}}],["number(conversion.fromvalue",{"_index":3253,"title":{},"body":{"injectables/TransactionService.html":{}}}],["number(conversion.tovalue",{"_index":3255,"title":{},"body":{"injectables/TransactionService.html":{}}}],["number(transaction.value",{"_index":3237,"title":{},"body":{"injectables/TransactionService.html":{}}}],["number(value",{"_index":2962,"title":{},"body":{"pipes/TokenRatioPipe.html":{}}}],["numbered",{"_index":4347,"title":{},"body":{"license.html":{}}}],["numberofaccounts",{"_index":158,"title":{},"body":{"classes/AccountIndex.html":{}}}],["numbers",{"_index":3560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nurse",{"_index":2363,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nursery",{"_index":1977,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyalenda",{"_index":1922,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyalgunga",{"_index":1918,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyali",{"_index":1866,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyama",{"_index":2252,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyanya",{"_index":2251,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyanza",{"_index":1916,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nyeri",{"_index":1944,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nzora",{"_index":1779,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nzovuni",{"_index":1780,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nzugu",{"_index":2342,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":1024,"title":{},"body":{"injectables/AuthService.html":{}}}],["o.challenge",{"_index":1027,"title":{},"body":{"injectables/AuthService.html":{}}}],["o.realm",{"_index":1028,"title":{},"body":{"injectables/AuthService.html":{}}}],["objcsv",{"_index":3480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":64,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Action.html":{},"interfaces/Conversion.html":{},"classes/CustomValidator.html":{},"injectables/LocationService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"classes/Settings.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(areanames).find((key",{"_index":1556,"title":{},"body":{"injectables/LocationService.html":{}}}],["object.keys(areatypes).find((key",{"_index":1562,"title":{},"body":{"injectables/LocationService.html":{}}}],["object.keys(res",{"_index":1243,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["objects",{"_index":1448,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["obligate",{"_index":4331,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4079,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3977,"title":{},"body":{"license.html":{}}}],["observable",{"_index":558,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{}}}],["observables's",{"_index":577,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["occasionally",{"_index":4064,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1391,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["occurring",{"_index":4225,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1451,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["of('hello",{"_index":3327,"title":{},"body":{"classes/TransactionServiceStub.html":{}}}],["of(new",{"_index":2576,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["of(null",{"_index":2526,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["offer",{"_index":3759,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4086,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4068,"title":{},"body":{"license.html":{}}}],["office",{"_index":1908,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["official",{"_index":3891,"title":{},"body":{"license.html":{}}}],["offline",{"_index":2599,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["offset",{"_index":1095,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["ohuru",{"_index":1900,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["oil",{"_index":2501,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ok(accounttypes",{"_index":2562,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(actions",{"_index":2563,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(areanames",{"_index":2565,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(areatypes",{"_index":2566,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(categories",{"_index":2567,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(genders",{"_index":2568,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(message",{"_index":2561,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(queriedaction",{"_index":2564,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(responsebody",{"_index":2575,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["ok(transactiontypes",{"_index":2569,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["old",{"_index":1889,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["oldchain:1",{"_index":41,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["olympic",{"_index":1807,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ombeni",{"_index":1895,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["omena",{"_index":2253,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["omeno",{"_index":2340,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["onaddresssearch",{"_index":235,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["once",{"_index":3662,"title":{},"body":{"index.html":{}}}],["onclick",{"_index":2802,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["one",{"_index":3895,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":213,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["onions",{"_index":2341,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["online",{"_index":2600,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["onmenuselect",{"_index":1627,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["onmenutoggle",{"_index":1649,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["onnamesearch",{"_index":236,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["onphonesearch",{"_index":237,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["onresize",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(e",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["onsign",{"_index":2643,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["onsign(signature",{"_index":2676,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["onsubmit",{"_index":831,"title":{},"body":{"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["onverify",{"_index":2644,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["onverify(flag",{"_index":2677,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["opendialog",{"_index":1341,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["opendialog(data",{"_index":1345,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["openpgp",{"_index":2674,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"miscellaneous/variables.html":{}}}],["openpgp.cleartext.fromtext(digest",{"_index":2685,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["openpgp.keyring",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openpgp.signature",{"_index":2705,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["openpgp.verify(opts).then((v",{"_index":2710,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["operate",{"_index":4383,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4071,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3912,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3569,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["option",{"_index":4153,"title":{},"body":{"license.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signer.html":{},"interfaces/Token.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["options).then((response",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["opts",{"_index":2691,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["oranges",{"_index":2282,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":4223,"title":{},"body":{"license.html":{}}}],["organisation",{"_index":2621,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization",{"_index":2602,"title":{},"body":{"components/OrganizationComponent.html":{},"modules/SettingsRoutingModule.html":{},"license.html":{}}}],["organization'},{'name",{"_index":342,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["organization.component.html",{"_index":2604,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":2603,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationcomponent",{"_index":341,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organizationform",{"_index":2605,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizationformstub",{"_index":2606,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organizations",{"_index":3836,"title":{},"body":{"license.html":{}}}],["origin",{"_index":4170,"title":{},"body":{"license.html":{}}}],["original",{"_index":4171,"title":{},"body":{"license.html":{}}}],["others",{"_index":3738,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":149,"title":{},"body":{"classes/AccountIndex.html":{},"license.html":{}}}],["out",{"_index":486,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outgoing",{"_index":1362,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["outlet",{"_index":901,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["output",{"_index":2942,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{},"license.html":{}}}],["outputs",{"_index":2935,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["outside",{"_index":3960,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3681,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owino",{"_index":1711,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["owned",{"_index":4266,"title":{},"body":{"license.html":{}}}],["owner",{"_index":2913,"title":{},"body":{"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{}}}],["package",{"_index":3520,"title":{"dependencies.html":{}},"body":{}}],["packaged",{"_index":4022,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3903,"title":{},"body":{"license.html":{}}}],["page",{"_index":734,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pages",{"_index":2713,"title":{},"body":{"components/PagesComponent.html":{}}}],["pages'},{'name",{"_index":344,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["pages.component",{"_index":2729,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["pages.component.html",{"_index":2715,"title":{},"body":{"components/PagesComponent.html":{}}}],["pages.component.scss",{"_index":2714,"title":{},"body":{"components/PagesComponent.html":{}}}],["pages/accounts/account",{"_index":495,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["pages/accounts/accounts",{"_index":491,"title":{},"body":{"modules/AccountsModule.html":{}}}],["pages/accounts/accounts.component",{"_index":493,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["pages/accounts/create",{"_index":498,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["pages/admin/admin",{"_index":669,"title":{},"body":{"modules/AdminModule.html":{}}}],["pages/admin/admin.component",{"_index":670,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["pages/pages",{"_index":2726,"title":{},"body":{"modules/PagesModule.html":{}}}],["pages/pages.component",{"_index":2727,"title":{},"body":{"modules/PagesModule.html":{}}}],["pages/settings/organization/organization.component",{"_index":2873,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/settings/settings",{"_index":2871,"title":{},"body":{"modules/SettingsModule.html":{}}}],["pages/settings/settings.component",{"_index":2872,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pages/tokens/token",{"_index":3091,"title":{},"body":{"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{}}}],["pages/tokens/tokens",{"_index":3089,"title":{},"body":{"modules/TokensModule.html":{}}}],["pages/tokens/tokens.component",{"_index":3090,"title":{},"body":{"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{}}}],["pages/transactions/transaction",{"_index":3388,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["pages/transactions/transactions",{"_index":3386,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["pages/transactions/transactions.component",{"_index":3387,"title":{},"body":{"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["pages/transactions/transactions.module",{"_index":519,"title":{},"body":{"modules/AccountsModule.html":{}}}],["pagescomponent",{"_index":343,"title":{"components/PagesComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagesizeoptions",{"_index":378,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionsComponent.html":{}}}],["pagesmodule",{"_index":2720,"title":{"modules/PagesModule.html":{}},"body":{"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesroutingmodule",{"_index":2724,"title":{"modules/PagesRoutingModule.html":{}},"body":{"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["paginator",{"_index":379,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["painter",{"_index":2131,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pampers",{"_index":2419,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["papa",{"_index":2233,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["paper",{"_index":4417,"title":{},"body":{"license.html":{}}}],["paraffin",{"_index":2504,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["parafin",{"_index":2506,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4200,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4278,"title":{},"body":{"license.html":{}}}],["param",{"_index":181,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"classes/Settings.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"interfaces/W3.html":{}}}],["parameters",{"_index":118,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signer.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":557,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["params",{"_index":567,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["parrafin",{"_index":2505,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["parsed",{"_index":3589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsedata",{"_index":3478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsedata(data",{"_index":3587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parseint(urlparts[urlparts.length",{"_index":2574,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["parser",{"_index":3231,"title":{},"body":{"injectables/TransactionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":3588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["part",{"_index":3838,"title":{},"body":{"license.html":{}}}],["particular",{"_index":902,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["parties",{"_index":3869,"title":{},"body":{"license.html":{}}}],["parts",{"_index":2408,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["party",{"_index":912,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["party's",{"_index":4245,"title":{},"body":{"license.html":{}}}],["pass",{"_index":2549,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["password",{"_index":1055,"title":{},"body":{"injectables/AuthService.html":{},"classes/CustomValidator.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TransactionService.html":{},"license.html":{}}}],["password.type",{"_index":2754,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["passwordmatchvalidator",{"_index":1296,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordmatchvalidator(control",{"_index":1298,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordtoggledirective",{"_index":365,"title":{"directives/PasswordToggleDirective.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pastor",{"_index":2010,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":4199,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3803,"title":{},"body":{"license.html":{}}}],["path",{"_index":536,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["pathmatch",{"_index":538,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["patience",{"_index":1689,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":3785,"title":{},"body":{"license.html":{}}}],["patternvalidator",{"_index":1297,"title":{},"body":{"classes/CustomValidator.html":{}}}],["patternvalidator(regex",{"_index":1306,"title":{},"body":{"classes/CustomValidator.html":{}}}],["payment",{"_index":4313,"title":{},"body":{"license.html":{}}}],["peanuts",{"_index":2239,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["peddler",{"_index":2143,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["peer",{"_index":4082,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4085,"title":{},"body":{"license.html":{}}}],["peku",{"_index":1748,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["perform",{"_index":1293,"title":{},"body":{"classes/CustomValidator.html":{},"index.html":{}}}],["performance",{"_index":4363,"title":{},"body":{"license.html":{}}}],["performed",{"_index":545,"title":{},"body":{"interfaces/Action.html":{}}}],["performing",{"_index":3923,"title":{},"body":{"license.html":{}}}],["perfume",{"_index":2436,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["periurban",{"_index":1952,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["permanently",{"_index":4208,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3762,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":3936,"title":{},"body":{"license.html":{}}}],["permissive",{"_index":4005,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4039,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4190,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3697,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":4127,"title":{},"body":{"license.html":{}}}],["person",{"_index":3596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["personal",{"_index":36,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"license.html":{}}}],["personvalidation",{"_index":3483,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["personvalidation(person",{"_index":3594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pertinent",{"_index":4329,"title":{},"body":{"license.html":{}}}],["pesa",{"_index":2451,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["petro",{"_index":2508,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["petrol",{"_index":2507,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pgp",{"_index":1043,"title":{},"body":{"injectables/AuthService.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["pgp.js",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["pgpsigner",{"_index":2635,"title":{"classes/PGPSigner.html":{}},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["pharmacy",{"_index":2372,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["phone",{"_index":311,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":284,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/CreateAccountComponent.html":{}}}],["phonesearchform",{"_index":231,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["phonesearchformstub",{"_index":240,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["phonesearchloading",{"_index":232,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["phonesearchsubmitted",{"_index":233,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["photo",{"_index":2184,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["photocopy",{"_index":2142,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["photographer",{"_index":2162,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["physical",{"_index":4047,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4062,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":3731,"title":{},"body":{"license.html":{}}}],["piki",{"_index":2472,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pikipiki",{"_index":2473,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pilau",{"_index":2307,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":1832,"title":{"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{}},"body":{"interceptors/MockBackendInterceptor.html":{},"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe(delay(500",{"_index":2529,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["pipe(dematerialize",{"_index":2530,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["pipe(first",{"_index":445,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["pipe(materialize",{"_index":2528,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["pipe(mergemap(handleroute",{"_index":2527,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["pipes",{"_index":2806,"title":{},"body":{"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":2813,"title":{},"body":{"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{}}}],["pk",{"_index":2686,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["pk.decrypt(password",{"_index":2690,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["pk.isdecrypted",{"_index":2688,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["place",{"_index":4070,"title":{},"body":{"license.html":{}}}],["plastic",{"_index":2050,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["playstation",{"_index":2437,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":727,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["plumb",{"_index":2135,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["plus",{"_index":4248,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":4409,"title":{},"body":{"license.html":{}}}],["pojo",{"_index":2232,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["police",{"_index":2024,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pombe",{"_index":2418,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pool",{"_index":2420,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["popperjs/core",{"_index":3530,"title":{},"body":{"dependencies.html":{}}}],["populated",{"_index":3663,"title":{},"body":{"index.html":{}}}],["porridge",{"_index":2306,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["portion",{"_index":4089,"title":{},"body":{"license.html":{}}}],["posho",{"_index":2117,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["possesses",{"_index":4059,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4019,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4385,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4400,"title":{},"body":{"license.html":{}}}],["post",{"_index":2541,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["potatoes",{"_index":2240,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["poultry",{"_index":2237,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["power",{"_index":3990,"title":{},"body":{"license.html":{}}}],["practical",{"_index":3705,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3791,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":3702,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3817,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3788,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":4246,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":3888,"title":{},"body":{"license.html":{}}}],["preloadallmodules",{"_index":813,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":822,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepare",{"_index":2646,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signer.html":{}}}],["prepare(material",{"_index":2664,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["present",{"_index":4342,"title":{},"body":{"license.html":{}}}],["presents",{"_index":3882,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4164,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3668,"title":{},"body":{"index.html":{}}}],["prettierrc",{"_index":3673,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":3737,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":4123,"title":{},"body":{"license.html":{}}}],["previous",{"_index":581,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"license.html":{}}}],["price",{"_index":3726,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4315,"title":{},"body":{"license.html":{}}}],["primary",{"_index":1969,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["printing",{"_index":2133,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["prints",{"_index":131,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/functions.html":{}}}],["prior",{"_index":4211,"title":{},"body":{"license.html":{}}}],["private",{"_index":279,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"injectables/Web3Service.html":{},"license.html":{}}}],["privatekey",{"_index":3304,"title":{},"body":{"injectables/TransactionService.html":{}}}],["privatekey.decrypt(password",{"_index":3307,"title":{},"body":{"injectables/TransactionService.html":{}}}],["privatekey.isdecrypted",{"_index":3306,"title":{},"body":{"injectables/TransactionService.html":{}}}],["privatekey.keypacket.privateparams.d",{"_index":3310,"title":{},"body":{"injectables/TransactionService.html":{}}}],["privatekeyarmored",{"_index":969,"title":{},"body":{"injectables/AuthService.html":{}}}],["privatekeys",{"_index":2692,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["problems",{"_index":3773,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4119,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":4303,"title":{},"body":{"license.html":{}}}],["prod",{"_index":3622,"title":{},"body":{"index.html":{}}}],["produce",{"_index":3915,"title":{},"body":{"license.html":{}}}],["product",{"_index":4048,"title":{},"body":{"license.html":{}}}],["production",{"_index":3641,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":20,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["professor",{"_index":1989,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1684,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["program",{"_index":3714,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3997,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2163,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["programming",{"_index":2134,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["programs",{"_index":3723,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":4397,"title":{},"body":{"license.html":{}}}],["progress...show",{"_index":732,"title":{},"body":{"components/AppComponent.html":{}}}],["progressive",{"_index":3644,"title":{},"body":{"index.html":{}}}],["prohibit",{"_index":3790,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3986,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4310,"title":{},"body":{"license.html":{}}}],["project",{"_index":3608,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":3885,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3878,"title":{},"body":{"license.html":{}}}],["promise",{"_index":138,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/KeystoreService.html":{},"classes/PGPSigner.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"components/SettingsComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1074,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise(async",{"_index":1518,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["propagate",{"_index":3849,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4231,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3861,"title":{},"body":{"license.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"injectables/RegistryService.html":{},"directives/RouterLinkDirectiveStub.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":4095,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":3813,"title":{},"body":{"license.html":{}}}],["protect",{"_index":3734,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3783,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3764,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":4142,"title":{},"body":{"license.html":{}}}],["protractor",{"_index":3654,"title":{},"body":{"index.html":{}}}],["prove",{"_index":4364,"title":{},"body":{"license.html":{}}}],["provide",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":35,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"license.html":{}}}],["providedin",{"_index":913,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/ErrorDialogService.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{}}}],["provider",{"_index":1263,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/Settings.html":{},"interfaces/W3.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":477,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"overview.html":{}}}],["provides",{"_index":92,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"miscellaneous/functions.html":{}}}],["provision",{"_index":3798,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4205,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4351,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4353,"title":{},"body":{"license.html":{}}}],["pry",{"_index":1960,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["pub",{"_index":2449,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":105,"title":{},"body":{"classes/AccountIndex.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"classes/PGPSigner.html":{},"injectables/RegistryService.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"classes/TokenRegistry.html":{},"injectables/Web3Service.html":{},"license.html":{}}}],["publicity",{"_index":4172,"title":{},"body":{"license.html":{}}}],["publickeys",{"_index":718,"title":{},"body":{"components/AppComponent.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["publickeysurl",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publicly",{"_index":4143,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4001,"title":{},"body":{"license.html":{}}}],["published",{"_index":4348,"title":{},"body":{"license.html":{}}}],["pump",{"_index":584,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["purpose",{"_index":3806,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4099,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":4300,"title":{},"body":{"license.html":{}}}],["pwa",{"_index":3642,"title":{},"body":{"index.html":{}}}],["qkvhsu46vknbukqnclzfulnjt046my4wdqpftufjtdphyxjuzxnlbkbob3rtywlslmnvbq0krk46s3vydmkgs3jhbmpjdqpooktyyw5qyztldxj0ozs7dqpuruw7vflqpunftew6njkyntazmzq5ode5ng0kru5eolzdqvjedqo",{"_index":3450,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["qualify",{"_index":4220,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4362,"title":{},"body":{"license.html":{}}}],["queriedaction",{"_index":2554,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["queriedaction.approval",{"_index":2558,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["queriedareaname",{"_index":1555,"title":{},"body":{"injectables/LocationService.html":{}}}],["queriedareatype",{"_index":1561,"title":{},"body":{"injectables/LocationService.html":{}}}],["queriedtoken",{"_index":3047,"title":{},"body":{"injectables/TokenService.html":{}}}],["querying",{"_index":97,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["queryparams",{"_index":2787,"title":{},"body":{"guards/RoleGuard.html":{}}}],["quot;false&quot",{"_index":151,"title":{},"body":{"classes/AccountIndex.html":{}}}],["quot;true&quot",{"_index":132,"title":{},"body":{"classes/AccountIndex.html":{},"miscellaneous/functions.html":{}}}],["r",{"_index":1026,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["raibai",{"_index":1911,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["rangala",{"_index":1924,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ratio",{"_index":2926,"title":{},"body":{"interfaces/Token.html":{}}}],["ratio.pipe",{"_index":2891,"title":{},"body":{"modules/SharedModule.html":{}}}],["ratio.pipe.ts",{"_index":2959,"title":{},"body":{"pipes/TokenRatioPipe.html":{},"coverage.html":{}}}],["ratio.pipe.ts:5",{"_index":2961,"title":{},"body":{"pipes/TokenRatioPipe.html":{}}}],["rcu",{"_index":2622,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["reached",{"_index":726,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":527,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AuthModule.html":{},"modules/SettingsModule.html":{}}}],["read",{"_index":3593,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["readable",{"_index":4044,"title":{},"body":{"license.html":{}}}],["readarmored(signature.data",{"_index":2706,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["readcsv",{"_index":3479,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["readcsv(input",{"_index":3590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readily",{"_index":4288,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4146,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":564,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["reads",{"_index":3591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ready",{"_index":3797,"title":{},"body":{"license.html":{}}}],["readystate",{"_index":677,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockSyncService.html":{}}}],["readystateelements",{"_index":1129,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["readystateelements.network",{"_index":1143,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["readystateprocessor",{"_index":1090,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["readystateprocessor(settings",{"_index":1108,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["readystatetarget",{"_index":678,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockSyncService.html":{}}}],["reason",{"_index":4298,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4060,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4218,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3729,"title":{},"body":{"license.html":{}}}],["received",{"_index":3751,"title":{},"body":{"license.html":{}}}],["receives",{"_index":4236,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4305,"title":{},"body":{"license.html":{}}}],["recently",{"_index":157,"title":{},"body":{"classes/AccountIndex.html":{}}}],["receptionist",{"_index":2132,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["recipient",{"_index":1200,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"license.html":{}}}],["recipient's",{"_index":4296,"title":{},"body":{"license.html":{}}}],["recipientaddress",{"_index":3207,"title":{},"body":{"injectables/TransactionService.html":{}}}],["recipientbloxberglink",{"_index":3105,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["recipients",{"_index":3748,"title":{},"body":{"license.html":{}}}],["reclaim",{"_index":1679,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["reclamations",{"_index":2518,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["recognized",{"_index":3892,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1079,"title":{},"body":{"injectables/AuthService.html":{}}}],["recycling",{"_index":2054,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1978,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["redcross",{"_index":2002,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":537,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["redistribute",{"_index":4403,"title":{},"body":{"license.html":{}}}],["reference",{"_index":3683,"title":{},"body":{"index.html":{}}}],["referrer",{"_index":1238,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["referring",{"_index":3725,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3824,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":4333,"title":{},"body":{"license.html":{}}}],["refreshpaginator",{"_index":385,"title":{},"body":{"components/AccountsComponent.html":{}}}],["regard",{"_index":4152,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4021,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1268,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["regenerate",{"_index":3934,"title":{},"body":{"license.html":{}}}],["regex",{"_index":1312,"title":{},"body":{"classes/CustomValidator.html":{}}}],["regex.test(control.value",{"_index":1321,"title":{},"body":{"classes/CustomValidator.html":{}}}],["regexp",{"_index":1307,"title":{},"body":{"classes/CustomValidator.html":{}}}],["registered",{"_index":98,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["registers",{"_index":127,"title":{},"body":{"classes/AccountIndex.html":{}}}],["registration",{"_index":29,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["registry",{"_index":95,"title":{},"body":{"classes/AccountIndex.html":{},"injectables/RegistryService.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"interfaces/W3.html":{},"miscellaneous/variables.html":{}}}],["registry.ts",{"_index":2966,"title":{},"body":{"classes/TokenRegistry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry.ts:22",{"_index":2970,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registry.ts:24",{"_index":2971,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registry.ts:26",{"_index":2969,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registry.ts:57",{"_index":2973,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registry.ts:75",{"_index":2980,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registry.ts:91",{"_index":2984,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["registryaddress",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registryservice",{"_index":1125,"title":{"injectables/RegistryService.html":{}},"body":{"injectables/BlockSyncService.html":{},"injectables/RegistryService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"coverage.html":{}}}],["registryservice.filegetter",{"_index":2770,"title":{},"body":{"injectables/RegistryService.html":{}}}],["registryservice.getregistry",{"_index":1134,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["registryservice.registry",{"_index":2768,"title":{},"body":{"injectables/RegistryService.html":{}}}],["registryservice.registry.declaratorhelper.addtrust(environment.trusteddeclaratoraddress",{"_index":2773,"title":{},"body":{"injectables/RegistryService.html":{}}}],["registryservice.registry.load",{"_index":2774,"title":{},"body":{"injectables/RegistryService.html":{}}}],["regular",{"_index":1310,"title":{},"body":{"classes/CustomValidator.html":{}}}],["reinstated",{"_index":4204,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1075,"title":{},"body":{"injectables/AuthService.html":{},"injectables/KeystoreService.html":{}}}],["reject(rejectbody(res",{"_index":1080,"title":{},"body":{"injectables/AuthService.html":{}}}],["rejectbody",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rejectbody(error",{"_index":1499,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"miscellaneous/functions.html":{}}}],["relationship",{"_index":3961,"title":{},"body":{"license.html":{}}}],["released",{"_index":3719,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4013,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":4191,"title":{},"body":{"license.html":{}}}],["religious",{"_index":2014,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["religous",{"_index":2013,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":3626,"title":{},"body":{"index.html":{}}}],["relying",{"_index":4287,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4078,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3717,"title":{},"body":{"license.html":{}}}],["remarks",{"_index":180,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["removal",{"_index":4155,"title":{},"body":{"license.html":{}}}],["remove",{"_index":4154,"title":{},"body":{"license.html":{}}}],["rename",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["render",{"_index":3815,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":4378,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1630,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["renderer2",{"_index":1631,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["rendering",{"_index":1642,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["repair",{"_index":2115,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["replaysubject",{"_index":573,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["represent",{"_index":4116,"title":{},"body":{"license.html":{}}}],["represents",{"_index":906,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["request",{"_index":1364,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["request.clone({headers",{"_index":1510,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":1511,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["request.method",{"_index":1576,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["request.urlwithparams",{"_index":1577,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["requests",{"_index":1375,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["require",{"_index":2623,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["require('@src/assets/js/block",{"_index":175,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["require('vcard",{"_index":3230,"title":{},"body":{"injectables/TransactionService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":312,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["requirement",{"_index":4014,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4081,"title":{},"body":{"license.html":{}}}],["requires",{"_index":128,"title":{},"body":{"classes/AccountIndex.html":{},"license.html":{}}}],["requiring",{"_index":3840,"title":{},"body":{"license.html":{}}}],["res",{"_index":300,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["res.ok",{"_index":1077,"title":{},"body":{"injectables/AuthService.html":{}}}],["researcher",{"_index":1988,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["resend",{"_index":3167,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["reserve",{"_index":2924,"title":{},"body":{"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenServiceStub.html":{}}}],["reserveratio",{"_index":2918,"title":{},"body":{"interfaces/Token.html":{}}}],["reserves",{"_index":2919,"title":{},"body":{"interfaces/Token.html":{}}}],["reset",{"_index":485,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"overview.html":{}}}],["resettransactionslist",{"_index":3187,"title":{},"body":{"injectables/TransactionService.html":{}}}],["resize",{"_index":739,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve",{"_index":1519,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["resolve(keystoreservice.mutablekeystore",{"_index":1522,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["resolve(res.text",{"_index":1081,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolved",{"_index":1663,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{}}}],["resource",{"_index":1413,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"classes/Settings.html":{},"interfaces/W3.html":{}}}],["resources",{"_index":3584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respect",{"_index":3744,"title":{},"body":{"license.html":{}}}],["response",{"_index":70,"title":{},"body":{"interfaces/AccountDetails.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["response.headers.get('token",{"_index":1032,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.headers.get('www",{"_index":1020,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.ok",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.status",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["responsebody",{"_index":2577,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["responsibilities",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["responsible",{"_index":4237,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":3805,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3987,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4189,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4186,"title":{},"body":{"license.html":{}}}],["result",{"_index":85,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":3843,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retail",{"_index":2417,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":4130,"title":{},"body":{"license.html":{}}}],["return",{"_index":159,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"license.html":{}}}],["returned",{"_index":1314,"title":{},"body":{"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{}}}],["returns",{"_index":137,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"injectables/Web3Service.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":2788,"title":{},"body":{"guards/RoleGuard.html":{}}}],["reverse",{"_index":3169,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["reversetransaction",{"_index":3110,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["reviewing",{"_index":4388,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4340,"title":{},"body":{"license.html":{}}}],["revokeaction(action.id",{"_index":650,"title":{},"body":{"components/AdminComponent.html":{}}}],["rewards",{"_index":2517,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ribe",{"_index":1912,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":4125,"title":{},"body":{"license.html":{}}}],["rights",{"_index":3735,"title":{},"body":{"license.html":{}}}],["risk",{"_index":4361,"title":{},"body":{"license.html":{}}}],["road",{"_index":1712,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":544,"title":{},"body":{"interfaces/Action.html":{},"components/AdminComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["roleguard",{"_index":2775,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":2781,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rom",{"_index":4133,"title":{},"body":{"license.html":{}}}],["root",{"_index":673,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/ErrorDialogService.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{}}}],["root'},{'name",{"_index":328,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["route",{"_index":552,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"guards/AuthGuard.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"index.html":{}}}],["route.data.roles",{"_index":2784,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.data.roles.indexof(currentuser.role",{"_index":2785,"title":{},"body":{"guards/RoleGuard.html":{}}}],["router",{"_index":245,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"guards/RoleGuard.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{}}}],["routerlink",{"_index":2793,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["routerlinkdirectivestub",{"_index":367,"title":{"directives/RouterLinkDirectiveStub.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["routermodule",{"_index":535,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":540,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":821,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":894,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["routes",{"_index":534,"title":{"routes.html":{}},"body":{"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"interceptors/MockBackendInterceptor.html":{},"modules/PagesRoutingModule.html":{},"guards/RoleGuard.html":{},"modules/SettingsRoutingModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsRoutingModule.html":{},"routes.html":{}}}],["route}.\\n${error.message",{"_index":1493,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["route}.\\n${error.message}.\\nstatus",{"_index":1490,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["routing.module",{"_index":492,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{}}}],["routing.module.ts",{"_index":533,"title":{},"body":{"modules/AccountsRoutingModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/PagesRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/TokensRoutingModule.html":{},"modules/TransactionsRoutingModule.html":{}}}],["row",{"_index":606,"title":{},"body":{"components/AdminComponent.html":{}}}],["row.isexpanded",{"_index":651,"title":{},"body":{"components/AdminComponent.html":{}}}],["royalty",{"_index":4252,"title":{},"body":{"license.html":{}}}],["rsv",{"_index":1676,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/TokenServiceStub.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["rubbish",{"_index":2044,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ruben",{"_index":1700,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["rueben",{"_index":1701,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ruiru",{"_index":1809,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["rules",{"_index":3671,"title":{},"body":{"index.html":{},"license.html":{}}}],["run",{"_index":3610,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3647,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":3913,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":1450,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["rural",{"_index":1931,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":579,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":424,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["s",{"_index":974,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["s.signature",{"_index":2699,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["sabuni",{"_index":2361,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sad",{"_index":733,"title":{},"body":{"components/AppComponent.html":{}}}],["safe",{"_index":2808,"title":{},"body":{"pipes/SafePipe.html":{}}}],["safepipe",{"_index":2805,"title":{"pipes/SafePipe.html":{}},"body":{"pipes/SafePipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["safest",{"_index":4405,"title":{},"body":{"license.html":{}}}],["sake",{"_index":3769,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4260,"title":{},"body":{"license.html":{}}}],["sales",{"_index":2144,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["salon",{"_index":2137,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["saloon",{"_index":2145,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["samaki",{"_index":2243,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sambusa",{"_index":2317,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":3749,"title":{},"body":{"license.html":{}}}],["samosa",{"_index":2241,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sanitizer",{"_index":2815,"title":{},"body":{"pipes/SafePipe.html":{}}}],["sarafu",{"_index":79,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["satisfy",{"_index":4080,"title":{},"body":{"license.html":{}}}],["sausages",{"_index":2287,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["savedindex",{"_index":1065,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["savings",{"_index":2378,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["saying",{"_index":4075,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":3628,"title":{},"body":{"index.html":{}}}],["scan",{"_index":1091,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["scan(settings",{"_index":1111,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["scanfilter",{"_index":2818,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["sch",{"_index":1958,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":3598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["school",{"_index":1959,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["science",{"_index":2005,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":4309,"title":{},"body":{"license.html":{}}}],["scrap",{"_index":2041,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["script",{"_index":3639,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":3919,"title":{},"body":{"license.html":{}}}],["search",{"_index":219,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsRoutingModule.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["search'},{'name",{"_index":324,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["search.component",{"_index":528,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{}}}],["search.component.html",{"_index":223,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.scss",{"_index":221,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts",{"_index":211,"title":{},"body":{"components/AccountSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:16",{"_index":258,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:17",{"_index":260,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:18",{"_index":259,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:19",{"_index":261,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:20",{"_index":263,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:21",{"_index":262,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:22",{"_index":253,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:23",{"_index":256,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:24",{"_index":255,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:25",{"_index":246,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:43",{"_index":247,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:47",{"_index":265,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:50",{"_index":267,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:53",{"_index":269,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:57",{"_index":249,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:67",{"_index":251,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search.component.ts:87",{"_index":248,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["search/account",{"_index":210,"title":{},"body":{"components/AccountSearchComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"coverage.html":{}}}],["searching",{"_index":2823,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["secondarily",{"_index":3853,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":1970,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["secp256k1",{"_index":3228,"title":{},"body":{"injectables/TransactionService.html":{}}}],["secp256k1.ecdsasign(txmsg",{"_index":3309,"title":{},"body":{"injectables/TransactionService.html":{}}}],["secretary",{"_index":2149,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":3966,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1465,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"license.html":{}}}],["security",{"_index":2147,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":3659,"title":{},"body":{"index.html":{},"license.html":{}}}],["seedling",{"_index":2052,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["seedlings",{"_index":2053,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["seigei",{"_index":1713,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":2532,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["selection",{"_index":1625,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["selection.directive",{"_index":2889,"title":{},"body":{"modules/SharedModule.html":{}}}],["selection.directive.ts",{"_index":1621,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"coverage.html":{}}}],["selection.directive.ts:25",{"_index":1643,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["selection.directive.ts:8",{"_index":1632,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["selector",{"_index":217,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["sell",{"_index":4275,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3449,"title":{},"body":{"classes/UserServiceStub.html":{},"license.html":{}}}],["semiconductor",{"_index":3827,"title":{},"body":{"license.html":{}}}],["send",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{}}}],["senddebuglevelmessage",{"_index":1583,"title":{},"body":{"injectables/LoggingService.html":{}}}],["senddebuglevelmessage(message",{"_index":1593,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sender",{"_index":1199,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["senderaddress",{"_index":3206,"title":{},"body":{"injectables/TransactionService.html":{}}}],["senderbloxberglink",{"_index":3106,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["senderrorlevelmessage",{"_index":1584,"title":{},"body":{"injectables/LoggingService.html":{}}}],["senderrorlevelmessage(message",{"_index":1595,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendfatallevelmessage",{"_index":1585,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendfatallevelmessage(message",{"_index":1597,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendinfolevelmessage",{"_index":1586,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendinfolevelmessage(message",{"_index":1599,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendloglevelmessage",{"_index":1587,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendloglevelmessage(message",{"_index":1601,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendsignedchallenge",{"_index":944,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendsignedchallenge(hobaresponseencoded",{"_index":964,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendtracelevelmessage",{"_index":1588,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendtracelevelmessage(message",{"_index":1603,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendwarnlevelmessage",{"_index":1589,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sendwarnlevelmessage(message",{"_index":1605,"title":{},"body":{"injectables/LoggingService.html":{}}}],["sentence",{"_index":1464,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["sentencesforwarninglogging",{"_index":1437,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["separable",{"_index":4088,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["separately",{"_index":4025,"title":{},"body":{"license.html":{}}}],["seremala",{"_index":2146,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["serial",{"_index":2981,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["serve",{"_index":3617,"title":{},"body":{"index.html":{}}}],["server",{"_index":1037,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverloggingurl",{"_index":802,"title":{},"body":{"modules/AppModule.html":{}}}],["serverloglevel",{"_index":800,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":3906,"title":{},"body":{"license.html":{}}}],["service",{"_index":886,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenServiceStub.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":34,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["serviceworkermodule",{"_index":796,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":805,"title":{},"body":{"modules/AppModule.html":{}}}],["servicing",{"_index":4368,"title":{},"body":{"license.html":{}}}],["session",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.getitem(btoa('cicada_session_token",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpConfigInterceptor.html":{}}}],["sessionstorage.removeitem(btoa('cicada_session_token",{"_index":1023,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(btoa('cicada_session_token",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":576,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["setconversion",{"_index":3188,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["setconversion(conversion",{"_index":3201,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["setkey",{"_index":945,"title":{},"body":{"injectables/AuthService.html":{}}}],["setkey(privatekeyarmored",{"_index":967,"title":{},"body":{"injectables/AuthService.html":{}}}],["setparammap",{"_index":560,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["setparammap(params",{"_index":574,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["sets",{"_index":1301,"title":{},"body":{"classes/CustomValidator.html":{}}}],["setsessiontoken",{"_index":946,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsessiontoken(token",{"_index":970,"title":{},"body":{"injectables/AuthService.html":{}}}],["setstate",{"_index":947,"title":{},"body":{"injectables/AuthService.html":{}}}],["setstate(s",{"_index":972,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":2595,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["setting",{"_index":1504,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{}}}],["settings",{"_index":1100,"title":{"classes/Settings.html":{}},"body":{"injectables/BlockSyncService.html":{},"components/OrganizationComponent.html":{},"modules/PagesRoutingModule.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/W3.html":{},"coverage.html":{}}}],["settings'},{'name",{"_index":346,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["settings(this.scan",{"_index":1128,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.component.html",{"_index":2834,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":2833,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.registry",{"_index":1133,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.scanfilter",{"_index":1182,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.txhelper",{"_index":1135,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.txhelper.onconversion",{"_index":1140,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.txhelper.ontransfer",{"_index":1137,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.txhelper.processreceipt(m.data",{"_index":1153,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.w3.engine",{"_index":1132,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settings.w3.provider",{"_index":1130,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["settingscomponent",{"_index":345,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsmodule",{"_index":2865,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":2869,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["settransaction",{"_index":3189,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["settransaction(transaction",{"_index":3203,"title":{},"body":{"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{}}}],["sha256",{"_index":2653,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["sha3",{"_index":3220,"title":{},"body":{"injectables/TransactionService.html":{},"dependencies.html":{}}}],["shall",{"_index":3971,"title":{},"body":{"license.html":{}}}],["shamba",{"_index":2063,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shanzu",{"_index":1868,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["share",{"_index":580,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"license.html":{}}}],["shared",{"_index":3925,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":482,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["shepard",{"_index":2151,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shephard",{"_index":2152,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shepherd",{"_index":2103,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shirt",{"_index":2434,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shoe",{"_index":2150,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["shop",{"_index":2385,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":4420,"title":{},"body":{"license.html":{}}}],["show",{"_index":3752,"title":{},"body":{"license.html":{}}}],["siaya",{"_index":1920,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sickly",{"_index":2376,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1390,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sidebar",{"_index":740,"title":{},"body":{"components/AppComponent.html":{},"components/FooterStubComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TopbarStubComponent.html":{}}}],["sidebar'},{'name",{"_index":348,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["sidebar.component.html",{"_index":2899,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2898,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar?.classlist.add('active",{"_index":751,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["sidebar?.classlist.contains('active",{"_index":750,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["sidebar?.classlist.remove('active",{"_index":754,"title":{},"body":{"components/AppComponent.html":{}}}],["sidebar?.classlist.toggle('active",{"_index":1653,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["sidebarcollapse",{"_index":745,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{}}}],["sidebarcollapse?.classlist.contains('active",{"_index":747,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["sidebarcollapse?.classlist.remove('active",{"_index":748,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["sidebarcollapse?.classlist.toggle('active",{"_index":1655,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["sidebarcomponent",{"_index":347,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidebarstubcomponent",{"_index":349,"title":{"components/SidebarStubComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["sig",{"_index":2709,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["sigei",{"_index":1708,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sign",{"_index":2647,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signer.html":{},"license.html":{}}}],["sign(digest",{"_index":2668,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["sign(opts",{"_index":2694,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["signable",{"_index":2665,"title":{"interfaces/Signable.html":{}},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["signature",{"_index":55,"title":{"interfaces/Signature.html":{},"interfaces/Signature-1.html":{}},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["signatureobject",{"_index":3308,"title":{},"body":{"injectables/TransactionService.html":{}}}],["signatureobject.recid",{"_index":3314,"title":{},"body":{"injectables/TransactionService.html":{}}}],["signatureobject.signature.slice(0",{"_index":3311,"title":{},"body":{"injectables/TransactionService.html":{}}}],["signatureobject.signature.slice(32",{"_index":3313,"title":{},"body":{"injectables/TransactionService.html":{}}}],["signchallenge",{"_index":983,"title":{},"body":{"injectables/AuthService.html":{}}}],["signed",{"_index":59,"title":{},"body":{"interfaces/AccountDetails.html":{},"injectables/AuthService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["signer",{"_index":130,"title":{"interfaces/Signer.html":{}},"body":{"classes/AccountIndex.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["signer.ts",{"_index":2637,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{}}}],["signer.ts:109",{"_index":2669,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:11",{"_index":2903,"title":{},"body":{"interfaces/Signable.html":{}}}],["signer.ts:144",{"_index":2673,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:32",{"_index":2904,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:34",{"_index":2905,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:36",{"_index":2906,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:42",{"_index":2907,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:48",{"_index":2908,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:54",{"_index":2909,"title":{},"body":{"interfaces/Signer.html":{}}}],["signer.ts:60",{"_index":2654,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:62",{"_index":2655,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:64",{"_index":2656,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:66",{"_index":2657,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:68",{"_index":2658,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:70",{"_index":2659,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:72",{"_index":2661,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:74",{"_index":2650,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:90",{"_index":2663,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signer.ts:99",{"_index":2666,"title":{},"body":{"classes/PGPSigner.html":{}}}],["signeraddress",{"_index":103,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["significant",{"_index":4117,"title":{},"body":{"license.html":{}}}],["signing",{"_index":2639,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["signs",{"_index":2670,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["silc",{"_index":2381,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["silver",{"_index":3426,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["sima",{"_index":2314,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":3985,"title":{},"body":{"license.html":{}}}],["simsim",{"_index":2305,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["simu",{"_index":2421,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["simulate",{"_index":2521,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["simultaneously",{"_index":4328,"title":{},"body":{"license.html":{}}}],["sinai",{"_index":1707,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["single",{"_index":4301,"title":{},"body":{"license.html":{}}}],["size",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slash",{"_index":2759,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["smallest",{"_index":2922,"title":{},"body":{"interfaces/Token.html":{}}}],["smokie",{"_index":2325,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["smokies",{"_index":2326,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sms",{"_index":3168,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["snackbar",{"_index":3114,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["snacks",{"_index":2318,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["soap",{"_index":2362,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["societies",{"_index":2954,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["socket",{"_index":2831,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["socks",{"_index":2409,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["soda",{"_index":2238,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":3692,"title":{},"body":{"license.html":{}}}],["soko",{"_index":2242,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["solar",{"_index":2496,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sold",{"_index":4100,"title":{},"body":{"license.html":{}}}],["soldier",{"_index":2027,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sole",{"_index":3951,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3963,"title":{},"body":{"license.html":{}}}],["something",{"_index":730,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["sort",{"_index":380,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["soup",{"_index":2323,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AccountsModule.html":{},"modules/AccountsRoutingModule.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"modules/PagesModule.html":{},"modules/PagesRoutingModule.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"index.html":{},"license.html":{}}}],["sourcetoken",{"_index":1189,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["south",{"_index":1697,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["soweto",{"_index":1806,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["spare",{"_index":2407,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["spareparts",{"_index":2398,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["speak",{"_index":3724,"title":{},"body":{"license.html":{}}}],["special",{"_index":3809,"title":{},"body":{"license.html":{}}}],["specific",{"_index":146,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["specifically",{"_index":3929,"title":{},"body":{"license.html":{}}}],["specified",{"_index":156,"title":{},"body":{"classes/AccountIndex.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/TokenRegistry.html":{},"license.html":{}}}],["specifies",{"_index":4346,"title":{},"body":{"license.html":{}}}],["specify",{"_index":4349,"title":{},"body":{"license.html":{}}}],["spinach",{"_index":2324,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":526,"title":{},"body":{"modules/AccountsModule.html":{}}}],["spirit",{"_index":4341,"title":{},"body":{"license.html":{}}}],["src/.../account.ts",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../accountindex.ts",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../array",{"_index":3549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../clipboard",{"_index":3550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.dev.ts",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../export",{"_index":3551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../global",{"_index":3555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../http",{"_index":3552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mock",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pgp",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../read",{"_index":3553,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../schema",{"_index":3554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sync.ts",{"_index":3556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../token",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../transaction.service.ts",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/_eth/accountindex.ts",{"_index":91,"title":{},"body":{"classes/AccountIndex.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_eth/accountindex.ts:122",{"_index":163,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:22",{"_index":123,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:24",{"_index":124,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:26",{"_index":114,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:58",{"_index":126,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:79",{"_index":143,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/accountindex.ts:96",{"_index":155,"title":{},"body":{"classes/AccountIndex.html":{}}}],["src/app/_eth/token",{"_index":2965,"title":{},"body":{"classes/TokenRegistry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_guards/auth.guard.ts",{"_index":878,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/_guards/auth.guard.ts:21",{"_index":884,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/auth.guard.ts:38",{"_index":895,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/_guards/role.guard.ts",{"_index":2776,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/_guards/role.guard.ts:21",{"_index":2777,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/_guards/role.guard.ts:38",{"_index":2778,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/_helpers/array",{"_index":3465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/clipboard",{"_index":3468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/custom",{"_index":1260,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/_helpers/custom.validator.ts",{"_index":1292,"title":{},"body":{"classes/CustomValidator.html":{},"coverage.html":{}}}],["src/app/_helpers/custom.validator.ts:13",{"_index":1300,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/_helpers/custom.validator.ts:28",{"_index":1309,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/_helpers/export",{"_index":3471,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/global",{"_index":1430,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/http",{"_index":3475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/mock",{"_index":1657,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_helpers/read",{"_index":3477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/_helpers/schema",{"_index":3481,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_helpers/sync.ts",{"_index":3485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/_interceptors/error.interceptor.ts",{"_index":1359,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/_interceptors/error.interceptor.ts:21",{"_index":1367,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_interceptors/error.interceptor.ts:42",{"_index":1374,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/_interceptors/http",{"_index":1502,"title":{},"body":{"interceptors/HttpConfigInterceptor.html":{},"coverage.html":{}}}],["src/app/_interceptors/logging.interceptor.ts",{"_index":1564,"title":{},"body":{"interceptors/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/app/_interceptors/logging.interceptor.ts:20",{"_index":1566,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["src/app/_interceptors/logging.interceptor.ts:35",{"_index":1567,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["src/app/_models/account.ts",{"_index":6,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_models/mappings.ts",{"_index":542,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/_models/settings.ts",{"_index":2817,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{},"coverage.html":{}}}],["src/app/_models/settings.ts:10",{"_index":2828,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/_models/settings.ts:13",{"_index":2822,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/_models/settings.ts:4",{"_index":2825,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/_models/settings.ts:6",{"_index":2826,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/_models/settings.ts:8",{"_index":2827,"title":{},"body":{"classes/Settings.html":{}}}],["src/app/_models/staff.ts",{"_index":2910,"title":{},"body":{"interfaces/Staff.html":{},"coverage.html":{}}}],["src/app/_models/token.ts",{"_index":2916,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/_models/transaction.ts",{"_index":1186,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"coverage.html":{}}}],["src/app/_pgp/pgp",{"_index":2636,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_services/auth.service.ts",{"_index":928,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/_services/auth.service.ts:128",{"_index":962,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:138",{"_index":968,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:166",{"_index":963,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:172",{"_index":952,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:18",{"_index":975,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:184",{"_index":958,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:19",{"_index":976,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:190",{"_index":956,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:20",{"_index":979,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:202",{"_index":954,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:206",{"_index":955,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:23",{"_index":950,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:31",{"_index":960,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:38",{"_index":957,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:42",{"_index":971,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:46",{"_index":973,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:50",{"_index":959,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:72",{"_index":965,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:84",{"_index":953,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/auth.service.ts:93",{"_index":961,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/_services/block",{"_index":1085,"title":{},"body":{"injectables/BlockSyncService.html":{},"coverage.html":{}}}],["src/app/_services/error",{"_index":1338,"title":{},"body":{"injectables/ErrorDialogService.html":{},"coverage.html":{}}}],["src/app/_services/keystore.service.ts",{"_index":1514,"title":{},"body":{"injectables/KeystoreService.html":{},"coverage.html":{}}}],["src/app/_services/keystore.service.ts:12",{"_index":1517,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["src/app/_services/keystore.service.ts:8",{"_index":1516,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["src/app/_services/location.service.ts",{"_index":1523,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/app/_services/location.service.ts:11",{"_index":1540,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:12",{"_index":1542,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:13",{"_index":1544,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:15",{"_index":1545,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:16",{"_index":1547,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:17",{"_index":1533,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:21",{"_index":1536,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:28",{"_index":1535,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:40",{"_index":1539,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/location.service.ts:47",{"_index":1538,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/app/_services/logging.service.ts",{"_index":1580,"title":{},"body":{"injectables/LoggingService.html":{},"coverage.html":{}}}],["src/app/_services/logging.service.ts:18",{"_index":1604,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:22",{"_index":1594,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:26",{"_index":1600,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:30",{"_index":1602,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:34",{"_index":1606,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:38",{"_index":1596,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:42",{"_index":1598,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:8",{"_index":1607,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/logging.service.ts:9",{"_index":1592,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/_services/registry.service.ts",{"_index":2760,"title":{},"body":{"injectables/RegistryService.html":{},"coverage.html":{}}}],["src/app/_services/registry.service.ts:11",{"_index":2766,"title":{},"body":{"injectables/RegistryService.html":{}}}],["src/app/_services/registry.service.ts:12",{"_index":2763,"title":{},"body":{"injectables/RegistryService.html":{}}}],["src/app/_services/registry.service.ts:16",{"_index":2764,"title":{},"body":{"injectables/RegistryService.html":{}}}],["src/app/_services/token.service.ts",{"_index":2991,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{}}}],["src/app/_services/token.service.ts:12",{"_index":3015,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:13",{"_index":3016,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:14",{"_index":3017,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:15",{"_index":3019,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:18",{"_index":3021,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:19",{"_index":3001,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:23",{"_index":3013,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:31",{"_index":3003,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:43",{"_index":3011,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:51",{"_index":3007,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:62",{"_index":3009,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:72",{"_index":3005,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:77",{"_index":3010,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/token.service.ts:82",{"_index":3012,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/_services/transaction.service.ts",{"_index":3180,"title":{},"body":{"injectables/TransactionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_services/transaction.service.ts:110",{"_index":3202,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:143",{"_index":3194,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:158",{"_index":3200,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:163",{"_index":3196,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:170",{"_index":3208,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:28",{"_index":3212,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:29",{"_index":3211,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:30",{"_index":3214,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:31",{"_index":3215,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:32",{"_index":3216,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:33",{"_index":3191,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:44",{"_index":3199,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:50",{"_index":3198,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:54",{"_index":3197,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/transaction.service.ts:58",{"_index":3204,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/app/_services/user.service.ts",{"_index":3503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/_services/web3.service.ts",{"_index":3451,"title":{},"body":{"injectables/Web3Service.html":{},"coverage.html":{}}}],["src/app/_services/web3.service.ts:13",{"_index":3454,"title":{},"body":{"injectables/Web3Service.html":{}}}],["src/app/_services/web3.service.ts:9",{"_index":3453,"title":{},"body":{"injectables/Web3Service.html":{}}}],["src/app/app",{"_index":812,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":672,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":708,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":706,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":704,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":689,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":699,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":775,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/_directives/password",{"_index":2740,"title":{},"body":{"directives/PasswordToggleDirective.html":{},"coverage.html":{}}}],["src/app/auth/auth",{"_index":926,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":824,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:16",{"_index":842,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:17",{"_index":844,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:18",{"_index":843,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:19",{"_index":835,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:28",{"_index":837,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:37",{"_index":846,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:41",{"_index":838,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:53",{"_index":836,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:66",{"_index":839,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:73",{"_index":841,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.module.ts",{"_index":921,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/pages/accounts/account",{"_index":209,"title":{},"body":{"components/AccountSearchComponent.html":{},"coverage.html":{}}}],["src/app/pages/accounts/accounts",{"_index":532,"title":{},"body":{"modules/AccountsRoutingModule.html":{}}}],["src/app/pages/accounts/accounts.component.ts",{"_index":370,"title":{},"body":{"components/AccountsComponent.html":{},"coverage.html":{}}}],["src/app/pages/accounts/accounts.component.ts:20",{"_index":403,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:21",{"_index":399,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:22",{"_index":407,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:23",{"_index":405,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:24",{"_index":410,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:25",{"_index":400,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:26",{"_index":401,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:27",{"_index":417,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:29",{"_index":414,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:30",{"_index":390,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:39",{"_index":395,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:65",{"_index":392,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:69",{"_index":398,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:75",{"_index":394,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:86",{"_index":396,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.component.ts:94",{"_index":393,"title":{},"body":{"components/AccountsComponent.html":{}}}],["src/app/pages/accounts/accounts.module.ts",{"_index":487,"title":{},"body":{"modules/AccountsModule.html":{}}}],["src/app/pages/accounts/create",{"_index":1212,"title":{},"body":{"components/CreateAccountComponent.html":{},"coverage.html":{}}}],["src/app/pages/admin/admin",{"_index":671,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/pages/admin/admin.component.ts",{"_index":587,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/pages/admin/admin.component.ts:25",{"_index":610,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:26",{"_index":613,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:27",{"_index":608,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:28",{"_index":609,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:30",{"_index":614,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:31",{"_index":595,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:35",{"_index":607,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:46",{"_index":602,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:50",{"_index":597,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:54",{"_index":599,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:65",{"_index":601,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:76",{"_index":605,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.component.ts:80",{"_index":603,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/pages/admin/admin.module.ts",{"_index":668,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/pages/pages",{"_index":2728,"title":{},"body":{"modules/PagesRoutingModule.html":{}}}],["src/app/pages/pages.component.ts",{"_index":2712,"title":{},"body":{"components/PagesComponent.html":{},"coverage.html":{}}}],["src/app/pages/pages.component.ts:11",{"_index":2716,"title":{},"body":{"components/PagesComponent.html":{}}}],["src/app/pages/pages.module.ts",{"_index":2725,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/app/pages/settings/organization/organization.component.ts",{"_index":2601,"title":{},"body":{"components/OrganizationComponent.html":{},"coverage.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:12",{"_index":2610,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:13",{"_index":2611,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:14",{"_index":2607,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:18",{"_index":2608,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:26",{"_index":2613,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/organization/organization.component.ts:30",{"_index":2609,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/pages/settings/settings",{"_index":2878,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/pages/settings/settings.component.ts",{"_index":2832,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.component.ts:16",{"_index":2843,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:17",{"_index":2842,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:18",{"_index":2845,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:19",{"_index":2847,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:20",{"_index":2848,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:22",{"_index":2846,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:23",{"_index":2837,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:27",{"_index":2841,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:38",{"_index":2838,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:42",{"_index":2839,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.component.ts:46",{"_index":2840,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2870,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/pages/tokens/token",{"_index":2929,"title":{},"body":{"components/TokenDetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/tokens/tokens",{"_index":3097,"title":{},"body":{"modules/TokensRoutingModule.html":{}}}],["src/app/pages/tokens/tokens.component.ts",{"_index":3061,"title":{},"body":{"components/TokensComponent.html":{},"coverage.html":{}}}],["src/app/pages/tokens/tokens.component.ts:17",{"_index":3074,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:18",{"_index":3073,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:19",{"_index":3075,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:20",{"_index":3076,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:21",{"_index":3077,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:22",{"_index":3067,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:30",{"_index":3070,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:46",{"_index":3068,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:50",{"_index":3072,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.component.ts:54",{"_index":3069,"title":{},"body":{"components/TokensComponent.html":{}}}],["src/app/pages/tokens/tokens.module.ts",{"_index":3088,"title":{},"body":{"modules/TokensModule.html":{}}}],["src/app/pages/transactions/transaction",{"_index":3103,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/transactions/transactions",{"_index":3389,"title":{},"body":{"modules/TransactionsRoutingModule.html":{}}}],["src/app/pages/transactions/transactions.component.ts",{"_index":3329,"title":{},"body":{"components/TransactionsComponent.html":{},"coverage.html":{}}}],["src/app/pages/transactions/transactions.component.ts:23",{"_index":3354,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:24",{"_index":3355,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:25",{"_index":3349,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:26",{"_index":3350,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:27",{"_index":3356,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:28",{"_index":3353,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:29",{"_index":3357,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:30",{"_index":3358,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:31",{"_index":3352,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:33",{"_index":3351,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:34",{"_index":3341,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:43",{"_index":3346,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:66",{"_index":3348,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:70",{"_index":3342,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:74",{"_index":3344,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:87",{"_index":3345,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.component.ts:92",{"_index":3343,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/pages/transactions/transactions.module.ts",{"_index":3385,"title":{},"body":{"modules/TransactionsModule.html":{}}}],["src/app/shared/_directives/menu",{"_index":1620,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"coverage.html":{}}}],["src/app/shared/_pipes/safe.pipe.ts",{"_index":2807,"title":{},"body":{"pipes/SafePipe.html":{},"coverage.html":{}}}],["src/app/shared/_pipes/safe.pipe.ts:10",{"_index":2812,"title":{},"body":{"pipes/SafePipe.html":{}}}],["src/app/shared/_pipes/token",{"_index":2958,"title":{},"body":{"pipes/TokenRatioPipe.html":{},"coverage.html":{}}}],["src/app/shared/_pipes/unix",{"_index":3390,"title":{},"body":{"pipes/UnixDatePipe.html":{},"coverage.html":{}}}],["src/app/shared/error",{"_index":1322,"title":{},"body":{"components/ErrorDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1417,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1422,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/footer/footer.component.ts:13",{"_index":1423,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/network",{"_index":2580,"title":{},"body":{"components/NetworkStatusComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2884,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2897,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:12",{"_index":2901,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:9",{"_index":2900,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/topbar/topbar.component.ts",{"_index":3098,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/topbar/topbar.component.ts:12",{"_index":3102,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/shared/topbar/topbar.component.ts:9",{"_index":3101,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/assets/js/ethtx/dist",{"_index":3226,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/assets/js/ethtx/dist/hex",{"_index":278,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{}}}],["src/assets/js/ethtx/dist/tx",{"_index":3227,"title":{},"body":{"injectables/TransactionService.html":{}}}],["src/assets/js/hoba",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/assets/js/hoba.js",{"_index":982,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/environments",{"_index":3657,"title":{},"body":{"index.html":{}}}],["src/environments/environment",{"_index":172,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"injectables/LocationService.html":{},"components/PagesComponent.html":{},"injectables/RegistryService.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{}}}],["src/environments/environment.dev.ts",{"_index":3513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":3514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":3515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/testing/activated",{"_index":551,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"coverage.html":{}}}],["src/testing/router",{"_index":2790,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{},"coverage.html":{}}}],["src/testing/shared",{"_index":1428,"title":{},"body":{"components/FooterStubComponent.html":{},"components/SidebarStubComponent.html":{},"components/TopbarStubComponent.html":{},"coverage.html":{}}}],["src/testing/token",{"_index":3057,"title":{},"body":{"classes/TokenServiceStub.html":{},"coverage.html":{}}}],["src/testing/transaction",{"_index":3323,"title":{},"body":{"classes/TransactionServiceStub.html":{},"coverage.html":{}}}],["src/testing/user",{"_index":3398,"title":{},"body":{"classes/UserServiceStub.html":{},"coverage.html":{}}}],["stack",{"_index":1457,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["stadium",{"_index":1839,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["staff",{"_index":658,"title":{"interfaces/Staff.html":{}},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"components/SettingsComponent.html":{},"interfaces/Staff.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["staff.userid",{"_index":1067,"title":{},"body":{"injectables/AuthService.html":{}}}],["stand",{"_index":3796,"title":{},"body":{"license.html":{}}}],["standard",{"_index":3890,"title":{},"body":{"license.html":{}}}],["standards",{"_index":3893,"title":{},"body":{"license.html":{}}}],["starehe",{"_index":1842,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":4406,"title":{},"body":{"license.html":{}}}],["start:dev",{"_index":3619,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":3621,"title":{},"body":{"index.html":{}}}],["start:pwa",{"_index":3645,"title":{},"body":{"index.html":{}}}],["started",{"_index":3605,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":4421,"title":{},"body":{"license.html":{}}}],["starttime",{"_index":1572,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["state",{"_index":616,"title":{},"body":{"components/AdminComponent.html":{},"guards/AuthGuard.html":{},"classes/CustomErrorStateMatcher.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"license.html":{}}}],["state('collapsed",{"_index":624,"title":{},"body":{"components/AdminComponent.html":{}}}],["state('expanded",{"_index":630,"title":{},"body":{"components/AdminComponent.html":{}}}],["state.url",{"_index":2789,"title":{},"body":{"guards/RoleGuard.html":{}}}],["stated",{"_index":3940,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4193,"title":{},"body":{"license.html":{}}}],["statements",{"_index":3459,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2628,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["static",{"_index":1295,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/KeystoreService.html":{},"injectables/RegistryService.html":{},"injectables/Web3Service.html":{}}}],["stating",{"_index":4004,"title":{},"body":{"license.html":{}}}],["station",{"_index":2445,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":449,"title":{},"body":{"components/AccountsComponent.html":{},"interfaces/Action.html":{},"components/AdminComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Conversion.html":{},"classes/CustomErrorStateMatcher.html":{},"components/ErrorDialogComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"license.html":{}}}],["status'},{'name",{"_index":340,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["status.component",{"_index":2894,"title":{},"body":{"modules/SharedModule.html":{}}}],["status.component.html",{"_index":2584,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["status.component.scss",{"_index":2583,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["status.component.ts",{"_index":2582,"title":{},"body":{"components/NetworkStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:10",{"_index":2589,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["status.component.ts:16",{"_index":2592,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["status.component.ts:18",{"_index":2591,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["status/network",{"_index":2581,"title":{},"body":{"components/NetworkStatusComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["statustext",{"_index":1500,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["steps",{"_index":3757,"title":{},"body":{"license.html":{}}}],["stima",{"_index":2497,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":4035,"title":{},"body":{"license.html":{}}}],["store",{"_index":66,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["store.ts",{"_index":3490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":3636,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"classes/CustomValidator.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"pipes/SafePipe.html":{},"components/SettingsComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{}}}],["stringfromurl",{"_index":2578,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["strip0x",{"_index":277,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{}}}],["strip0x(abi",{"_index":3288,"title":{},"body":{"injectables/TransactionService.html":{}}}],["stub.ts",{"_index":553,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"components/FooterStubComponent.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SidebarStubComponent.html":{},"classes/TokenServiceStub.html":{},"components/TopbarStubComponent.html":{},"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{},"coverage.html":{}}}],["stub.ts:10",{"_index":2796,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["stub.ts:103",{"_index":3436,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["stub.ts:11",{"_index":568,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["stub.ts:124",{"_index":3434,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["stub.ts:13",{"_index":2795,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["stub.ts:134",{"_index":3432,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["stub.ts:18",{"_index":571,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["stub.ts:2",{"_index":3060,"title":{},"body":{"classes/TokenServiceStub.html":{}}}],["stub.ts:21",{"_index":575,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["stub.ts:4",{"_index":3326,"title":{},"body":{"classes/TransactionServiceStub.html":{},"classes/UserServiceStub.html":{}}}],["stub.ts:6",{"_index":3325,"title":{},"body":{"classes/TransactionServiceStub.html":{}}}],["stub.ts:72",{"_index":3401,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["stub.ts:8",{"_index":3324,"title":{},"body":{"classes/TransactionServiceStub.html":{}}}],["stub.ts:87",{"_index":3439,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["stub.ts:9",{"_index":2794,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["student",{"_index":1961,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":617,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{}}}],["styles",{"_index":206,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["styleurls",{"_index":220,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["styling",{"_index":3670,"title":{},"body":{"index.html":{}}}],["subdividing",{"_index":4242,"title":{},"body":{"license.html":{}}}],["subject",{"_index":565,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/TokenService.html":{},"license.html":{}}}],["sublicenses",{"_index":4271,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3965,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1259,"title":{},"body":{"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["submitted",{"_index":829,"title":{},"body":{"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["subprograms",{"_index":3928,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4431,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":3244,"title":{},"body":{"injectables/TransactionService.html":{}}}],["subscribe((res",{"_index":446,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"injectables/LocationService.html":{},"components/TransactionsComponent.html":{}}}],["subscribe(async",{"_index":299,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["subscribers",{"_index":583,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["subsection",{"_index":4066,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4113,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3794,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1574,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["success",{"_index":1203,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["successful",{"_index":140,"title":{},"body":{"classes/AccountIndex.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"miscellaneous/functions.html":{}}}],["successfully",{"_index":2560,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TransactionDetailsComponent.html":{}}}],["such",{"_index":3745,"title":{},"body":{"license.html":{}}}],["sue",{"_index":4285,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4120,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":2798,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["sugar",{"_index":2319,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["suger",{"_index":2320,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sukari",{"_index":2322,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sukuma",{"_index":2327,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sum",{"_index":3558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sum.ts",{"_index":3466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1475,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["super(message",{"_index":1472,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["superadmin",{"_index":1678,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["supplement",{"_index":4147,"title":{},"body":{"license.html":{}}}],["supplier",{"_index":2187,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["supply",{"_index":2920,"title":{},"body":{"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{}}}],["support",{"_index":2718,"title":{},"body":{"components/PagesComponent.html":{},"license.html":{},"modules.html":{}}}],["supports",{"_index":3643,"title":{},"body":{"index.html":{},"license.html":{}}}],["sure",{"_index":3716,"title":{},"body":{"license.html":{}}}],["surname",{"_index":1236,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["surrender",{"_index":3741,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4192,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4381,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4439,"title":{},"body":{"modules.html":{}}}],["sweats",{"_index":2316,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["sweet",{"_index":2315,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":1405,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["switchwindows",{"_index":832,"title":{},"body":{"components/AuthComponent.html":{}}}],["swupdate",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["symbol",{"_index":1211,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["sync.service.ts",{"_index":1086,"title":{},"body":{"injectables/BlockSyncService.html":{},"coverage.html":{}}}],["sync.service.ts:109",{"_index":1102,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:15",{"_index":1120,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:16",{"_index":1093,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:23",{"_index":1103,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:27",{"_index":1097,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:45",{"_index":1110,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:80",{"_index":1106,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync.service.ts:88",{"_index":1118,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync/data",{"_index":2772,"title":{},"body":{"injectables/RegistryService.html":{}}}],["sync/data/accountsindex.json",{"_index":176,"title":{},"body":{"classes/AccountIndex.html":{},"miscellaneous/variables.html":{}}}],["sync/data/tokenuniquesymbolindex.json",{"_index":2985,"title":{},"body":{"classes/TokenRegistry.html":{},"miscellaneous/variables.html":{}}}],["sync/head.js",{"_index":1151,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["sync/ondemand.js",{"_index":1163,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["syncable",{"_index":3602,"title":{},"body":{"miscellaneous/functions.html":{}}}],["system",{"_index":547,"title":{},"body":{"interfaces/Action.html":{},"injectables/AuthService.html":{},"interceptors/MockBackendInterceptor.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["systematic",{"_index":3784,"title":{},"body":{"license.html":{}}}],["taa",{"_index":2502,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":2447,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3519,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2912,"title":{},"body":{"interfaces/Staff.html":{}}}],["tags",{"_index":2914,"title":{},"body":{"interfaces/Staff.html":{}}}],["tailor",{"_index":2123,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["taka",{"_index":2040,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["takaungu",{"_index":1905,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":3707,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":4094,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1570,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["tasia",{"_index":1824,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tassia",{"_index":1823,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["taxi",{"_index":2471,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tea",{"_index":2328,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["teacher",{"_index":1957,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["technician",{"_index":2371,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["technological",{"_index":3974,"title":{},"body":{"license.html":{}}}],["tel",{"_index":51,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["tells",{"_index":3880,"title":{},"body":{"license.html":{}}}],["template",{"_index":205,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"index.html":{}}}],["templateurl",{"_index":222,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["term",{"_index":3938,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":4419,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4198,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4219,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4207,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4195,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3753,"title":{},"body":{"license.html":{}}}],["test",{"_index":555,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"index.html":{}}}],["tests",{"_index":3649,"title":{},"body":{"index.html":{}}}],["tetra",{"_index":1698,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tetrapak",{"_index":1699,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":2755,"title":{},"body":{"directives/PasswordToggleDirective.html":{},"miscellaneous/functions.html":{}}}],["then((s",{"_index":2695,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["then((sig",{"_index":2707,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["therefore",{"_index":3742,"title":{},"body":{"license.html":{}}}],["thika",{"_index":1837,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":3733,"title":{},"body":{"license.html":{}}}],["third",{"_index":911,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["this.accounts",{"_index":442,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.accounts.filter((account",{"_index":457,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.accountstype",{"_index":455,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.accounttypes",{"_index":447,"title":{},"body":{"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{}}}],["this.actions",{"_index":643,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.addresssearchform",{"_index":285,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.addresssearchform.controls",{"_index":289,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.addresssearchform.invalid",{"_index":307,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.addresssearchloading",{"_index":308,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.addresssearchsubmitted",{"_index":306,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.addtransaction(conversion",{"_index":3260,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.addtransaction(transaction",{"_index":3249,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.addtrusteduser(key.users[0].userid",{"_index":1073,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.algo",{"_index":2698,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.areanames",{"_index":1246,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.areanameslist.asobservable",{"_index":1543,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.areanameslist.next(res",{"_index":1551,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.areatypeslist.asobservable",{"_index":1548,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.areatypeslist.next(res",{"_index":1559,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.authservice.getprivatekey",{"_index":852,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.getprivatekeyinfo",{"_index":2854,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.getpublickeys",{"_index":719,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.gettrustedusers",{"_index":721,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.init",{"_index":716,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{},"injectables/TransactionService.html":{}}}],["this.authservice.login",{"_index":860,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.loginview",{"_index":853,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":2856,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.authservice.mutablekeystore.importpublickey(publickeys",{"_index":720,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.setkey(this.keyformstub.key.value",{"_index":858,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.trusteduserssubject.subscribe((users",{"_index":2850,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.blocksyncservice.blocksync",{"_index":3365,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.blocksyncservice.init",{"_index":3364,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.categories",{"_index":1242,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.cdr.detectchanges",{"_index":2597,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["this.closewindow.emit(this.token",{"_index":2944,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["this.closewindow.emit(this.transaction",{"_index":3154,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.contract",{"_index":183,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["this.contract.methods.add(address).send",{"_index":192,"title":{},"body":{"classes/AccountIndex.html":{}}}],["this.contract.methods.addressof(id).call",{"_index":2989,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["this.contract.methods.entry(i).call",{"_index":199,"title":{},"body":{"classes/AccountIndex.html":{}}}],["this.contract.methods.entry(serial).call",{"_index":2990,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["this.contract.methods.entrycount().call",{"_index":201,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["this.contract.methods.have(address).call",{"_index":194,"title":{},"body":{"classes/AccountIndex.html":{}}}],["this.contractaddress",{"_index":182,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["this.createform",{"_index":1233,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.createform.controls",{"_index":1249,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.createform.invalid",{"_index":1250,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.datasource",{"_index":436,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{}}}],["this.datasource.data",{"_index":456,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.datasource.filter",{"_index":452,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{}}}],["this.datasource.paginator",{"_index":438,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{}}}],["this.datasource.sort",{"_index":440,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{}}}],["this.dgst",{"_index":2683,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.dialog.open(errordialogcomponent",{"_index":1354,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["this.engine",{"_index":2697,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.errordialogservice.opendialog",{"_index":722,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["this.fetcher(settings",{"_index":1158,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.formbuilder.group",{"_index":281,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.genders",{"_index":1248,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.getaccountinfo(res",{"_index":3245,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.getchallenge",{"_index":1025,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getprivatekey().users[0].userid",{"_index":1083,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getsessiontoken",{"_index":999,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokens",{"_index":3045,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.handlenetworkchange",{"_index":2594,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["this.haveaccount(address",{"_index":191,"title":{},"body":{"classes/AccountIndex.html":{}}}],["this.httpclient",{"_index":1549,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.httpclient.get(`${environment.ciccacheurl}/tx/${offset}/${limit",{"_index":3233,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.httpclient.get(`${environment.ciccacheurl}/tx/user/${address}/${offset}/${limit",{"_index":3234,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.isdialogopen",{"_index":1352,"title":{},"body":{"injectables/ErrorDialogService.html":{}}}],["this.iswarning(errortracestring",{"_index":1483,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.keyform",{"_index":850,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.keyform.controls",{"_index":854,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.keyform.invalid",{"_index":856,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.keystore",{"_index":2679,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.keystore.getfingerprint",{"_index":2682,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.keystore.getprivatekey",{"_index":2687,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.keystore.gettrustedkeys",{"_index":2708,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.linkparams",{"_index":2804,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["this.load.next(true",{"_index":3026,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.loading",{"_index":857,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.locationservice.areanamessubject.subscribe((res",{"_index":1245,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.locationservice.getareanames",{"_index":1244,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.logerror(error",{"_index":1476,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.logger.debug(message",{"_index":1614,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.error(message",{"_index":1618,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.fatal(message",{"_index":1619,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.info(message",{"_index":1615,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.log(message",{"_index":1616,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.trace(message",{"_index":1613,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.logger.warn(message",{"_index":1617,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.loggingservice.senderrorlevelmessage",{"_index":1059,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/TransactionService.html":{}}}],["this.loggingservice.senderrorlevelmessage('failed",{"_index":433,"title":{},"body":{"components/AccountsComponent.html":{},"injectables/AuthService.html":{}}}],["this.loggingservice.senderrorlevelmessage(e.message",{"_index":2703,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.loggingservice.senderrorlevelmessage(errormessage",{"_index":1404,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.loggingservice.senderrorlevelmessage(errortracestring",{"_index":1485,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.loggingservice.sendinfolevelmessage(`result",{"_index":3319,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.loggingservice.sendinfolevelmessage(`transaction",{"_index":3321,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.loggingservice.sendinfolevelmessage(message",{"_index":1579,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["this.loggingservice.sendinfolevelmessage(request",{"_index":1571,"title":{},"body":{"interceptors/LoggingInterceptor.html":{}}}],["this.loggingservice.sendinfolevelmessage(res",{"_index":648,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.loggingservice.sendinfolevelmessage(tokens",{"_index":3080,"title":{},"body":{"components/TokensComponent.html":{}}}],["this.loggingservice.sendwarnlevelmessage(errortracestring",{"_index":1484,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.loginview",{"_index":1063,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mediaquery.addeventlistener('change",{"_index":713,"title":{},"body":{"components/AppComponent.html":{}}}],["this.mutablekeystore",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{},"injectables/KeystoreService.html":{}}}],["this.mutablekeystore.getprivatekey",{"_index":1082,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.getprivatekeyid",{"_index":1044,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.getpublickeys().foreach((key",{"_index":1072,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.importprivatekey(localstorage.getitem(btoa('cicada_private_key",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.importprivatekey(privatekeyarmored",{"_index":1056,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.isencryptedprivatekey(privatekeyarmored",{"_index":1053,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.isvalidkey(privatekeyarmored",{"_index":1047,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mutablekeystore.loadkeyring",{"_index":1521,"title":{},"body":{"injectables/KeystoreService.html":{}}}],["this.name",{"_index":1474,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.namesearchform",{"_index":280,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.namesearchform.controls",{"_index":287,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.namesearchform.invalid",{"_index":291,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.namesearchloading",{"_index":292,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.namesearchsubmitted",{"_index":290,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.navigatedto",{"_index":2803,"title":{},"body":{"directives/RouterLinkDirectiveStub.html":{}}}],["this.nointernetconnection",{"_index":2596,"title":{},"body":{"components/NetworkStatusComponent.html":{}}}],["this.onmenuselect",{"_index":1646,"title":{},"body":{"directives/MenuSelectionDirective.html":{}}}],["this.onmenutoggle",{"_index":1652,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["this.onresize",{"_index":714,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onresize(this.mediaquery",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onsign",{"_index":2680,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.onsign(this.signature",{"_index":2701,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.onsign(undefined",{"_index":2704,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.onverify",{"_index":2681,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.onverify(false",{"_index":2711,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.organizationform",{"_index":2614,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.organizationform.controls",{"_index":2618,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.organizationform.invalid",{"_index":2619,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.paginator",{"_index":439,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.paginator._changepagesize(this.paginator.pagesize",{"_index":459,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.phonesearchform",{"_index":283,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.phonesearchform.controls",{"_index":288,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.phonesearchform.invalid",{"_index":295,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.phonesearchloading",{"_index":296,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.phonesearchsubmitted",{"_index":294,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.readystate",{"_index":1147,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.readystateprocessor(settings",{"_index":1142,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.readystatetarget",{"_index":1148,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.recipientbloxberglink",{"_index":3136,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.registry",{"_index":3023,"title":{},"body":{"injectables/TokenService.html":{},"injectables/TransactionService.html":{}}}],["this.registry.addtoken(address",{"_index":3035,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.registry.addtoken(await",{"_index":3051,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.registry.getcontractaddressbyname",{"_index":3275,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.registry.getcontractaddressbyname('tokenregistry",{"_index":3025,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.renderer.listen(this.elementref.nativeelement",{"_index":1644,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["this.router.navigate",{"_index":2786,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.navigate(['/auth",{"_index":915,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/home",{"_index":861,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.navigatebyurl",{"_index":302,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{}}}],["this.router.navigatebyurl('/auth').then",{"_index":1408,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.router.navigatebyurl(`/accounts/${strip0x(this.transaction.from",{"_index":3140,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.router.navigatebyurl(`/accounts/${strip0x(this.transaction.to",{"_index":3141,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.router.navigatebyurl(`/accounts/${strip0x(this.transaction.trader",{"_index":3142,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.router.url",{"_index":1489,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2816,"title":{},"body":{"pipes/SafePipe.html":{}}}],["this.scanfilter",{"_index":2829,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["this.senderbloxberglink",{"_index":3134,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.sendinfolevelmessage('dropping",{"_index":1610,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.sendsignedchallenge(r).then((response",{"_index":1031,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sentencesforwarninglogging.foreach((whitelistsentence",{"_index":1487,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.setparammap(initialparams",{"_index":585,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.setsessiontoken(tokenresponse",{"_index":1038,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setstate('click",{"_index":1039,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.signature",{"_index":2696,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["this.signeraddress",{"_index":186,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["this.snackbar.open(address",{"_index":3149,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.sort",{"_index":441,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.status",{"_index":1473,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["this.subject.asobservable",{"_index":570,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.subject.next(converttoparammap(params",{"_index":586,"title":{},"body":{"classes/ActivatedRouteStub.html":{}}}],["this.submitted",{"_index":855,"title":{},"body":{"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.swupdate.available.subscribe",{"_index":736,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.isenabled",{"_index":735,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toggledisplay(divone",{"_index":868,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.toggledisplay(divtwo",{"_index":869,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.togglepasswordvisibility",{"_index":2749,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["this.token",{"_index":2943,"title":{},"body":{"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{}}}],["this.tokenname",{"_index":3138,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.tokenregistry",{"_index":3024,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenregistry.entry(0",{"_index":3052,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenregistry.totaltokens",{"_index":3033,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokens",{"_index":3018,"title":{},"body":{"injectables/TokenService.html":{},"components/TokensComponent.html":{}}}],["this.tokens.findindex((tk",{"_index":3027,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokens.splice(savedindex",{"_index":3030,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokens.unshift(token",{"_index":3031,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenservice.gettokenname",{"_index":3139,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.tokenservice.gettokens",{"_index":3078,"title":{},"body":{"components/TokensComponent.html":{}}}],["this.tokenservice.gettokensymbol",{"_index":451,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.tokenservice.init",{"_index":426,"title":{},"body":{"components/AccountsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.tokenservice.load.subscribe(async",{"_index":448,"title":{},"body":{"components/AccountsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.tokenservice.tokenssubject.subscribe((tokens",{"_index":3079,"title":{},"body":{"components/TokensComponent.html":{}}}],["this.tokenslist.asobservable",{"_index":3020,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenslist.next(this.tokens",{"_index":3032,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokenssubject.subscribe((tokens",{"_index":3046,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.tokensymbol",{"_index":450,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.totalaccounts",{"_index":196,"title":{},"body":{"classes/AccountIndex.html":{}}}],["this.traderbloxberglink",{"_index":3131,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction",{"_index":3153,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.transaction.from",{"_index":3146,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction.to",{"_index":3145,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction.token.address",{"_index":3144,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction.value",{"_index":3147,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction?.from",{"_index":3135,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction?.to",{"_index":3137,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction?.trader",{"_index":3133,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transaction?.type",{"_index":3130,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transactiondatasource",{"_index":3360,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactiondatasource.data",{"_index":3369,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactiondatasource.paginator",{"_index":3362,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactiondatasource.sort",{"_index":3363,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionlist.asobservable",{"_index":3213,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionlist.next(this.transactions",{"_index":3267,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactions",{"_index":3268,"title":{},"body":{"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["this.transactions.filter",{"_index":3370,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactions.find((cachedtx",{"_index":3235,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactions.findindex((tx",{"_index":3261,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactions.length",{"_index":3265,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactions.splice(savedindex",{"_index":3263,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactions.unshift(transaction",{"_index":3264,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.transactionservice",{"_index":1156,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.transactionservice.init",{"_index":717,"title":{},"body":{"components/AppComponent.html":{},"injectables/BlockSyncService.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.transactionservice.resettransactionslist",{"_index":1127,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["this.transactionservice.setconversion(conversion",{"_index":763,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactionservice.settransaction(transaction",{"_index":759,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transactionservice.transactionssubject.subscribe((transactions",{"_index":3359,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionservice.transferrequest",{"_index":3143,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["this.transactionstype",{"_index":3368,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.transactionstypes",{"_index":3366,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.trustedusers",{"_index":978,"title":{},"body":{"injectables/AuthService.html":{},"components/SettingsComponent.html":{}}}],["this.trustedusers.findindex((staff",{"_index":1066,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trustedusers.splice(savedindex",{"_index":1069,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trustedusers.unshift(user",{"_index":1070,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trusteduserslist.asobservable",{"_index":980,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trusteduserslist.next(this.trustedusers",{"_index":1071,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfo",{"_index":2853,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.userservice",{"_index":443,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/CreateAccountComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["this.userservice.accountssubject.subscribe((accounts",{"_index":435,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.userservice.actionssubject.subscribe((actions",{"_index":641,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.addaccount(accountinfo",{"_index":3273,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.userservice.addaccount(defaultaccount",{"_index":3241,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.userservice.categoriessubject.subscribe((res",{"_index":1241,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.userservice.getaccountbyaddress(this.addresssearchformstub.address.value",{"_index":309,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.userservice.getaccountbyphone(this.phonesearchformstub.phonenumber.value",{"_index":297,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.userservice.getactions",{"_index":640,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getcategories",{"_index":1240,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["this.userservice.init",{"_index":286,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/CreateAccountComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["this.userservice.loadaccounts(100",{"_index":431,"title":{},"body":{"components/AccountsComponent.html":{}}}],["this.userservice.searchaccountbyname(this.namesearchformstub.name.value",{"_index":293,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["this.web3",{"_index":3232,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.web3.eth.getgasprice",{"_index":3294,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.web3.eth.gettransaction(result.transactionhash",{"_index":3320,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.web3.eth.gettransactioncount(senderaddress",{"_index":3291,"title":{},"body":{"injectables/TransactionService.html":{}}}],["this.web3.eth.sendsignedtransaction(txwire",{"_index":3318,"title":{},"body":{"injectables/TransactionService.html":{}}}],["those",{"_index":3792,"title":{},"body":{"license.html":{}}}],["though",{"_index":4150,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3801,"title":{},"body":{"license.html":{}}}],["three",{"_index":4055,"title":{},"body":{"license.html":{}}}],["threw",{"_index":1496,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["through",{"_index":2550,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/Settings.html":{},"interfaces/W3.html":{},"license.html":{}}}],["throw",{"_index":1033,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["throwerror",{"_index":1383,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["throwerror(err",{"_index":1416,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thrown",{"_index":1449,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["throws",{"_index":1045,"title":{},"body":{"injectables/AuthService.html":{}}}],["thus",{"_index":3956,"title":{},"body":{"license.html":{}}}],["timber",{"_index":2485,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["timberyard",{"_index":2486,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":904,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Conversion.html":{},"guards/RoleGuard.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"license.html":{}}}],["timestamp",{"_index":1205,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{}}}],["tissue",{"_index":2438,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":1258,"title":{},"body":{"components/CreateAccountComponent.html":{}}}],["tk.address",{"_index":3028,"title":{},"body":{"injectables/TokenService.html":{}}}],["todo",{"_index":428,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["toggle",{"_index":1622,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["toggle.directive",{"_index":925,"title":{},"body":{"modules/AuthModule.html":{},"modules/SharedModule.html":{}}}],["toggle.directive.ts",{"_index":1647,"title":{},"body":{"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"coverage.html":{}}}],["toggle.directive.ts:11",{"_index":2746,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["toggle.directive.ts:15",{"_index":2744,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["toggle.directive.ts:22",{"_index":1651,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["toggle.directive.ts:30",{"_index":2747,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["toggle.directive.ts:8",{"_index":1650,"title":{},"body":{"directives/MenuToggleDirective.html":{}}}],["toggledisplay",{"_index":833,"title":{},"body":{"components/AuthComponent.html":{}}}],["toggledisplay(element",{"_index":840,"title":{},"body":{"components/AuthComponent.html":{}}}],["togglepasswordvisibility",{"_index":2742,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["tohex",{"_index":3225,"title":{},"body":{"injectables/TransactionService.html":{}}}],["toi",{"_index":1858,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["toilet",{"_index":2035,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":27,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AccountDetails.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"interceptors/HttpConfigInterceptor.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"interfaces/Signature.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.address",{"_index":3029,"title":{},"body":{"injectables/TokenService.html":{},"components/TokensComponent.html":{}}}],["token.decimals",{"_index":3042,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.methods.balanceof(address).call",{"_index":3053,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.methods.name().call",{"_index":3054,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.methods.symbol().call",{"_index":3055,"title":{},"body":{"injectables/TokenService.html":{}}}],["token.name",{"_index":3036,"title":{},"body":{"injectables/TokenService.html":{},"components/TokensComponent.html":{}}}],["token.supply",{"_index":3040,"title":{},"body":{"injectables/TokenService.html":{},"components/TokensComponent.html":{}}}],["token.symbol",{"_index":3038,"title":{},"body":{"injectables/TokenService.html":{},"components/TokensComponent.html":{}}}],["token?.address",{"_index":2947,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["token?.name",{"_index":2945,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["token?.owner",{"_index":2957,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["token?.reserveratio",{"_index":2956,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["token?.supply",{"_index":2955,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["token?.symbol",{"_index":2946,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["tokenaddress",{"_index":3209,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tokenagent",{"_index":1671,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokencontract",{"_index":3034,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontract.methods.decimals().call",{"_index":3043,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontract.methods.name().call",{"_index":3037,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontract.methods.symbol().call",{"_index":3039,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontract.methods.totalsupply().call",{"_index":3041,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokendetailscomponent",{"_index":350,"title":{"components/TokenDetailsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tokenname",{"_index":3107,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["tokenratio",{"_index":469,"title":{},"body":{"components/AccountsComponent.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["tokenratiopipe",{"_index":2882,"title":{"pipes/TokenRatioPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/TokenRatioPipe.html":{},"coverage.html":{},"overview.html":{}}}],["tokenregistry",{"_index":2964,"title":{"classes/TokenRegistry.html":{}},"body":{"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["tokenresponse",{"_index":1030,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":1201,"title":{},"body":{"interfaces/Conversion.html":{},"modules/PagesRoutingModule.html":{},"components/SidebarComponent.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["tokens'},{'name",{"_index":352,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["tokens.component.html",{"_index":3063,"title":{},"body":{"components/TokensComponent.html":{}}}],["tokens.component.scss",{"_index":3062,"title":{},"body":{"components/TokensComponent.html":{}}}],["tokens.find((token",{"_index":3048,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokenscomponent",{"_index":351,"title":{"components/TokensComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tokenservice",{"_index":389,"title":{"injectables/TokenService.html":{}},"body":{"components/AccountsComponent.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["tokenservicestub",{"_index":3056,"title":{"classes/TokenServiceStub.html":{}},"body":{"classes/TokenServiceStub.html":{},"coverage.html":{}}}],["tokenslist",{"_index":2992,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokensmodule",{"_index":3083,"title":{"modules/TokensModule.html":{}},"body":{"modules/TokensModule.html":{},"modules.html":{},"overview.html":{}}}],["tokensroutingmodule",{"_index":3087,"title":{"modules/TokensRoutingModule.html":{}},"body":{"modules/TokensModule.html":{},"modules/TokensRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tokenssubject",{"_index":2993,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokensubject",{"_index":3044,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokensubject.asobservable",{"_index":3050,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokensubject.next(queriedtoken",{"_index":3049,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokensymbol",{"_index":381,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["tom",{"_index":1673,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["tomato",{"_index":2244,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tomatoes",{"_index":2245,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":3921,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":1429,"title":{},"body":{"components/FooterStubComponent.html":{},"components/SidebarStubComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{}}}],["topbar'},{'name",{"_index":354,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["topbar.component.html",{"_index":3100,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":3099,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":353,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"modules/SharedModule.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["topbarstubcomponent",{"_index":355,"title":{"components/TopbarStubComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["total",{"_index":164,"title":{},"body":{"classes/AccountIndex.html":{},"interfaces/Token.html":{},"classes/TokenRegistry.html":{}}}],["totalaccounts",{"_index":110,"title":{},"body":{"classes/AccountIndex.html":{}}}],["totaltokens",{"_index":2968,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["tour",{"_index":2464,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tout",{"_index":2153,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tovalue",{"_index":1190,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["tovalue(value",{"_index":3300,"title":{},"body":{"injectables/TransactionService.html":{}}}],["town",{"_index":1890,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["trace",{"_index":1458,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["trace|debug|info|log|warn|error|fatal|off",{"_index":1609,"title":{},"body":{"injectables/LoggingService.html":{}}}],["tracks",{"_index":1281,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{}}}],["trade",{"_index":2178,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trademark",{"_index":4176,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4177,"title":{},"body":{"license.html":{}}}],["trader",{"_index":1191,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["traderbloxberglink",{"_index":3108,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["trading",{"_index":2950,"title":{},"body":{"components/TokenDetailsComponent.html":{}}}],["trainer",{"_index":1998,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["transacted",{"_index":1202,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["transaction",{"_index":357,"title":{"interfaces/Transaction.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"interfaces/W3.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["transaction.destinationtoken.address",{"_index":3176,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.destinationtoken.name",{"_index":3177,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.destinationtoken.symbol",{"_index":3178,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.from",{"_index":3157,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["transaction.fromvalue",{"_index":3174,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.recipient",{"_index":3246,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transaction.recipient?.vcard.fn[0].value",{"_index":3158,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.sender",{"_index":3240,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transaction.sender?.vcard.fn[0].value",{"_index":3156,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.sourcetoken.address",{"_index":3171,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.sourcetoken.name",{"_index":3172,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.sourcetoken.symbol",{"_index":3173,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.to",{"_index":3159,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["transaction.token._address",{"_index":3161,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.tovalue",{"_index":3179,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.trader",{"_index":3170,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.tx.block",{"_index":3162,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.tx.success",{"_index":3165,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.tx.timestamp",{"_index":3166,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.tx.txhash",{"_index":3164,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{}}}],["transaction.tx.txindex",{"_index":3163,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["transaction.type",{"_index":3238,"title":{},"body":{"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{}}}],["transaction.value",{"_index":3160,"title":{},"body":{"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{}}}],["transaction?.recipient?.vcard.fn[0].value",{"_index":3375,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transaction?.sender?.vcard.fn[0].value",{"_index":3374,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transaction?.tovalue",{"_index":3377,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transaction?.tx.timestamp",{"_index":3378,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transaction?.type",{"_index":3379,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transaction?.value",{"_index":3376,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiondatasource",{"_index":3333,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiondetailscomponent",{"_index":356,"title":{"components/TransactionDetailsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"coverage.html":{},"overview.html":{}}}],["transactiondisplayedcolumns",{"_index":3334,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionhelper",{"_index":1121,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionhelper(settings.w3.engine",{"_index":1136,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionlist",{"_index":3181,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactions",{"_index":359,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["transactions.component.html",{"_index":3332,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactions.component.scss",{"_index":3331,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":358,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["transactionservice",{"_index":686,"title":{"injectables/TransactionService.html":{}},"body":{"components/AppComponent.html":{},"injectables/BlockSyncService.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["transactionservicestub",{"_index":3322,"title":{"classes/TransactionServiceStub.html":{}},"body":{"classes/TransactionServiceStub.html":{},"coverage.html":{}}}],["transactionsinfo",{"_index":1101,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionsinfo.filter_rounds",{"_index":1185,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionsinfo.high",{"_index":1184,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionsinfo.low",{"_index":1183,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["transactionsmodule",{"_index":483,"title":{"modules/TransactionsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/TransactionsModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsroutingmodule",{"_index":3384,"title":{"modules/TransactionsRoutingModule.html":{}},"body":{"modules/TransactionsModule.html":{},"modules/TransactionsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionssubject",{"_index":3182,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transactionstype",{"_index":3335,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionstypes",{"_index":3336,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiontype",{"_index":3373,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactiontypes",{"_index":2514,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transfer",{"_index":2616,"title":{},"body":{"components/OrganizationComponent.html":{},"components/TransactionsComponent.html":{},"license.html":{}}}],["transferauthaddress",{"_index":3274,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transferauthorization",{"_index":3276,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transferred",{"_index":4126,"title":{},"body":{"license.html":{}}}],["transferrequest",{"_index":3190,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transferrequest(tokenaddress",{"_index":3205,"title":{},"body":{"injectables/TransactionService.html":{}}}],["transferring",{"_index":4240,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":3372,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transform",{"_index":2809,"title":{},"body":{"pipes/SafePipe.html":{},"pipes/TokenRatioPipe.html":{},"pipes/UnixDatePipe.html":{}}}],["transform(timestamp",{"_index":3392,"title":{},"body":{"pipes/UnixDatePipe.html":{}}}],["transform(url",{"_index":2810,"title":{},"body":{"pipes/SafePipe.html":{}}}],["transform(value",{"_index":2960,"title":{},"body":{"pipes/TokenRatioPipe.html":{}}}],["transition",{"_index":618,"title":{},"body":{"components/AdminComponent.html":{}}}],["transition('expanded",{"_index":632,"title":{},"body":{"components/AdminComponent.html":{}}}],["transmission",{"_index":4083,"title":{},"body":{"license.html":{}}}],["transport",{"_index":2453,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["transpoter",{"_index":2480,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["trash",{"_index":2048,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["trasportion",{"_index":2475,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["travel",{"_index":2465,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["traverse",{"_index":905,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["treated",{"_index":4149,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3981,"title":{},"body":{"license.html":{}}}],["tree",{"_index":208,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"guards/RoleGuard.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"miscellaneous/variables.html":{}}}],["trigger",{"_index":619,"title":{},"body":{"components/AdminComponent.html":{}}}],["trigger('detailexpand",{"_index":623,"title":{},"body":{"components/AdminComponent.html":{}}}],["triggered",{"_index":2660,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["true",{"_index":139,"title":{},"body":{"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/UserServiceStub.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["trusted",{"_index":723,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["trusteddeclaratoraddress",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trustedusers",{"_index":930,"title":{},"body":{"injectables/AuthService.html":{},"components/SettingsComponent.html":{}}}],["trusteduserslist",{"_index":931,"title":{},"body":{"injectables/AuthService.html":{}}}],["trusteduserssubject",{"_index":932,"title":{},"body":{"injectables/AuthService.html":{}}}],["try",{"_index":427,"title":{},"body":{"components/AccountsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/TransactionService.html":{}}}],["ts",{"_index":2752,"title":{},"body":{"directives/PasswordToggleDirective.html":{}}}],["tslib",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":3669,"title":{},"body":{"index.html":{}}}],["tslint.json",{"_index":3674,"title":{},"body":{"index.html":{}}}],["tslint:disable",{"_index":1144,"title":{},"body":{"injectables/BlockSyncService.html":{},"directives/RouterLinkDirectiveStub.html":{}}}],["tudor",{"_index":1901,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tuktuk",{"_index":2470,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tution",{"_index":1992,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tv",{"_index":2154,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":3756,"title":{},"body":{"license.html":{}}}],["tx",{"_index":1107,"title":{"interfaces/Tx.html":{}},"body":{"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"modules/PagesRoutingModule.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"coverage.html":{}}}],["tx(environment.bloxbergchainid",{"_index":3289,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.data",{"_index":3301,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.gaslimit",{"_index":3295,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.gasprice",{"_index":3292,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.message",{"_index":3303,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.nonce",{"_index":3290,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.setsignature(r",{"_index":3315,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.to",{"_index":3297,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.tx.txhash",{"_index":3262,"title":{},"body":{"injectables/TransactionService.html":{}}}],["tx.value",{"_index":3299,"title":{},"body":{"injectables/TransactionService.html":{}}}],["txhash",{"_index":1208,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["txhelper",{"_index":2819,"title":{},"body":{"classes/Settings.html":{},"interfaces/W3.html":{}}}],["txindex",{"_index":1209,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["txmsg",{"_index":3302,"title":{},"body":{"injectables/TransactionService.html":{}}}],["txtoken",{"_index":1192,"title":{"interfaces/TxToken.html":{}},"body":{"interfaces/Conversion.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"coverage.html":{}}}],["txwire",{"_index":3316,"title":{},"body":{"injectables/TransactionService.html":{}}}],["typ",{"_index":53,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":21,"title":{},"body":{"interfaces/AccountDetails.html":{},"classes/AccountIndex.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"interfaces/Action.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"components/ErrorDialogComponent.html":{},"injectables/ErrorDialogService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"interceptors/HttpConfigInterceptor.html":{},"classes/HttpError.html":{},"injectables/KeystoreService.html":{},"injectables/LocationService.html":{},"interceptors/LoggingInterceptor.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"guards/RoleGuard.html":{},"directives/RouterLinkDirectiveStub.html":{},"pipes/SafePipe.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{},"pipes/TokenRatioPipe.html":{},"classes/TokenRegistry.html":{},"injectables/TokenService.html":{},"classes/TokenServiceStub.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"pipes/UnixDatePipe.html":{},"classes/UserServiceStub.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":1376,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/HttpConfigInterceptor.html":{},"interceptors/LoggingInterceptor.html":{},"interceptors/MockBackendInterceptor.html":{}}}],["typeerror",{"_index":1492,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["types",{"_index":1447,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":134,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{},"miscellaneous/functions.html":{}}}],["typical",{"_index":4107,"title":{},"body":{"license.html":{}}}],["uchumi",{"_index":1834,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uchuuzi",{"_index":2332,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uchuzi",{"_index":2331,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ug",{"_index":2633,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["ugali",{"_index":2330,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uganda",{"_index":2634,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["ugoro",{"_index":2321,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uint256",{"_index":3286,"title":{},"body":{"injectables/TransactionService.html":{}}}],["uint8array",{"_index":1115,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["uint8array(blockfilterbinstr.length",{"_index":1171,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["uint8array(blocktxfilterbinstr.length",{"_index":1179,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["ujenzi",{"_index":2180,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uji",{"_index":2329,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ukulima",{"_index":2060,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ukunda",{"_index":1796,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["umena",{"_index":2254,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["umoja",{"_index":1836,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unacceptable",{"_index":3789,"title":{},"body":{"license.html":{}}}],["unapproved",{"_index":645,"title":{},"body":{"components/AdminComponent.html":{},"classes/UserServiceStub.html":{}}}],["unauthorized",{"_index":1407,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["undefined",{"_index":301,"title":{},"body":{"components/AccountSearchComponent.html":{},"classes/Settings.html":{},"interfaces/W3.html":{}}}],["under",{"_index":3831,"title":{},"body":{"license.html":{}}}],["unga",{"_index":2312,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uniform",{"_index":2440,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":1210,"title":{},"body":{"interfaces/Conversion.html":{},"interfaces/Token.html":{},"interfaces/Transaction.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{}}}],["unit",{"_index":3648,"title":{},"body":{"index.html":{}}}],["united",{"_index":2627,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["university",{"_index":1967,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["unixdate",{"_index":467,"title":{},"body":{"components/AccountsComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{},"pipes/UnixDatePipe.html":{}}}],["unixdatepipe",{"_index":2883,"title":{"pipes/UnixDatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/UnixDatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["unknown",{"_index":1950,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"pipes/SafePipe.html":{},"pipes/UnixDatePipe.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":4115,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3944,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3848,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3968,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4145,"title":{},"body":{"license.html":{}}}],["unsuccessful",{"_index":1396,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["until",{"_index":4206,"title":{},"body":{"license.html":{}}}],["updates",{"_index":4135,"title":{},"body":{"license.html":{}}}],["updatesyncable",{"_index":3486,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatesyncable(changes",{"_index":3600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uploaded",{"_index":897,"title":{},"body":{"guards/AuthGuard.html":{}}}],["uppercase",{"_index":462,"title":{},"body":{"components/AccountsComponent.html":{},"components/CreateAccountComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["urban",{"_index":1951,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":889,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interceptors/MockBackendInterceptor.html":{},"components/PagesComponent.html":{},"guards/RoleGuard.html":{},"pipes/SafePipe.html":{}}}],["url.endswith('/accounttypes",{"_index":2536,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/actions",{"_index":2537,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/areanames",{"_index":2542,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/areatypes",{"_index":2543,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/categories",{"_index":2544,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/genders",{"_index":2546,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.endswith('/transactiontypes",{"_index":2547,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.match(/\\/actions\\/\\d",{"_index":2539,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["url.split",{"_index":2573,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["urlparts",{"_index":2572,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["urlparts[urlparts.length",{"_index":2579,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["urltree",{"_index":907,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["usafi",{"_index":2045,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":559,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"injectables/AuthService.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":810,"title":{},"body":{"modules/AppModule.html":{},"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":57,"title":{},"body":{"interfaces/AccountDetails.html":{},"guards/AuthGuard.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"classes/PGPSigner.html":{},"guards/RoleGuard.html":{},"interfaces/Signable.html":{},"interfaces/Signature.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"interfaces/Staff.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["useful",{"_index":4413,"title":{},"body":{"license.html":{}}}],["usehash",{"_index":823,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":25,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Action.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"interfaces/Staff.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":31,"title":{},"body":{"interfaces/AccountDetails.html":{},"guards/AuthGuard.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interceptors/MockBackendInterceptor.html":{},"guards/RoleGuard.html":{},"interfaces/Signature.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":2864,"title":{},"body":{"components/SettingsComponent.html":{}}}],["user.name",{"_index":2863,"title":{},"body":{"components/SettingsComponent.html":{}}}],["user.tokey(conversion.trader",{"_index":3259,"title":{},"body":{"injectables/TransactionService.html":{}}}],["user.tokey(transaction.from",{"_index":3243,"title":{},"body":{"injectables/TransactionService.html":{}}}],["user.tokey(transaction.to",{"_index":3247,"title":{},"body":{"injectables/TransactionService.html":{}}}],["user.userid",{"_index":1068,"title":{},"body":{"injectables/AuthService.html":{},"components/SettingsComponent.html":{}}}],["user?.balance",{"_index":468,"title":{},"body":{"components/AccountsComponent.html":{}}}],["user?.date_registered",{"_index":466,"title":{},"body":{"components/AccountsComponent.html":{}}}],["user?.location.area_name",{"_index":470,"title":{},"body":{"components/AccountsComponent.html":{}}}],["user?.vcard.fn[0].value",{"_index":464,"title":{},"body":{"components/AccountsComponent.html":{}}}],["user?.vcard.tel[0].value",{"_index":465,"title":{},"body":{"components/AccountsComponent.html":{}}}],["userid",{"_index":2844,"title":{},"body":{"components/SettingsComponent.html":{},"interfaces/Staff.html":{}}}],["userinfo",{"_index":2836,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/TransactionService.html":{}}}],["userinfo?.email",{"_index":2862,"title":{},"body":{"components/SettingsComponent.html":{}}}],["userinfo?.name",{"_index":2861,"title":{},"body":{"components/SettingsComponent.html":{}}}],["userinfo?.userid",{"_index":2859,"title":{},"body":{"components/SettingsComponent.html":{}}}],["userkey",{"_index":3437,"title":{},"body":{"classes/UserServiceStub.html":{}}}],["username",{"_index":2860,"title":{},"body":{"components/SettingsComponent.html":{}}}],["users",{"_index":2852,"title":{},"body":{"components/SettingsComponent.html":{},"classes/UserServiceStub.html":{},"index.html":{},"license.html":{}}}],["userservice",{"_index":244,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/CreateAccountComponent.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"coverage.html":{}}}],["userservicestub",{"_index":3397,"title":{"classes/UserServiceStub.html":{}},"body":{"classes/UserServiceStub.html":{},"coverage.html":{}}}],["uses",{"_index":4110,"title":{},"body":{"license.html":{}}}],["using",{"_index":2671,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"index.html":{},"license.html":{}}}],["ustadh",{"_index":2015,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ustadhi",{"_index":2016,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["utange",{"_index":1884,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["utencils",{"_index":2443,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["utensils",{"_index":2444,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["utils",{"_index":3221,"title":{},"body":{"injectables/TransactionService.html":{}}}],["utils.abicoder",{"_index":3284,"title":{},"body":{"injectables/TransactionService.html":{}}}],["uto",{"_index":2427,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uvuvi",{"_index":2120,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["uyoma",{"_index":1925,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":1173,"title":{},"body":{"injectables/BlockSyncService.html":{},"injectables/TransactionService.html":{}}}],["v[i",{"_index":1174,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["valid",{"_index":99,"title":{},"body":{"classes/AccountIndex.html":{},"classes/CustomValidator.html":{},"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"classes/TokenRegistry.html":{},"license.html":{}}}],["validated",{"_index":150,"title":{},"body":{"classes/AccountIndex.html":{},"classes/CustomValidator.html":{},"miscellaneous/functions.html":{}}}],["validates",{"_index":3595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":1282,"title":{},"body":{"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{}}}],["validation.ts",{"_index":3482,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":1308,"title":{},"body":{"classes/CustomValidator.html":{}}}],["validator",{"_index":3529,"title":{},"body":{"dependencies.html":{}}}],["validators",{"_index":272,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["validators.required",{"_index":282,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/OrganizationComponent.html":{}}}],["value",{"_index":48,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"interfaces/Conversion.html":{},"components/CreateAccountComponent.html":{},"classes/CustomErrorStateMatcher.html":{},"classes/CustomValidator.html":{},"injectables/ErrorDialogService.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocationService.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"components/PagesComponent.html":{},"directives/PasswordToggleDirective.html":{},"injectables/RegistryService.html":{},"directives/RouterLinkDirectiveStub.html":{},"classes/Settings.html":{},"components/SettingsComponent.html":{},"interfaces/Signature.html":{},"pipes/TokenRatioPipe.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"interfaces/Transaction.html":{},"injectables/TransactionService.html":{},"components/TransactionsComponent.html":{},"interfaces/Tx.html":{},"interfaces/TxToken.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["value.trim().tolocalelowercase",{"_index":453,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["values",{"_index":582,"title":{},"body":{"classes/ActivatedRouteStub.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":318,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateAccountComponent.html":{},"components/ErrorDialogComponent.html":{},"components/FooterComponent.html":{},"components/FooterStubComponent.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"components/PagesComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SidebarStubComponent.html":{},"components/TokenDetailsComponent.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TopbarStubComponent.html":{},"components/TransactionDetailsComponent.html":{},"components/TransactionsComponent.html":{}}}],["variable",{"_index":3461,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3655,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vcard",{"_index":22,"title":{},"body":{"interfaces/AccountDetails.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"injectables/TransactionService.html":{},"classes/UserServiceStub.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["vcard.parse(atob(accountinfo.vcard",{"_index":3272,"title":{},"body":{"injectables/TransactionService.html":{}}}],["vcardvalidation",{"_index":3484,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["vcardvalidation(vcard",{"_index":3599,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vegetable",{"_index":2308,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vendor",{"_index":1670,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":3699,"title":{},"body":{"license.html":{}}}],["verification",{"_index":2662,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["verify",{"_index":2648,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["verify(digest",{"_index":2672,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["verifying",{"_index":2640,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{}}}],["version",{"_index":54,"title":{},"body":{"interfaces/AccountDetails.html":{},"components/AppComponent.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":3713,"title":{},"body":{"license.html":{}}}],["vet",{"_index":2375,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["veterinary",{"_index":2374,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":3585,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["viatu",{"_index":2173,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["viazi",{"_index":2333,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vidziweni",{"_index":1794,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1638,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{},"components/TransactionDetailsComponent.html":{},"index.html":{},"license.html":{}}}],["view_in_ar",{"_index":313,"title":{},"body":{"components/AccountSearchComponent.html":{}}}],["viewaccount",{"_index":386,"title":{},"body":{"components/AccountsComponent.html":{}}}],["viewaccount(account",{"_index":397,"title":{},"body":{"components/AccountsComponent.html":{}}}],["viewchild",{"_index":418,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["viewchild(matpaginator",{"_index":413,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["viewchild(matsort",{"_index":416,"title":{},"body":{"components/AccountsComponent.html":{},"components/AdminComponent.html":{},"components/SettingsComponent.html":{},"components/TokensComponent.html":{},"components/TransactionsComponent.html":{}}}],["viewrecipient",{"_index":3111,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["views",{"_index":888,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"guards/RoleGuard.html":{}}}],["viewsender",{"_index":3112,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["viewtoken",{"_index":3065,"title":{},"body":{"components/TokensComponent.html":{}}}],["viewtoken(token",{"_index":3071,"title":{},"body":{"components/TokensComponent.html":{}}}],["viewtrader",{"_index":3113,"title":{},"body":{"components/TransactionDetailsComponent.html":{}}}],["viewtransaction",{"_index":3339,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["viewtransaction(transaction",{"_index":3347,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["vigungani",{"_index":1793,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vijana",{"_index":1999,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vikapu",{"_index":2439,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vikinduni",{"_index":1781,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vikolani",{"_index":1782,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["village",{"_index":2028,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vinyunduni",{"_index":1795,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["viogato",{"_index":1784,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["violates",{"_index":4141,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4202,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":628,"title":{},"body":{"components/AdminComponent.html":{},"directives/PasswordToggleDirective.html":{}}}],["visible",{"_index":631,"title":{},"body":{"components/AdminComponent.html":{},"license.html":{}}}],["vistangani",{"_index":1786,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vitabu",{"_index":2007,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vitangani",{"_index":1783,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vitenge",{"_index":2442,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vitungu",{"_index":2286,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vivian",{"_index":1682,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"classes/UserServiceStub.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":250,"title":{},"body":{"components/AccountSearchComponent.html":{},"components/AccountsComponent.html":{},"classes/ActivatedRouteStub.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockSyncService.html":{},"components/CreateAccountComponent.html":{},"classes/CustomValidator.html":{},"components/FooterComponent.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"injectables/LocationService.html":{},"injectables/LoggingService.html":{},"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"components/NetworkStatusComponent.html":{},"components/OrganizationComponent.html":{},"classes/PGPSigner.html":{},"directives/PasswordToggleDirective.html":{},"directives/RouterLinkDirectiveStub.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"components/TokenDetailsComponent.html":{},"injectables/TokenService.html":{},"components/TokensComponent.html":{},"components/TopbarComponent.html":{},"components/TransactionDetailsComponent.html":{},"injectables/TransactionService.html":{},"classes/TransactionServiceStub.html":{},"components/TransactionsComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["volume",{"_index":4034,"title":{},"body":{"license.html":{}}}],["volunteer",{"_index":1980,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vsla",{"_index":2382,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vyogato",{"_index":1785,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["vyombo",{"_index":2452,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["w",{"_index":1162,"title":{},"body":{"injectables/BlockSyncService.html":{},"license.html":{}}}],["w.onmessage",{"_index":1164,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["w.postmessage",{"_index":1165,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["w3",{"_index":2820,"title":{"interfaces/W3.html":{}},"body":{"classes/Settings.html":{},"interfaces/W3.html":{},"coverage.html":{}}}],["w3_provider",{"_index":1155,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["waiter",{"_index":2171,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["waitress",{"_index":2172,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["waive",{"_index":3989,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4393,"title":{},"body":{"license.html":{}}}],["wakulima",{"_index":2061,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":3730,"title":{},"body":{"license.html":{}}}],["ward",{"_index":2029,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":1454,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["warnings",{"_index":1467,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{}}}],["warranties",{"_index":3881,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3767,"title":{},"body":{"license.html":{}}}],["wash",{"_index":2077,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["washing",{"_index":2165,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["waste",{"_index":2039,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["watchlady",{"_index":2181,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["watchman",{"_index":2170,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["water",{"_index":2346,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":3720,"title":{},"body":{"license.html":{}}}],["ways",{"_index":4045,"title":{},"body":{"license.html":{}}}],["web",{"_index":3606,"title":{},"body":{"index.html":{}}}],["web3",{"_index":166,"title":{},"body":{"classes/AccountIndex.html":{},"classes/Settings.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"interfaces/W3.html":{},"injectables/Web3Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["web3(environment.web3provider",{"_index":3456,"title":{},"body":{"injectables/Web3Service.html":{}}}],["web3.eth.abi.encodeparameter('bytes32",{"_index":2987,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["web3.eth.accounts[0",{"_index":187,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["web3.eth.contract(abi",{"_index":185,"title":{},"body":{"classes/AccountIndex.html":{},"classes/TokenRegistry.html":{}}}],["web3.utils.tohex(identifier",{"_index":2988,"title":{},"body":{"classes/TokenRegistry.html":{}}}],["web3provider",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web3service",{"_index":169,"title":{"injectables/Web3Service.html":{}},"body":{"classes/AccountIndex.html":{},"injectables/BlockSyncService.html":{},"injectables/RegistryService.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"injectables/Web3Service.html":{},"coverage.html":{}}}],["web3service.getinstance",{"_index":179,"title":{},"body":{"classes/AccountIndex.html":{},"injectables/BlockSyncService.html":{},"injectables/RegistryService.html":{},"classes/TokenRegistry.html":{},"injectables/TransactionService.html":{},"miscellaneous/variables.html":{}}}],["web3service.web3",{"_index":3455,"title":{},"body":{"injectables/Web3Service.html":{}}}],["weight",{"_index":2928,"title":{},"body":{"interfaces/Token.html":{},"components/TokenDetailsComponent.html":{}}}],["welcome",{"_index":4423,"title":{},"body":{"license.html":{}}}],["welder",{"_index":2167,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["welding",{"_index":2168,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["well",{"_index":3865,"title":{},"body":{"license.html":{}}}],["went",{"_index":1400,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["west",{"_index":1800,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["whatever",{"_index":4244,"title":{},"body":{"license.html":{}}}],["wheadsync",{"_index":1149,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["wheadsync.onmessage",{"_index":1152,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["wheadsync.postmessage",{"_index":1154,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["whether",{"_index":145,"title":{},"body":{"classes/AccountIndex.html":{},"guards/AuthGuard.html":{},"classes/CustomErrorStateMatcher.html":{},"guards/RoleGuard.html":{},"license.html":{}}}],["whole",{"_index":3900,"title":{},"body":{"license.html":{}}}],["wholesaler",{"_index":2435,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["whose",{"_index":4090,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3896,"title":{},"body":{"license.html":{}}}],["width",{"_index":661,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/ErrorDialogService.html":{},"directives/MenuSelectionDirective.html":{}}}],["window",{"_index":3911,"title":{},"body":{"license.html":{}}}],["window.atob(transactionsinfo.block_filter",{"_index":1169,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["window.atob(transactionsinfo.blocktx_filter",{"_index":1177,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["window.dispatchevent(this.newevent(transaction",{"_index":1138,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["window.getcomputedstyle(element).display",{"_index":870,"title":{},"body":{"components/AuthComponent.html":{}}}],["window.location.reload",{"_index":738,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["window.matchmedia('(max",{"_index":702,"title":{},"body":{"components/AppComponent.html":{},"directives/MenuSelectionDirective.html":{}}}],["window.prompt('password",{"_index":2689,"title":{},"body":{"classes/PGPSigner.html":{},"interfaces/Signable.html":{},"interfaces/Signature-1.html":{},"interfaces/Signer.html":{},"injectables/TransactionService.html":{}}}],["window:cic_convert",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["window:cic_convert(event",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["window:cic_transfer",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["window:cic_transfer(event",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["wine",{"_index":2336,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["wipo",{"_index":3980,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3728,"title":{},"body":{"license.html":{}}}],["within",{"_index":4187,"title":{},"body":{"license.html":{}}}],["without",{"_index":3851,"title":{},"body":{"license.html":{}}}],["wood",{"_index":2500,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":2186,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["work's",{"_index":3920,"title":{},"body":{"license.html":{}}}],["worker",{"_index":712,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BlockSyncService.html":{},"interceptors/MockBackendInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["worker('./../assets/js/block",{"_index":1150,"title":{},"body":{"injectables/BlockSyncService.html":{}}}],["worker.js",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":2169,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["works",{"_index":3646,"title":{},"body":{"index.html":{},"license.html":{}}}],["world",{"_index":3328,"title":{},"body":{"classes/TransactionServiceStub.html":{}}}],["world!&#39",{"_index":3566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["worldwide",{"_index":4274,"title":{},"body":{"license.html":{}}}],["wote",{"_index":1945,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":2519,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{}}}],["wrapper",{"_index":1634,"title":{},"body":{"directives/MenuSelectionDirective.html":{},"directives/MenuToggleDirective.html":{},"directives/PasswordToggleDirective.html":{}}}],["write",{"_index":69,"title":{},"body":{"interfaces/AccountDetails.html":{},"injectables/GlobalErrorHandler.html":{},"classes/HttpError.html":{},"interfaces/Meta.html":{},"interfaces/MetaResponse.html":{},"interfaces/Signature.html":{}}}],["writing",{"_index":4356,"title":{},"body":{"license.html":{}}}],["written",{"_index":4054,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1401,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ws.dev.grassrootseconomics.net",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://bloxberg",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{}}}],["yapha",{"_index":1787,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yava",{"_index":1788,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["years",{"_index":4056,"title":{},"body":{"license.html":{}}}],["yes",{"_index":122,"title":{},"body":{"classes/AccountIndex.html":{},"classes/ActivatedRouteStub.html":{},"classes/TokenRegistry.html":{}}}],["yoga",{"_index":2174,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yoghurt",{"_index":2334,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yogurt",{"_index":2335,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yourself",{"_index":4292,"title":{},"body":{"license.html":{}}}],["youth",{"_index":2000,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["yowani",{"_index":1789,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["ziwani",{"_index":1790,"title":{},"body":{"interceptors/MockBackendInterceptor.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":484,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PagesModule.html":{},"modules/SettingsModule.html":{},"modules/SharedModule.html":{},"modules/TokensModule.html":{},"modules/TransactionsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccountDetails.html":{"url":"interfaces/AccountDetails.html","title":"interface - AccountDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccountDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/account.ts\n        \n\n            \n                Description\n            \n            \n                Account data interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        balance\n                                \n                                \n                                            Optional\n                                        category\n                                \n                                \n                                        date_registered\n                                \n                                \n                                        gender\n                                \n                                \n                                        identities\n                                \n                                \n                                        location\n                                \n                                \n                                        products\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                        vcard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Age of user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Token balance on account \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Business category of user. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_registered\n                                    \n                                \n                                \n                                    \n                                        date_registered:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account registration day \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's gender \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identities\n                                    \n                                \n                                \n                                    \n                                        identities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account identifiers \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                    \n                                \n                                \n                                    \n                                        products:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Products or services provided by user. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of account \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vcard\n                                    \n                                \n                                \n                                    \n                                        vcard:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Personal identifying information of user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface AccountDetails {\n  /** Age of user */\n  age?: string;\n  /** Token balance on account */\n  balance?: number;\n  /** Business category of user. */\n  category?: string;\n  /** Account registration day */\n  date_registered: number;\n  /** User's gender */\n  gender: string;\n  /** Account identifiers */\n  identities: {\n    evm: {\n      'bloxberg:8996': string[];\n      'oldchain:1': string[];\n    };\n    latitude: number;\n    longitude: number;\n  };\n  /** User's location */\n  location: {\n    area?: string;\n    area_name: string;\n    area_type?: string;\n  };\n  /** Products or services provided by user. */\n  products: string[];\n  /** Type of account */\n  type?: string;\n  /** Personal identifying information of user */\n  vcard: {\n    email: [\n      {\n        value: string;\n      }\n    ];\n    fn: [\n      {\n        value: string;\n      }\n    ];\n    n: [\n      {\n        value: string[];\n      }\n    ];\n    tel: [\n      {\n        meta: {\n          TYP: string[];\n        };\n        value: string;\n      }\n    ];\n    version: [\n      {\n        value: string;\n      }\n    ];\n  };\n}\n\n/** Meta signature interface */\ninterface Signature {\n  /** Algorithm used */\n  algo: string;\n  /** Data that was signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Meta object interface */\ninterface Meta {\n  /** Account details */\n  data: AccountDetails;\n  /** Meta store id */\n  id: string;\n  /** Signature used during write. */\n  signature: Signature;\n}\n\n/** Meta response interface */\ninterface MetaResponse {\n  /** Meta store id */\n  id: string;\n  /** Meta object */\n  m: Meta;\n}\n\n/** Default account data object */\nconst defaultAccount: AccountDetails = {\n  date_registered: Date.now(),\n  gender: 'other',\n  identities: {\n    evm: {\n      'bloxberg:8996': [''],\n      'oldchain:1': [''],\n    },\n    latitude: 0,\n    longitude: 0,\n  },\n  location: {\n    area_name: 'Kilifi',\n  },\n  products: [],\n  vcard: {\n    email: [\n      {\n        value: '',\n      },\n    ],\n    fn: [\n      {\n        value: 'Sarafu Contract',\n      },\n    ],\n    n: [\n      {\n        value: ['Sarafu', 'Contract'],\n      },\n    ],\n    tel: [\n      {\n        meta: {\n          TYP: [],\n        },\n        value: '+254700000000',\n      },\n    ],\n    version: [\n      {\n        value: '3.0',\n      },\n    ],\n  },\n};\n\n/** @exports */\nexport { AccountDetails, Meta, MetaResponse, Signature, defaultAccount };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountIndex.html":{"url":"classes/AccountIndex.html","title":"class - AccountIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_eth/accountIndex.ts\n        \n\n            \n                Description\n            \n            \n                Provides an instance of the accounts registry contract.\nAllows querying of accounts that have been registered as valid accounts in the network.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contract\n                            \n                            \n                                contractAddress\n                            \n                            \n                                signerAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addToAccountRegistry\n                            \n                            \n                                    Public\n                                    Async\n                                haveAccount\n                            \n                            \n                                    Public\n                                    Async\n                                last\n                            \n                            \n                                    Public\n                                    Async\n                                totalAccounts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contractAddress: string, signerAddress?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/_eth/accountIndex.ts:26\n                            \n                        \n\n                \n                    \n                            Create a connection to the deployed account registry contract.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        contractAddress\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe deployed account registry contract's address.\n\n\n                                                        \n                                                \n                                                \n                                                        signerAddress\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nThe account address of the account that deployed the account registry contract.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/accountIndex.ts:22\n                            \n                        \n\n                \n                    \n                        The instance of the account registry contract. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contractAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/accountIndex.ts:24\n                            \n                        \n\n                \n                    \n                        The deployed account registry contract's address. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signerAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/accountIndex.ts:26\n                            \n                        \n\n                \n                    \n                        The account address of the account that deployed the account registry contract. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addToAccountRegistry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addToAccountRegistry(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/accountIndex.ts:58\n                \n            \n\n\n            \n                \n                    Registers an account to the accounts registry.\nRequires availability of the signer address.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe account address to be registered to the accounts registry contract.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints &quot;true&quot; for registration of &#39;0xc0ffee254729296a45a3885639AC7E10F9d54979&#39;:\n```typescript\n\nconsole.log(await addToAccountRegistry(&#39;0xc0ffee254729296a45a3885639AC7E10F9d54979&#39;));\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        true - If registration is successful or account had already been registered.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            haveAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    haveAccount(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/accountIndex.ts:79\n                \n            \n\n\n            \n                \n                    Checks whether a specific account address has been registered in the accounts registry.\nReturns \"true\" for available and \"false\" otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe account address to be validated.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints &quot;true&quot; or &quot;false&quot; depending on whether &#39;0xc0ffee254729296a45a3885639AC7E10F9d54979&#39; has been registered:\n```typescript\n\nconsole.log(await haveAccount(&#39;0xc0ffee254729296a45a3885639AC7E10F9d54979&#39;));\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        true - If the address has been registered in the accounts registry.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            last\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    last(numberOfAccounts: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/accountIndex.ts:96\n                \n            \n\n\n            \n                \n                    Returns a specified number of the most recently registered accounts.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    numberOfAccounts\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe number of accounts to return from the accounts registry.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints an array of accounts:\n```typescript\n\nconsole.log(await last(5));\n```\n\n                        \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        An array of registered account addresses.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            totalAccounts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    totalAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/accountIndex.ts:122\n                \n            \n\n\n            \n                \n                    Returns the total number of accounts that have been registered in the network.\n\n\n                    \n                        Example :\n                        \n                            Prints the total number of registered accounts:\n```typescript\n\nconsole.log(await totalAccounts());\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The total number of registered accounts.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Web3 from 'web3';\n\n// Application imports\nimport { Web3Service } from '@app/_services/web3.service';\nimport { environment } from '@src/environments/environment';\n\n/** Fetch the account registry contract's ABI. */\nconst abi: Array = require('@src/assets/js/block-sync/data/AccountsIndex.json');\n/** Establish a connection to the blockchain network. */\nconst web3: Web3 = Web3Service.getInstance();\n\n/**\n * Provides an instance of the accounts registry contract.\n * Allows querying of accounts that have been registered as valid accounts in the network.\n *\n * @remarks\n * This is our interface to the accounts registry contract.\n */\nexport class AccountIndex {\n  /** The instance of the account registry contract. */\n  contract: any;\n  /** The deployed account registry contract's address. */\n  contractAddress: string;\n  /** The account address of the account that deployed the account registry contract. */\n  signerAddress: string;\n\n  /**\n   * Create a connection to the deployed account registry contract.\n   *\n   * @param contractAddress - The deployed account registry contract's address.\n   * @param signerAddress - The account address of the account that deployed the account registry contract.\n   */\n  constructor(contractAddress: string, signerAddress?: string) {\n    this.contractAddress = contractAddress;\n    this.contract = new web3.eth.Contract(abi, this.contractAddress);\n    if (signerAddress) {\n      this.signerAddress = signerAddress;\n    } else {\n      this.signerAddress = web3.eth.accounts[0];\n    }\n  }\n\n  /**\n   * Registers an account to the accounts registry.\n   * Requires availability of the signer address.\n   *\n   * @async\n   * @example\n   * Prints \"true\" for registration of '0xc0ffee254729296a45a3885639AC7E10F9d54979':\n   * ```typescript\n   * console.log(await addToAccountRegistry('0xc0ffee254729296a45a3885639AC7E10F9d54979'));\n   * ```\n   *\n   * @param address - The account address to be registered to the accounts registry contract.\n   * @returns true - If registration is successful or account had already been registered.\n   */\n  public async addToAccountRegistry(address: string): Promise {\n    if (!(await this.haveAccount(address))) {\n      return await this.contract.methods.add(address).send({ from: this.signerAddress });\n    }\n    return true;\n  }\n\n  /**\n   * Checks whether a specific account address has been registered in the accounts registry.\n   * Returns \"true\" for available and \"false\" otherwise.\n   *\n   * @async\n   * @example\n   * Prints \"true\" or \"false\" depending on whether '0xc0ffee254729296a45a3885639AC7E10F9d54979' has been registered:\n   * ```typescript\n   * console.log(await haveAccount('0xc0ffee254729296a45a3885639AC7E10F9d54979'));\n   * ```\n   *\n   * @param address - The account address to be validated.\n   * @returns true - If the address has been registered in the accounts registry.\n   */\n  public async haveAccount(address: string): Promise {\n    return (await this.contract.methods.have(address).call()) !== 0;\n  }\n\n  /**\n   * Returns a specified number of the most recently registered accounts.\n   *\n   * @async\n   * @example\n   * Prints an array of accounts:\n   * ```typescript\n   * console.log(await last(5));\n   * ```\n   *\n   * @param numberOfAccounts - The number of accounts to return from the accounts registry.\n   * @returns An array of registered account addresses.\n   */\n  public async last(numberOfAccounts: number): Promise> {\n    const count: number = await this.totalAccounts();\n    let lowest: number = count - numberOfAccounts;\n    if (lowest  = [];\n    for (let i = count - 1; i >= lowest; i--) {\n      const account: string = await this.contract.methods.entry(i).call();\n      accounts.push(account);\n    }\n    return accounts;\n  }\n\n  /**\n   * Returns the total number of accounts that have been registered in the network.\n   *\n   * @async\n   * @example\n   * Prints the total number of registered accounts:\n   * ```typescript\n   * console.log(await totalAccounts());\n   * ```\n   *\n   * @returns The total number of registered accounts.\n   */\n  public async totalAccounts(): Promise {\n    return await this.contract.methods.entryCount().call();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountSearchComponent.html":{"url":"components/AccountSearchComponent.html","title":"component - AccountSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/accounts/account-search/account-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-search\n            \n\n            \n                styleUrls\n                ./account-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressSearchForm\n                            \n                            \n                                addressSearchLoading\n                            \n                            \n                                addressSearchSubmitted\n                            \n                            \n                                matcher\n                            \n                            \n                                nameSearchForm\n                            \n                            \n                                nameSearchLoading\n                            \n                            \n                                nameSearchSubmitted\n                            \n                            \n                                phoneSearchForm\n                            \n                            \n                                phoneSearchLoading\n                            \n                            \n                                phoneSearchSubmitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onAddressSearch\n                            \n                            \n                                onNameSearch\n                            \n                            \n                                    Async\n                                onPhoneSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nameSearchFormStub\n                                \n                                \n                                    phoneSearchFormStub\n                                \n                                \n                                    addressSearchFormStub\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/accounts/account-search/account-search.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onAddressSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onAddressSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNameSearch\n                        \n                        \n                    \n                \n            \n            \n                \nonNameSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onPhoneSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onPhoneSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressSearchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressSearchLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressSearchSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomErrorStateMatcher\n\n                        \n                    \n                    \n                        \n                            Default value : new CustomErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameSearchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameSearchLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nameSearchSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneSearchForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneSearchLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneSearchSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nameSearchFormStub\n                    \n                \n\n                \n                    \n                        getnameSearchFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        phoneSearchFormStub\n                    \n                \n\n                \n                    \n                        getphoneSearchFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:50\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addressSearchFormStub\n                    \n                \n\n                \n                    \n                        getaddressSearchFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/accounts/account-search/account-search.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomErrorStateMatcher } from '@app/_helpers';\nimport { UserService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { strip0x } from '@src/assets/js/ethtx/dist/hex';\nimport { environment } from '@src/environments/environment';\n\n@Component({\n  selector: 'app-account-search',\n  templateUrl: './account-search.component.html',\n  styleUrls: ['./account-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountSearchComponent implements OnInit {\n  nameSearchForm: FormGroup;\n  nameSearchSubmitted: boolean = false;\n  nameSearchLoading: boolean = false;\n  phoneSearchForm: FormGroup;\n  phoneSearchSubmitted: boolean = false;\n  phoneSearchLoading: boolean = false;\n  addressSearchForm: FormGroup;\n  addressSearchSubmitted: boolean = false;\n  addressSearchLoading: boolean = false;\n  matcher: CustomErrorStateMatcher = new CustomErrorStateMatcher();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router\n  ) {\n    this.nameSearchForm = this.formBuilder.group({\n      name: ['', Validators.required],\n    });\n    this.phoneSearchForm = this.formBuilder.group({\n      phoneNumber: ['', Validators.required],\n    });\n    this.addressSearchForm = this.formBuilder.group({\n      address: ['', Validators.required],\n    });\n  }\n\n  async ngOnInit(): Promise {\n    await this.userService.init();\n  }\n\n  get nameSearchFormStub(): any {\n    return this.nameSearchForm.controls;\n  }\n  get phoneSearchFormStub(): any {\n    return this.phoneSearchForm.controls;\n  }\n  get addressSearchFormStub(): any {\n    return this.addressSearchForm.controls;\n  }\n\n  onNameSearch(): void {\n    this.nameSearchSubmitted = true;\n    if (this.nameSearchForm.invalid) {\n      return;\n    }\n    this.nameSearchLoading = true;\n    this.userService.searchAccountByName(this.nameSearchFormStub.name.value);\n    this.nameSearchLoading = false;\n  }\n\n  async onPhoneSearch(): Promise {\n    this.phoneSearchSubmitted = true;\n    if (this.phoneSearchForm.invalid) {\n      return;\n    }\n    this.phoneSearchLoading = true;\n    (\n      await this.userService.getAccountByPhone(this.phoneSearchFormStub.phoneNumber.value, 100)\n    ).subscribe(async (res) => {\n      if (res !== undefined) {\n        await this.router.navigateByUrl(\n          `/accounts/${strip0x(res.identities.evm[`bloxberg:${environment.bloxbergChainId}`][0])}`\n        );\n      } else {\n        alert('Account not found!');\n      }\n    });\n    this.phoneSearchLoading = false;\n  }\n\n  async onAddressSearch(): Promise {\n    this.addressSearchSubmitted = true;\n    if (this.addressSearchForm.invalid) {\n      return;\n    }\n    this.addressSearchLoading = true;\n    (\n      await this.userService.getAccountByAddress(this.addressSearchFormStub.address.value, 100)\n    ).subscribe(async (res) => {\n      if (res !== undefined) {\n        await this.router.navigateByUrl(\n          `/accounts/${strip0x(res.identities.evm[`bloxberg:${environment.bloxbergChainId}`][0])}`\n        );\n      } else {\n        alert('Account not found!');\n      }\n    });\n    this.addressSearchLoading = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Accounts\n          Search\n        \n      \n      \n         Accounts \n        \n          \n            \n              \n                \n                   Search \n                  \n                  Phone Number is required.\n                  phone\n                  Phone Number\n                \n                \n                  SEARCH\n                \n              \n            \n            \n              \n                \n                   Search \n                  \n                  Account Address is required.\n                  view_in_ar\n                  Account Address\n                \n                \n                  SEARCH\n                \n              \n            \n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./account-search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Accounts          Search                             Accounts                                                                                Search                                     Phone Number is required.                  phone                  Phone Number                                                  SEARCH                                                                                                       Search                                     Account Address is required.                  view_in_ar                  Account Address                                                  SEARCH                                                                                  '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountsComponent.html":{"url":"components/AccountsComponent.html","title":"component - AccountsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/accounts/accounts.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accounts\n            \n\n            \n                styleUrls\n                ./accounts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accounts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accounts\n                            \n                            \n                                accountsType\n                            \n                            \n                                accountTypes\n                            \n                            \n                                dataSource\n                            \n                            \n                                defaultPageSize\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                tokenSymbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFilter\n                            \n                            \n                                downloadCsv\n                            \n                            \n                                filterAccounts\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                refreshPaginator\n                            \n                            \n                                    Async\n                                viewAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loggingService: LoggingService, router: Router, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/accounts/accounts.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndoFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadCsv\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterAccounts\n                        \n                        \n                    \n                \n            \n            \n                \nfilterAccounts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshPaginator\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshPaginator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            viewAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewAccount(account)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/accounts.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultPageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'phone', 'created', 'balance', 'location']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [10, 20, 50, 100]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenSymbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/accounts.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { LoggingService, TokenService, UserService } from '@app/_services';\nimport { Router } from '@angular/router';\nimport { exportCsv } from '@app/_helpers';\nimport { strip0x } from '@src/assets/js/ethtx/dist/hex';\nimport { first } from 'rxjs/operators';\nimport { environment } from '@src/environments/environment';\nimport { AccountDetails } from '@app/_models';\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountsComponent implements OnInit {\n  dataSource: MatTableDataSource;\n  accounts: Array = [];\n  displayedColumns: Array = ['name', 'phone', 'created', 'balance', 'location'];\n  defaultPageSize: number = 10;\n  pageSizeOptions: Array = [10, 20, 50, 100];\n  accountsType: string = 'all';\n  accountTypes: Array;\n  tokenSymbol: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private userService: UserService,\n    private loggingService: LoggingService,\n    private router: Router,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise {\n    await this.userService.init();\n    await this.tokenService.init();\n    try {\n      // TODO it feels like this should be in the onInit handler\n      await this.userService.loadAccounts(100);\n    } catch (error) {\n      this.loggingService.sendErrorLevelMessage('Failed to load accounts', this, { error });\n    }\n    this.userService.accountsSubject.subscribe((accounts) => {\n      this.dataSource = new MatTableDataSource(accounts);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.accounts = accounts;\n    });\n    this.userService\n      .getAccountTypes()\n      .pipe(first())\n      .subscribe((res) => (this.accountTypes = res));\n    this.tokenService.load.subscribe(async (status: boolean) => {\n      if (status) {\n        this.tokenSymbol = await this.tokenService.getTokenSymbol();\n      }\n    });\n  }\n\n  doFilter(value: string): void {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  async viewAccount(account): Promise {\n    await this.router.navigateByUrl(\n      `/accounts/${strip0x(account.identities.evm[`bloxberg:${environment.bloxbergChainId}`][0])}`\n    );\n  }\n\n  filterAccounts(): void {\n    if (this.accountsType === 'all') {\n      this.userService.accountsSubject.subscribe((accounts) => {\n        this.dataSource.data = accounts;\n        this.accounts = accounts;\n      });\n    } else {\n      this.dataSource.data = this.accounts.filter((account) => account.type === this.accountsType);\n    }\n  }\n\n  refreshPaginator(): void {\n    if (!this.dataSource.paginator) {\n      this.dataSource.paginator = this.paginator;\n    }\n\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  downloadCsv(): void {\n    exportCsv(this.accounts, 'accounts');\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Accounts\n        \n      \n      \n         Accounts \n        \n          \n            \n               ACCOUNT TYPE \n              \n                ALL\n                \n                  {{ accountType | uppercase }}\n                \n              \n            \n            \n              SEARCH\n            \n            \n              EXPORT\n            \n          \n\n          \n             Filter \n            \n            search\n          \n\n          \n            \n               NAME \n               {{ user?.vcard.fn[0].value }} \n            \n\n            \n               PHONE NUMBER \n               {{ user?.vcard.tel[0].value }} \n            \n\n            \n               CREATED \n               {{ user?.date_registered | unixDate }} \n            \n\n            \n               BALANCE \n              \n                {{ user?.balance | tokenRatio }} {{ tokenSymbol | uppercase }}\n              \n            \n\n            \n               LOCATION \n               {{ user?.location.area_name }} \n            \n\n            \n            \n          \n\n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./accounts.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Accounts                             Accounts                                              ACCOUNT TYPE                               ALL                                  {{ accountType | uppercase }}                                                                    SEARCH                                      EXPORT                                             Filter                         search                                               NAME                {{ user?.vcard.fn[0].value }}                                        PHONE NUMBER                {{ user?.vcard.tel[0].value }}                                        CREATED                {{ user?.date_registered | unixDate }}                                        BALANCE                               {{ user?.balance | tokenRatio }} {{ tokenSymbol | uppercase }}                                                     LOCATION                {{ user?.location.area_name }}                                                                                       '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_AccountsModule_declarations\n\n\n\n\nAccountDetailsComponent\n\nAccountDetailsComponent\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountDetailsComponent->AccountsModule\n\n\n\n\n\nAccountSearchComponent\n\nAccountSearchComponent\n\nAccountsModule -->\n\nAccountSearchComponent->AccountsModule\n\n\n\n\n\nAccountsComponent\n\nAccountsComponent\n\nAccountsModule -->\n\nAccountsComponent->AccountsModule\n\n\n\n\n\nCreateAccountComponent\n\nCreateAccountComponent\n\nAccountsModule -->\n\nCreateAccountComponent->AccountsModule\n\n\n\n\n\nAccountsRoutingModule\n\nAccountsRoutingModule\n\nAccountsModule -->\n\nAccountsRoutingModule->AccountsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccountsModule -->\n\nSharedModule->AccountsModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAccountsModule -->\n\nTransactionsModule->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/accounts/accounts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountDetailsComponent\n                        \n                        \n                            AccountSearchComponent\n                        \n                        \n                            AccountsComponent\n                        \n                        \n                            CreateAccountComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TransactionsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountsRoutingModule } from '@pages/accounts/accounts-routing.module';\nimport { AccountsComponent } from '@pages/accounts/accounts.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { AccountDetailsComponent } from '@pages/accounts/account-details/account-details.component';\nimport { CreateAccountComponent } from '@pages/accounts/create-account/create-account.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { TransactionsModule } from '@pages/transactions/transactions.module';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AccountSearchComponent } from './account-search/account-search.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AccountsComponent,\n    AccountDetailsComponent,\n    CreateAccountComponent,\n    AccountSearchComponent,\n  ],\n  imports: [\n    CommonModule,\n    AccountsRoutingModule,\n    SharedModule,\n    MatTableModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatSelectModule,\n    TransactionsModule,\n    MatTabsModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n  ],\n})\nexport class AccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsRoutingModule.html":{"url":"modules/AccountsRoutingModule.html","title":"module - AccountsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/accounts/accounts-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountsComponent } from '@pages/accounts/accounts.component';\nimport { CreateAccountComponent } from '@pages/accounts/create-account/create-account.component';\nimport { AccountDetailsComponent } from '@pages/accounts/account-details/account-details.component';\nimport { AccountSearchComponent } from '@pages/accounts/account-search/account-search.component';\n\nconst routes: Routes = [\n  { path: '', component: AccountsComponent },\n  { path: 'search', component: AccountSearchComponent },\n  // { path: 'create', component: CreateAccountComponent },\n  { path: ':id', component: AccountDetailsComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/mappings.ts\n        \n\n            \n                Description\n            \n            \n                Action object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        approval\n                                \n                                \n                                        id\n                                \n                                \n                                        role\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action performed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        approval\n                                    \n                                \n                                \n                                    \n                                        approval:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action approval status. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Action ID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Admin's role in the system \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Admin who initialized the action. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface Action {\n  /** Action performed */\n  action: string;\n  /** Action approval status. */\n  approval: boolean;\n  /** Action ID */\n  id: number;\n  /** Admin's role in the system */\n  role: string;\n  /** Admin who initialized the action. */\n  user: string;\n}\n\n/** @exports */\nexport { Action };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivatedRouteStub.html":{"url":"classes/ActivatedRouteStub.html","title":"class - ActivatedRouteStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivatedRouteStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/activated-route-stub.ts\n        \n\n            \n                Description\n            \n            \n                An ActivateRoute test double with a paramMap observable.\nUse the setParamMap() method to add the next paramMap value.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                paramMap\n                            \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setParamMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialParams?: Params)\n                    \n                \n                        \n                            \n                                Defined in src/testing/activated-route-stub.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            paramMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.subject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/activated-route-stub.ts:18\n                            \n                        \n\n                \n                    \n                        The mock paramMap observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/activated-route-stub.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setParamMap\n                        \n                        \n                    \n                \n            \n            \n                \nsetParamMap(params?: Params)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/activated-route-stub.ts:21\n                \n            \n\n\n            \n                \n                    Set the paramMap observables's next value \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { convertToParamMap, ParamMap, Params } from '@angular/router';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * An ActivateRoute test double with a `paramMap` observable.\n * Use the `setParamMap()` method to add the next `paramMap` value.\n */\nexport class ActivatedRouteStub {\n  // Use a ReplaySubject to share previous values with subscribers\n  // and pump new values into the `paramMap` observable\n  private subject = new ReplaySubject();\n\n  constructor(initialParams?: Params) {\n    this.setParamMap(initialParams);\n  }\n\n  /** The mock paramMap observable */\n  readonly paramMap = this.subject.asObservable();\n\n  /** Set the paramMap observables's next value */\n  setParamMap(params?: Params): void {\n    this.subject.next(convertToParamMap(params));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actions\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approvalStatus\n                            \n                            \n                                approveAction\n                            \n                            \n                                disapproveAction\n                            \n                            \n                                doFilter\n                            \n                            \n                                downloadCsv\n                            \n                            \n                                expandCollapse\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/admin/admin.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approvalStatus\n                        \n                        \n                    \n                \n            \n            \n                \napprovalStatus(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approveAction\n                        \n                        \n                    \n                \n            \n            \n                \napproveAction(action: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disapproveAction\n                        \n                        \n                    \n                \n            \n            \n                \ndisapproveAction(action: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndoFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadCsv\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expandCollapse\n                        \n                        \n                    \n                \n            \n            \n                \nexpandCollapse(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/admin/admin.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Action\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['expand', 'user', 'role', 'action', 'status', 'approve']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/admin/admin.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { LoggingService, UserService } from '@app/_services';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { first } from 'rxjs/operators';\nimport { exportCsv } from '@app/_helpers';\nimport { Action } from '../../_models';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: 0, visibility: 'hidden' })),\n      state('expanded', style({ height: '*', visibility: 'visible' })),\n      transition('expanded  collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class AdminComponent implements OnInit {\n  dataSource: MatTableDataSource;\n  displayedColumns: Array = ['expand', 'user', 'role', 'action', 'status', 'approve'];\n  action: Action;\n  actions: Array;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private userService: UserService, private loggingService: LoggingService) {}\n\n  async ngOnInit(): Promise {\n    await this.userService.init();\n    this.userService.getActions();\n    this.userService.actionsSubject.subscribe((actions) => {\n      this.dataSource = new MatTableDataSource(actions);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.actions = actions;\n    });\n  }\n\n  doFilter(value: string): void {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  approvalStatus(status: boolean): string {\n    return status ? 'Approved' : 'Unapproved';\n  }\n\n  approveAction(action: any): void {\n    if (!confirm('Approve action?')) {\n      return;\n    }\n    this.userService\n      .approveAction(action.id)\n      .pipe(first())\n      .subscribe((res) => this.loggingService.sendInfoLevelMessage(res));\n    this.userService.getActions();\n  }\n\n  disapproveAction(action: any): void {\n    if (!confirm('Disapprove action?')) {\n      return;\n    }\n    this.userService\n      .revokeAction(action.id)\n      .pipe(first())\n      .subscribe((res) => this.loggingService.sendInfoLevelMessage(res));\n    this.userService.getActions();\n  }\n\n  expandCollapse(row): void {\n    row.isExpanded = !row.isExpanded;\n  }\n\n  downloadCsv(): void {\n    exportCsv(this.actions, 'actions');\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Admin\n        \n      \n      \n        \n          \n            Actions\n            \n              EXPORT\n            \n          \n        \n        \n          \n             Filter \n            \n            search\n          \n\n          \n            \n            \n               Expand \n              \n                 + \n                 - \n              \n            \n\n            \n               NAME \n               {{ action.user }} \n            \n\n            \n               ROLE \n               {{ action.role }} \n            \n\n            \n               ACTION \n               {{ action.action }} \n            \n\n            \n               STATUS \n              \n                \n                  {{ approvalStatus(action.approval) }}\n                \n                \n                  {{ approvalStatus(action.approval) }}\n                \n              \n            \n\n            \n               APPROVE \n              \n                \n                  Approve\n                \n                \n                  Disapprove\n                \n              \n            \n\n            \n            \n              \n                \n                  Staff Name: {{ action.user }}\n                  Role: {{ action.role }}\n                  Action Details: {{ action.action }}\n                  Approval Status: {{ action.approval }}\n                \n              \n            \n\n            \n            \n            \n          \n\n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./admin.component.scss\n                \n                button {\n  width: 6rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Admin                                                  Actions                          EXPORT                                                             Filter                         search                                                           Expand                                +                  -                                                      NAME                {{ action.user }}                                        ROLE                {{ action.role }}                                        ACTION                {{ action.action }}                                        STATUS                                                 {{ approvalStatus(action.approval) }}                                                  {{ approvalStatus(action.approval) }}                                                                     APPROVE                                                 Approve                                                  Disapprove                                                                                                                  Staff Name: {{ action.user }}                  Role: {{ action.role }}                  Action Details: {{ action.action }}                  Approval Status: {{ action.approval }}                                                                                                                                '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AdminModule_declarations\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from '@pages/admin/admin-routing.module';\nimport { AdminComponent } from '@pages/admin/admin.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [AdminComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    SharedModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatRippleModule,\n  ],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminComponent } from '@pages/admin/admin.component';\n\nconst routes: Routes = [{ path: '', component: AdminComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mediaQuery\n                            \n                            \n                                readyState\n                            \n                            \n                                readyStateTarget\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:cic_convert\n                            \n                            \n                                window:cic_transfer\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, transactionService: TransactionService, loggingService: LoggingService, errorDialogService: ErrorDialogService, swUpdate: SwUpdate)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDialogService\n                                                  \n                                                        \n                                                                        ErrorDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:cic_convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:cic_convert(event: CustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            window:cic_transfer\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:cic_transfer(event: CustomEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:82\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onResize\n                        \n                        \n                    \n                \n            \n            \n                \nonResize(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mediaQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediaQueryList\n\n                        \n                    \n                    \n                        \n                            Default value : window.matchMedia('(max-width: 768px)')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readyState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readyStateTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'CICADA'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostListener, OnInit } from '@angular/core';\nimport {\n  AuthService,\n  ErrorDialogService,\n  LoggingService,\n  TransactionService,\n} from '@app/_services';\nimport { catchError } from 'rxjs/operators';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  title = 'CICADA';\n  readyStateTarget: number = 3;\n  readyState: number = 0;\n  mediaQuery: MediaQueryList = window.matchMedia('(max-width: 768px)');\n\n  constructor(\n    private authService: AuthService,\n    private transactionService: TransactionService,\n    private loggingService: LoggingService,\n    private errorDialogService: ErrorDialogService,\n    private swUpdate: SwUpdate\n  ) {\n    this.mediaQuery.addEventListener('change', this.onResize);\n    this.onResize(this.mediaQuery);\n  }\n\n  async ngOnInit(): Promise {\n    await this.authService.init();\n    await this.transactionService.init();\n    try {\n      const publicKeys = await this.authService.getPublicKeys();\n      await this.authService.mutableKeyStore.importPublicKey(publicKeys);\n      this.authService.getTrustedUsers();\n    } catch (error) {\n      this.errorDialogService.openDialog({\n        message: 'Trusted keys endpoint cannot be reached. Please try again later.',\n      });\n      // TODO do something to halt user progress...show a sad cicada page 🦗?\n    }\n    if (!this.swUpdate.isEnabled) {\n      this.swUpdate.available.subscribe(() => {\n        if (confirm('New Version available. Load New Version?')) {\n          window.location.reload();\n        }\n      });\n    }\n  }\n\n  // Load resize\n  onResize(e): void {\n    const sidebar: HTMLElement = document.getElementById('sidebar');\n    const content: HTMLElement = document.getElementById('content');\n    const sidebarCollapse: HTMLElement = document.getElementById('sidebarCollapse');\n    if (sidebarCollapse?.classList.contains('active')) {\n      sidebarCollapse?.classList.remove('active');\n    }\n    if (e.matches) {\n      if (!sidebar?.classList.contains('active')) {\n        sidebar?.classList.add('active');\n      }\n      if (!content?.classList.contains('active')) {\n        content?.classList.add('active');\n      }\n    } else {\n      if (sidebar?.classList.contains('active')) {\n        sidebar?.classList.remove('active');\n      }\n      if (content?.classList.contains('active')) {\n        content?.classList.remove('active');\n      }\n    }\n  }\n\n  @HostListener('window:cic_transfer', ['$event'])\n  async cicTransfer(event: CustomEvent): Promise {\n    const transaction: any = event.detail.tx;\n    await this.transactionService.setTransaction(transaction, 100);\n  }\n\n  @HostListener('window:cic_convert', ['$event'])\n  async cicConvert(event: CustomEvent): Promise {\n    const conversion: any = event.detail.tx;\n    await this.transactionService.setConversion(conversion, 100);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nGlobalErrorHandler\n\nGlobalErrorHandler\n\nAppModule -->\n\nGlobalErrorHandler->AppModule\n\n\n\n\n\nHttpConfigInterceptor\n\nHttpConfigInterceptor\n\nAppModule -->\n\nHttpConfigInterceptor->AppModule\n\n\n\n\n\nLoggingInterceptor\n\nLoggingInterceptor\n\nAppModule -->\n\nLoggingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            GlobalErrorHandler\n                        \n                        \n                            HttpConfigInterceptor\n                        \n                        \n                            LoggingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { GlobalErrorHandler, MockBackendProvider } from '@app/_helpers';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { AuthGuard } from '@app/_guards';\nimport { LoggerModule } from 'ngx-logger';\nimport { environment } from '@src/environments/environment';\nimport { ErrorInterceptor, HttpConfigInterceptor, LoggingInterceptor } from '@app/_interceptors';\nimport { MutablePgpKeyStore } from '@app/_pgp';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    SharedModule,\n    MatTableModule,\n    LoggerModule.forRoot({\n      level: environment.logLevel,\n      serverLogLevel: environment.serverLogLevel,\n      serverLoggingUrl: `${environment.loggingUrl}/api/logs/`,\n      disableConsoleLogging: false,\n    }),\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n  ],\n  providers: [\n    AuthGuard,\n    MutablePgpKeyStore,\n    MockBackendProvider,\n    GlobalErrorHandler,\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\n    { provide: HTTP_INTERCEPTORS, useClass: HttpConfigInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AuthGuard } from '@app/_guards';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => \"import('@app/auth/auth.module').then((m) => m.AuthModule)\" },\n  {\n    path: '',\n    loadChildren: () => \"import('@pages/pages.module').then((m) => m.PagesModule)\",\n    canActivate: [AuthGuard],\n  },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                keyForm\n                            \n                            \n                                loading\n                            \n                            \n                                matcher\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                switchWindows\n                            \n                            \n                                toggleDisplay\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    keyFormStub\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, formBuilder: FormBuilder, router: Router, errorDialogService: ErrorDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDialogService\n                                                  \n                                                        \n                                                                        ErrorDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchWindows\n                        \n                        \n                    \n                \n            \n            \n                \nswitchWindows()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleDisplay\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleDisplay(element: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomErrorStateMatcher\n\n                        \n                    \n                    \n                        \n                            Default value : new CustomErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        keyFormStub\n                    \n                \n\n                \n                    \n                        getkeyFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/auth.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomErrorStateMatcher } from '@app/_helpers';\nimport { AuthService } from '@app/_services';\nimport { ErrorDialogService } from '@app/_services/error-dialog.service';\nimport { LoggingService } from '@app/_services/logging.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent implements OnInit {\n  keyForm: FormGroup;\n  submitted: boolean = false;\n  loading: boolean = false;\n  matcher: CustomErrorStateMatcher = new CustomErrorStateMatcher();\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private errorDialogService: ErrorDialogService\n  ) {}\n\n  async ngOnInit(): Promise {\n    this.keyForm = this.formBuilder.group({\n      key: ['', Validators.required],\n    });\n    if (this.authService.getPrivateKey()) {\n      this.authService.loginView();\n    }\n  }\n\n  get keyFormStub(): any {\n    return this.keyForm.controls;\n  }\n\n  async onSubmit(): Promise {\n    this.submitted = true;\n\n    if (this.keyForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    await this.authService.setKey(this.keyFormStub.key.value);\n    this.loading = false;\n  }\n\n  async login(): Promise {\n    try {\n      const loginResult = await this.authService.login();\n      if (loginResult) {\n        this.router.navigate(['/home']);\n      }\n    } catch (HttpError) {\n      this.errorDialogService.openDialog({\n        message: HttpError.message,\n      });\n    }\n  }\n\n  switchWindows(): void {\n    const divOne: HTMLElement = document.getElementById('one');\n    const divTwo: HTMLElement = document.getElementById('two');\n    this.toggleDisplay(divOne);\n    this.toggleDisplay(divTwo);\n  }\n\n  toggleDisplay(element: any): void {\n    const style: string = window.getComputedStyle(element).display;\n    if (style === 'block') {\n      element.style.display = 'none';\n    } else {\n      element.style.display = 'block';\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            CICADA\n          \n        \n        \n          \n            Add Private Key\n          \n\n          \n            \n              Private Key\n              \n              \n                Private Key is required.\n              \n            \n\n            \n              \n              Add Key\n            \n          \n        \n        \n          \n            \n            \n              Login\n            \n          \n\n          \n            \n              \n                Change private key?\n                Enter private key\n              \n            \n            \n          \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          CICADA                                                Add Private Key                                              Private Key                                            Private Key is required.                                                                  Add Key                                                                                      Login                                                                          Change private key?                Enter private key                                                                              '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Auth guard implementation.\nDictates access to routes depending on the authentication status.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/auth.guard.ts:21\n                            \n                        \n\n                \n                    \n                            Instantiates the auth guard class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides navigation among views and URL manipulation capabilities.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/auth.guard.ts:38\n                \n            \n\n\n            \n                \n                    Returns whether navigation to a specific route is acceptable.\nChecks if the user has uploaded a private key.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nContains the information about a route associated with a component loaded in an outlet at a particular moment in time.\nActivatedRouteSnapshot can also be used to traverse the router state tree.\n\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRepresents the state of the router at a moment in time.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        true - If there is an active private key in the user's localStorage.\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\n\n// Third party imports\nimport { Observable } from 'rxjs';\n\n/**\n * Auth guard implementation.\n * Dictates access to routes depending on the authentication status.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * Instantiates the auth guard class.\n   *\n   * @param router - A service that provides navigation among views and URL manipulation capabilities.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Returns whether navigation to a specific route is acceptable.\n   * Checks if the user has uploaded a private key.\n   *\n   * @param route - Contains the information about a route associated with a component loaded in an outlet at a particular moment in time.\n   * ActivatedRouteSnapshot can also be used to traverse the router state tree.\n   * @param state - Represents the state of the router at a moment in time.\n   * @returns true - If there is an active private key in the user's localStorage.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    if (localStorage.getItem(btoa('CICADA_PRIVATE_KEY'))) {\n      return true;\n    }\n    this.router.navigate(['/auth']);\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nPasswordToggleDirective\n\nPasswordToggleDirective\n\nAuthModule -->\n\nPasswordToggleDirective->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            PasswordToggleDirective\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from '@app/auth/auth-routing.module';\nimport { AuthComponent } from '@app/auth/auth.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PasswordToggleDirective } from '@app/auth/_directives/password-toggle.directive';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [AuthComponent, PasswordToggleDirective],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n    MatRippleModule,\n    SharedModule,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from '@app/auth/auth.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutableKeyStore\n                            \n                            \n                                trustedUsers\n                            \n                            \n                                    Private\n                                trustedUsersList\n                            \n                            \n                                trustedUsersSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrustedUser\n                            \n                            \n                                getChallenge\n                            \n                            \n                                getPrivateKey\n                            \n                            \n                                getPrivateKeyInfo\n                            \n                            \n                                    Async\n                                getPublicKeys\n                            \n                            \n                                getSessionToken\n                            \n                            \n                                getTrustedUsers\n                            \n                            \n                                getWithToken\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                loginView\n                            \n                            \n                                logout\n                            \n                            \n                                sendSignedChallenge\n                            \n                            \n                                    Async\n                                setKey\n                            \n                            \n                                setSessionToken\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, loggingService: LoggingService, errorDialogService: ErrorDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDialogService\n                                                  \n                                                        \n                                                                        ErrorDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTrustedUser\n                        \n                        \n                    \n                \n            \n            \n                \naddTrustedUser(user: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getChallenge\n                        \n                        \n                    \n                \n            \n            \n                \ngetChallenge()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrivateKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrivateKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrivateKeyInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrivateKeyInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPublicKeys\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPublicKeys()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSessionToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetSessionToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrustedUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrustedUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWithToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetWithToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginView\n                        \n                        \n                    \n                \n            \n            \n                \nloginView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendSignedChallenge\n                        \n                        \n                    \n                \n            \n            \n                \nsendSignedChallenge(hobaResponseEncoded: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hobaResponseEncoded\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setKey(privateKeyArmored)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    privateKeyArmored\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nPrivate key.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSessionToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetSessionToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \nsetState(s)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mutableKeyStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MutableKeyStore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trustedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            trustedUsersList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject>\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject>(\n    this.trustedUsers\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trustedUsersSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.trustedUsersList.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/auth.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hobaParseChallengeHeader } from '@src/assets/js/hoba.js';\nimport { signChallenge } from '@src/assets/js/hoba-pgp.js';\nimport { environment } from '@src/environments/environment';\nimport { LoggingService } from '@app/_services/logging.service';\nimport { MutableKeyStore } from '@app/_pgp';\nimport { ErrorDialogService } from '@app/_services/error-dialog.service';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpError, rejectBody } from '@app/_helpers/global-error-handler';\nimport { Staff } from '@app/_models';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeystoreService } from '@app/_services/keystore.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  mutableKeyStore: MutableKeyStore;\n  trustedUsers: Array = [];\n  private trustedUsersList: BehaviorSubject> = new BehaviorSubject>(\n    this.trustedUsers\n  );\n  trustedUsersSubject: Observable> = this.trustedUsersList.asObservable();\n\n  constructor(\n    private httpClient: HttpClient,\n    private loggingService: LoggingService,\n    private errorDialogService: ErrorDialogService\n  ) {}\n\n  async init(): Promise {\n    this.mutableKeyStore = await KeystoreService.getKeystore();\n    if (localStorage.getItem(btoa('CICADA_PRIVATE_KEY'))) {\n      await this.mutableKeyStore.importPrivateKey(localStorage.getItem(btoa('CICADA_PRIVATE_KEY')));\n    }\n  }\n\n  getSessionToken(): string {\n    return sessionStorage.getItem(btoa('CICADA_SESSION_TOKEN'));\n  }\n\n  setSessionToken(token): void {\n    sessionStorage.setItem(btoa('CICADA_SESSION_TOKEN'), token);\n  }\n\n  setState(s): void {\n    document.getElementById('state').innerHTML = s;\n  }\n\n  getWithToken(): Promise {\n    const headers = {\n      Authorization: 'Bearer ' + this.getSessionToken,\n      'Content-Type': 'application/json;charset=utf-8',\n      'x-cic-automerge': 'none',\n    };\n    const options = {\n      headers,\n    };\n    return fetch(environment.cicMetaUrl, options).then((response) => {\n      if (!response.ok) {\n        this.loggingService.sendErrorLevelMessage('failed to get with auth token.', this, {\n          error: '',\n        });\n\n        return false;\n      }\n      return true;\n    });\n  }\n\n  // TODO rename to send signed challenge and set session. Also separate these responsibilities\n  sendSignedChallenge(hobaResponseEncoded: any): Promise {\n    const headers = {\n      Authorization: 'HOBA ' + hobaResponseEncoded,\n      'Content-Type': 'application/json;charset=utf-8',\n      'x-cic-automerge': 'none',\n    };\n    const options = {\n      headers,\n    };\n    return fetch(environment.cicMetaUrl, options);\n  }\n\n  getChallenge(): Promise {\n    return fetch(environment.cicMetaUrl).then((response) => {\n      if (response.status === 401) {\n        const authHeader: string = response.headers.get('WWW-Authenticate');\n        return hobaParseChallengeHeader(authHeader);\n      }\n    });\n  }\n\n  async login(): Promise {\n    if (this.getSessionToken()) {\n      sessionStorage.removeItem(btoa('CICADA_SESSION_TOKEN'));\n    } else {\n      const o = await this.getChallenge();\n\n      const r = await signChallenge(\n        o.challenge,\n        o.realm,\n        environment.cicMetaUrl,\n        this.mutableKeyStore\n      );\n\n      const tokenResponse = await this.sendSignedChallenge(r).then((response) => {\n        const token = response.headers.get('Token');\n        if (token) {\n          return token;\n        }\n        if (response.status === 401) {\n          throw new HttpError('You are not authorized to use this system', response.status);\n        }\n        if (!response.ok) {\n          throw new HttpError('Unknown error from authentication server', response.status);\n        }\n      });\n\n      if (tokenResponse) {\n        this.setSessionToken(tokenResponse);\n        this.setState('Click button to log in');\n        return true;\n      }\n      return false;\n    }\n  }\n\n  loginView(): void {\n    document.getElementById('one').style.display = 'none';\n    document.getElementById('two').style.display = 'block';\n    this.setState('Click button to log in with PGP key ' + this.mutableKeyStore.getPrivateKeyId());\n  }\n\n  /**\n   * @throws\n   * @param privateKeyArmored - Private key.\n   */\n  async setKey(privateKeyArmored): Promise {\n    try {\n      const isValidKeyCheck = await this.mutableKeyStore.isValidKey(privateKeyArmored);\n      if (!isValidKeyCheck) {\n        throw Error('The private key is invalid');\n      }\n      // TODO leaving this out for now.\n      // const isEncryptedKeyCheck = await this.mutableKeyStore.isEncryptedPrivateKey(privateKeyArmored);\n      // if (!isEncryptedKeyCheck) {\n      //   throw Error('The private key doesn\\'t have a password!');\n      // }\n      const key = await this.mutableKeyStore.importPrivateKey(privateKeyArmored);\n      localStorage.setItem(btoa('CICADA_PRIVATE_KEY'), privateKeyArmored);\n    } catch (err) {\n      this.loggingService.sendErrorLevelMessage(\n        `Failed to set key: ${err.message || err.statusText}`,\n        this,\n        { error: err }\n      );\n      this.errorDialogService.openDialog({\n        message: `Failed to set key: ${err.message || err.statusText}`,\n      });\n      return false;\n    }\n    this.loginView();\n    return true;\n  }\n\n  logout(): void {\n    sessionStorage.removeItem(btoa('CICADA_SESSION_TOKEN'));\n    localStorage.removeItem(btoa('CICADA_PRIVATE_KEY'));\n    window.location.reload();\n  }\n\n  addTrustedUser(user: Staff): void {\n    const savedIndex = this.trustedUsers.findIndex((staff) => staff.userid === user.userid);\n    if (savedIndex === 0) {\n      return;\n    }\n    if (savedIndex > 0) {\n      this.trustedUsers.splice(savedIndex, 1);\n    }\n    this.trustedUsers.unshift(user);\n    this.trustedUsersList.next(this.trustedUsers);\n  }\n\n  getTrustedUsers(): void {\n    this.mutableKeyStore.getPublicKeys().forEach((key) => {\n      this.addTrustedUser(key.users[0].userId);\n    });\n  }\n\n  async getPublicKeys(): Promise {\n    return new Promise((resolve, reject) => {\n      fetch(environment.publicKeysUrl).then((res) => {\n        if (!res.ok) {\n          // TODO does angular recommend an error interface?\n          return reject(rejectBody(res));\n        }\n        return resolve(res.text());\n      });\n    });\n  }\n\n  getPrivateKey(): any {\n    return this.mutableKeyStore.getPrivateKey();\n  }\n\n  getPrivateKeyInfo(): any {\n    return this.getPrivateKey().users[0].userId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockSyncService.html":{"url":"injectables/BlockSyncService.html","title":"injectable - BlockSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlockSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/block-sync.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                readyState\n                            \n                            \n                                readyStateTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                blockSync\n                            \n                            \n                                fetcher\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                newEvent\n                            \n                            \n                                readyStateProcessor\n                            \n                            \n                                    Async\n                                scan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionService: TransactionService, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/block-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            blockSync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    blockSync(address: string, offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        100\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetcher\n                        \n                        \n                    \n                \n            \n            \n                \nfetcher(settings: Settings, transactionsInfo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    transactionsInfo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newEvent\n                        \n                        \n                    \n                \n            \n            \n                \nnewEvent(tx: any, eventType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    eventType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readyStateProcessor\n                        \n                        \n                    \n                \n            \n            \n                \nreadyStateProcessor(settings: Settings, bit: number, address: string, offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            scan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scan(settings: Settings, lo: number, hi: number, bloomBlockBytes: Uint8Array, bloomBlocktxBytes: Uint8Array, bloomRounds: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/block-sync.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bloomBlockBytes\n                                    \n                                            Uint8Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bloomBlocktxBytes\n                                    \n                                            Uint8Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bloomRounds\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readyState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/block-sync.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            readyStateTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/block-sync.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Settings } from '@app/_models';\nimport { TransactionHelper } from '@cicnet/cic-client';\nimport { first } from 'rxjs/operators';\nimport { TransactionService } from '@app/_services/transaction.service';\nimport { environment } from '@src/environments/environment';\nimport { LoggingService } from '@app/_services/logging.service';\nimport { RegistryService } from '@app/_services/registry.service';\nimport { Web3Service } from '@app/_services/web3.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BlockSyncService {\n  readyStateTarget: number = 2;\n  readyState: number = 0;\n\n  constructor(\n    private transactionService: TransactionService,\n    private loggingService: LoggingService\n  ) {}\n\n  async init(): Promise {\n    await this.transactionService.init();\n  }\n\n  async blockSync(address: string = null, offset: number = 0, limit: number = 100): Promise {\n    this.transactionService.resetTransactionsList();\n    const settings: Settings = new Settings(this.scan);\n    const readyStateElements: { network: number } = { network: 2 };\n    settings.w3.provider = environment.web3Provider;\n    settings.w3.engine = Web3Service.getInstance();\n    settings.registry = await RegistryService.getRegistry();\n    settings.txHelper = new TransactionHelper(settings.w3.engine, settings.registry);\n\n    settings.txHelper.ontransfer = async (transaction: any): Promise => {\n      window.dispatchEvent(this.newEvent(transaction, 'cic_transfer'));\n    };\n    settings.txHelper.onconversion = async (transaction: any): Promise => {\n      window.dispatchEvent(this.newEvent(transaction, 'cic_convert'));\n    };\n    this.readyStateProcessor(settings, readyStateElements.network, address, offset, limit);\n  }\n\n  readyStateProcessor(\n    settings: Settings,\n    bit: number,\n    address: string,\n    offset: number,\n    limit: number\n  ): void {\n    // tslint:disable-next-line:no-bitwise\n    this.readyState |= bit;\n    if (this.readyStateTarget === this.readyState && this.readyStateTarget) {\n      const wHeadSync: Worker = new Worker('./../assets/js/block-sync/head.js');\n      wHeadSync.onmessage = (m) => {\n        settings.txHelper.processReceipt(m.data);\n      };\n      wHeadSync.postMessage({\n        w3_provider: settings.w3.provider,\n      });\n      if (address === null) {\n        this.transactionService\n          .getAllTransactions(offset, limit)\n          .pipe(first())\n          .subscribe((res) => {\n            this.fetcher(settings, res);\n          });\n      } else {\n        this.transactionService\n          .getAddressTransactions(address, offset, limit)\n          .pipe(first())\n          .subscribe((res) => {\n            this.fetcher(settings, res);\n          });\n      }\n    }\n  }\n\n  newEvent(tx: any, eventType: string): any {\n    return new CustomEvent(eventType, {\n      detail: {\n        tx,\n      },\n    });\n  }\n\n  async scan(\n    settings: Settings,\n    lo: number,\n    hi: number,\n    bloomBlockBytes: Uint8Array,\n    bloomBlocktxBytes: Uint8Array,\n    bloomRounds: any\n  ): Promise {\n    const w: Worker = new Worker('./../assets/js/block-sync/ondemand.js');\n    w.onmessage = (m) => {\n      settings.txHelper.processReceipt(m.data);\n    };\n    w.postMessage({\n      w3_provider: settings.w3.provider,\n      lo,\n      hi,\n      filters: [bloomBlockBytes, bloomBlocktxBytes],\n      filter_rounds: bloomRounds,\n    });\n  }\n\n  fetcher(settings: Settings, transactionsInfo: any): void {\n    const blockFilterBinstr: string = window.atob(transactionsInfo.block_filter);\n    const bOne: Uint8Array = new Uint8Array(blockFilterBinstr.length);\n    bOne.map((e, i, v) => (v[i] = blockFilterBinstr.charCodeAt(i)));\n\n    const blocktxFilterBinstr: string = window.atob(transactionsInfo.blocktx_filter);\n    const bTwo: Uint8Array = new Uint8Array(blocktxFilterBinstr.length);\n    bTwo.map((e, i, v) => (v[i] = blocktxFilterBinstr.charCodeAt(i)));\n\n    settings.scanFilter(\n      settings,\n      transactionsInfo.low,\n      transactionsInfo.high,\n      bOne,\n      bTwo,\n      transactionsInfo.filter_rounds\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Conversion.html":{"url":"interfaces/Conversion.html","title":"interface - Conversion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Conversion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/transaction.ts\n        \n\n            \n                Description\n            \n            \n                Conversion object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        destinationToken\n                                \n                                \n                                        fromValue\n                                \n                                \n                                        sourceToken\n                                \n                                \n                                        toValue\n                                \n                                \n                                        trader\n                                \n                                \n                                        tx\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinationToken\n                                    \n                                \n                                \n                                    \n                                        destinationToken:         TxToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TxToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Final transaction token information. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromValue\n                                    \n                                \n                                \n                                    \n                                        fromValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initial transaction token amount. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceToken\n                                    \n                                \n                                \n                                    \n                                        sourceToken:         TxToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TxToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Initial transaction token information. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toValue\n                                    \n                                \n                                \n                                    \n                                        toValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Final transaction token amount. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trader\n                                    \n                                \n                                \n                                    \n                                        trader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Address of the initiator of the conversion. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx\n                                    \n                                \n                                \n                                    \n                                        tx:         Tx\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tx\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Conversion mining information. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AccountDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account information of the initiator of the conversion. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccountDetails } from '@app/_models/account';\n\n/** Conversion object interface */\ninterface Conversion {\n  /** Final transaction token information. */\n  destinationToken: TxToken;\n  /** Initial transaction token amount. */\n  fromValue: number;\n  /** Initial transaction token information. */\n  sourceToken: TxToken;\n  /** Final transaction token amount. */\n  toValue: number;\n  /** Address of the initiator of the conversion. */\n  trader: string;\n  /** Conversion mining information. */\n  tx: Tx;\n  /** Account information of the initiator of the conversion. */\n  user: AccountDetails;\n}\n\n/** Transaction object interface */\ninterface Transaction {\n  /** Address of the transaction sender. */\n  from: string;\n  /** Account information of the transaction recipient. */\n  recipient: AccountDetails;\n  /** Account information of the transaction sender. */\n  sender: AccountDetails;\n  /** Address of the transaction recipient. */\n  to: string;\n  /** Transaction token information. */\n  token: TxToken;\n  /** Transaction mining information. */\n  tx: Tx;\n  /** Type of transaction. */\n  type?: string;\n  /** Amount of tokens transacted. */\n  value: number;\n}\n\n/** Transaction data interface */\ninterface Tx {\n  /** Transaction block number. */\n  block: number;\n  /** Transaction mining status. */\n  success: boolean;\n  /** Time transaction was mined. */\n  timestamp: number;\n  /** Hash generated by transaction. */\n  txHash: string;\n  /** Index of transaction in block. */\n  txIndex: number;\n}\n\n/** Transaction token object interface */\ninterface TxToken {\n  /** Address of the deployed token contract. */\n  address: string;\n  /** Name of the token. */\n  name: string;\n  /** The unique token symbol. */\n  symbol: string;\n}\n\n/** @exports */\nexport { Conversion, Transaction, Tx, TxToken };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateAccountComponent.html":{"url":"components/CreateAccountComponent.html","title":"component - CreateAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/accounts/create-account/create-account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-account\n            \n\n            \n                styleUrls\n                ./create-account.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountTypes\n                            \n                            \n                                areaNames\n                            \n                            \n                                categories\n                            \n                            \n                                createForm\n                            \n                            \n                                genders\n                            \n                            \n                                matcher\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createFormStub\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, locationService: LocationService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/accounts/create-account/create-account.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationService\n                                                  \n                                                        \n                                                                        LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomErrorStateMatcher\n\n                        \n                    \n                    \n                        \n                            Default value : new CustomErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        createFormStub\n                    \n                \n\n                \n                    \n                        getcreateFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/accounts/create-account/create-account.component.ts:60\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LocationService, UserService } from '@app/_services';\nimport { CustomErrorStateMatcher } from '@app/_helpers';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateAccountComponent implements OnInit {\n  createForm: FormGroup;\n  matcher: CustomErrorStateMatcher = new CustomErrorStateMatcher();\n  submitted: boolean = false;\n  categories: Array;\n  areaNames: Array;\n  accountTypes: Array;\n  genders: Array;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private locationService: LocationService,\n    private userService: UserService\n  ) {}\n\n  async ngOnInit(): Promise {\n    await this.userService.init();\n    this.createForm = this.formBuilder.group({\n      accountType: ['', Validators.required],\n      idNumber: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      givenName: ['', Validators.required],\n      surname: ['', Validators.required],\n      directoryEntry: ['', Validators.required],\n      location: ['', Validators.required],\n      gender: ['', Validators.required],\n      referrer: ['', Validators.required],\n      businessCategory: ['', Validators.required],\n    });\n    this.userService.getCategories();\n    this.userService.categoriesSubject.subscribe((res) => {\n      this.categories = Object.keys(res);\n    });\n    this.locationService.getAreaNames();\n    this.locationService.areaNamesSubject.subscribe((res) => {\n      this.areaNames = Object.keys(res);\n    });\n    this.userService\n      .getAccountTypes()\n      .pipe(first())\n      .subscribe((res) => (this.accountTypes = res));\n    this.userService\n      .getGenders()\n      .pipe(first())\n      .subscribe((res) => (this.genders = res));\n  }\n\n  get createFormStub(): any {\n    return this.createForm.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    if (this.createForm.invalid || !confirm('Create account?')) {\n      return;\n    }\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Accounts\n          Create Account\n        \n      \n      \n         CREATE A USER ACCOUNT \n        \n          \n            \n              \n                Account Type: \n                \n                  \n                    {{ accountType | uppercase }}\n                  \n                \n                Account type is required. \n            \n\n            \n              \n                ID Number: \n                \n                ID Number is required.\n              \n            \n\n            \n              \n                Phone Number: \n                \n                Phone Number is required. \n            \n\n            \n              \n                Given Name(s):* \n                \n                Given Names are required. \n            \n\n            \n              \n                Family/Surname: \n                \n                Surname is required. \n            \n\n            \n              \n                Directory Entry: \n                \n                Directory Entry is required. \n            \n\n            \n              \n                Location: \n                \n                  \n                    {{ area | uppercase }}\n                  \n                \n                Location is required. \n            \n\n            \n              \n                Gender: \n                \n                  \n                    {{ gender | uppercase }}\n                  \n                \n                Gender is required. \n            \n\n            \n              \n                Referrer Phone Number: \n                \n                Referrer is required. \n            \n\n            \n              \n                Business Category: \n                \n                  \n                    {{ category | titlecase }}\n                  \n                \n                Business Category is required.\n              \n            \n\n            \n              Submit\n            \n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./create-account.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Accounts          Create Account                             CREATE A USER ACCOUNT                                                             Account Type:                                                       {{ accountType | uppercase }}                                                  Account type is required.                                                       ID Number:                                 ID Number is required.                                                                    Phone Number:                                 Phone Number is required.                                                       Given Name(s):*                                 Given Names are required.                                                       Family/Surname:                                 Surname is required.                                                       Directory Entry:                                 Directory Entry is required.                                                       Location:                                                       {{ area | uppercase }}                                                  Location is required.                                                       Gender:                                                       {{ gender | uppercase }}                                                  Gender is required.                                                       Referrer Phone Number:                                 Referrer is required.                                                       Business Category:                                                       {{ category | titlecase }}                                                  Business Category is required.                                                    Submit                                                    '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomErrorStateMatcher.html":{"url":"classes/CustomErrorStateMatcher.html","title":"class - CustomErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/custom-error-state-matcher.ts\n        \n\n            \n                Description\n            \n            \n                Custom provider that defines how form controls behave with regards to displaying error messages.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/custom-error-state-matcher.ts:17\n                \n            \n\n\n            \n                \n                    Checks whether an invalid input has been made and an error should be made.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTracks the value and validation status of an individual form control.\n\n\n                                    \n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nBinding of an existing FormGroup to a DOM element.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true - If an invalid input has been made to the form control.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorStateMatcher } from '@angular/material/core';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\n/**\n * Custom provider that defines how form controls behave with regards to displaying error messages.\n *\n */\nexport class CustomErrorStateMatcher implements ErrorStateMatcher {\n  /**\n   * Checks whether an invalid input has been made and an error should be made.\n   *\n   * @param control - Tracks the value and validation status of an individual form control.\n   * @param form - Binding of an existing FormGroup to a DOM element.\n   * @returns true - If an invalid input has been made to the form control.\n   */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted: boolean = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidator.html":{"url":"classes/CustomValidator.html","title":"class - CustomValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/custom.validator.ts\n        \n\n            \n                Description\n            \n            \n                Provides methods to perform custom validation to form inputs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatchValidator\n                            \n                            \n                                    Static\n                                patternValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            passwordMatchValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordMatchValidator(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/custom.validator.ts:13\n                \n            \n\n\n            \n                \n                    Sets errors to the confirm password input field if it does not match with the value in the password input field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe control object of the form being validated.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            patternValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patternValidator(regex: RegExp, error: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/custom.validator.ts:28\n                \n            \n\n\n            \n                \n                    Sets errors to a form field if it does not match with the regular expression given.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    regex\n                                    \n                                            RegExp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe regular expression to match with the form field.\n\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDefines the map of errors to return from failed validation checks.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                    \n                        The map of errors returned from failed validation checks.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, ValidationErrors } from '@angular/forms';\n\n/**\n * Provides methods to perform custom validation to form inputs.\n */\nexport class CustomValidator {\n  /**\n   * Sets errors to the confirm password input field if it does not match with the value in the password input field.\n   *\n   * @param control - The control object of the form being validated.\n   */\n  static passwordMatchValidator(control: AbstractControl): void {\n    const password: string = control.get('password').value;\n    const confirmPassword: string = control.get('confirmPassword').value;\n    if (password !== confirmPassword) {\n      control.get('confirmPassword').setErrors({ NoPasswordMatch: true });\n    }\n  }\n\n  /**\n   * Sets errors to a form field if it does not match with the regular expression given.\n   *\n   * @param regex - The regular expression to match with the form field.\n   * @param error - Defines the map of errors to return from failed validation checks.\n   * @returns The map of errors returned from failed validation checks.\n   */\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidationErrors | null {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n\n      const valid: boolean = regex.test(control.value);\n      return valid ? null : error;\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogComponent.html":{"url":"components/ErrorDialogComponent.html","title":"component - ErrorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/error-dialog/error-dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog\n            \n\n            \n                styleUrls\n                ./error-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/error-dialog/error-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/error-dialog/error-dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ErrorDialogComponent {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n}\n\n    \n\n    \n        \n  \n    Message: {{ data.message }}\n    Status: {{ data?.status }}\n  \n\n\n    \n\n    \n                \n                    ./error-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Message: {{ data.message }}    Status: {{ data?.status }}  '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorDialogService.html":{"url":"injectables/ErrorDialogService.html","title":"injectable - ErrorDialogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorDialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/error-dialog.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                isDialogOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/error-dialog.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/error-dialog.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/error-dialog.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDialogOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/error-dialog.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ErrorDialogComponent } from '@app/shared/error-dialog/error-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorDialogService {\n  public isDialogOpen: boolean = false;\n\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(data): any {\n    if (this.isDialogOpen) {\n      return false;\n    }\n    this.isDialogOpen = true;\n    const dialogRef: MatDialogRef = this.dialog.open(ErrorDialogComponent, {\n      width: '300px',\n      data,\n    });\n\n    dialogRef.afterClosed().subscribe(() => (this.isDialogOpen = false));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptors/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts and handles errors from outgoing HTTP request. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorDialogService: ErrorDialogService, loggingService: LoggingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_interceptors/error.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            Initialization of the error interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        errorDialogService\n                                                  \n                                                        \n                                                                        ErrorDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides a dialog box for displaying errors to the user.\n\n\n                                                        \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides logging capabilities.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides navigation among views and URL manipulation capabilities.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptors/error.interceptor.ts:42\n                \n            \n\n\n            \n                \n                    Intercepts HTTP requests.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn outgoing HTTP request with an optional typed body.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe next HTTP handler or the outgoing request dispatcher.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The error caught from the request.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// Third party imports\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n// Application imports\nimport { ErrorDialogService, LoggingService } from '@app/_services';\n\n/** Intercepts and handles errors from outgoing HTTP request. */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  /**\n   * Initialization of the error interceptor.\n   *\n   * @param errorDialogService - A service that provides a dialog box for displaying errors to the user.\n   * @param loggingService - A service that provides logging capabilities.\n   * @param router - A service that provides navigation among views and URL manipulation capabilities.\n   */\n  constructor(\n    private errorDialogService: ErrorDialogService,\n    private loggingService: LoggingService,\n    private router: Router\n  ) {}\n\n  /**\n   * Intercepts HTTP requests.\n   *\n   * @param request - An outgoing HTTP request with an optional typed body.\n   * @param next - The next HTTP handler or the outgoing request dispatcher.\n   * @returns The error caught from the request.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        let errorMessage: string;\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred. Handle it accordingly.\n          errorMessage = `An error occurred: ${err.error.message}`;\n        } else {\n          // The backend returned an unsuccessful response code.\n          // The response body may contain clues as to what went wrong.\n          errorMessage = `Backend returned code ${err.status}, body was: ${JSON.stringify(\n            err.error\n          )}`;\n        }\n        this.loggingService.sendErrorLevelMessage(errorMessage, this, { error: err });\n        switch (err.status) {\n          case 401: // unauthorized\n            this.router.navigateByUrl('/auth').then();\n            break;\n          case 403: // forbidden\n            alert('Access to resource is not allowed!');\n            break;\n        }\n        // Return an observable with a user-facing error message.\n        return throwError(err);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/footer/footer.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentYear\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date().getFullYear()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterComponent implements OnInit {\n  currentYear = new Date().getFullYear();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n   Copyleft \n  🄯.\n  {{ currentYear }}\n   Grassroots Economics \n\n\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Copyleft   🄯.  {{ currentYear }}   Grassroots Economics '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterStubComponent.html":{"url":"components/FooterStubComponent.html","title":"component - FooterStubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterStubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/testing/shared-module-stub.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({ selector: 'app-sidebar', template: '' })\nexport class SidebarStubComponent {}\n\n@Component({ selector: 'app-topbar', template: '' })\nexport class TopbarStubComponent {}\n\n@Component({ selector: 'app-footer', template: '' })\nexport class FooterStubComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterStubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/global-error-handler.ts\n        \n\n            \n                Description\n            \n            \n                Provides a hook for centralized exception handling.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorHandler\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sentencesForWarningLogging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                    Private\n                                isWarning\n                            \n                            \n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/global-error-handler.ts:41\n                            \n                        \n\n                \n                    \n                            Initialization of the Global Error Handler.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides logging capabilities.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides navigation among views and URL manipulation capabilities.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/global-error-handler.ts:58\n                \n            \n\n\n            \n                \n                    Handles different types of errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error objects thrown when a runtime errors occurs.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isWarning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isWarning(errorTraceString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/global-error-handler.ts:84\n                \n            \n\n\n            \n                \n                    Checks if an error is of type warning.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorTraceString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA description of the error and it's stack trace.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true - If the error is of type warning.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \nlogError(error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/global-error-handler.ts:104\n                \n            \n\n\n            \n                \n                    Write appropriate logs according to the type of error.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error objects thrown when a runtime errors occurs.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sentencesForWarningLogging\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_helpers/global-error-handler.ts:41\n                            \n                        \n\n                \n                    \n                        An array of sentence sections that denote warnings.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// Application imports\nimport { LoggingService } from '@app/_services/logging.service';\n\n/**\n * A generalized http response error.\n *\n * @extends Error\n */\nexport class HttpError extends Error {\n  /** The error's status code. */\n  public status: number;\n\n  /**\n   * Initialize the HttpError class.\n   *\n   * @param message - The message given by the error.\n   * @param status - The status code given by the error.\n   */\n  constructor(message: string, status: number) {\n    super(message);\n    this.status = status;\n    this.name = 'HttpError';\n  }\n}\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * @extends ErrorHandler\n */\n@Injectable()\nexport class GlobalErrorHandler extends ErrorHandler {\n  /**\n   * An array of sentence sections that denote warnings.\n   */\n  private sentencesForWarningLogging: Array = [];\n\n  /**\n   * Initialization of the Global Error Handler.\n   *\n   * @param loggingService - A service that provides logging capabilities.\n   * @param router - A service that provides navigation among views and URL manipulation capabilities.\n   */\n  constructor(private loggingService: LoggingService, private router: Router) {\n    super();\n  }\n\n  /**\n   * Handles different types of errors.\n   *\n   * @param error - An error objects thrown when a runtime errors occurs.\n   */\n  handleError(error: Error): void {\n    this.logError(error);\n    const message: string = error.message ? error.message : error.toString();\n\n    // if (error.status) {\n    //   error = new Error(message);\n    // }\n\n    const errorTraceString: string = `Error message:\\n${message}.\\nStack trace: ${error.stack}`;\n\n    const isWarning: boolean = this.isWarning(errorTraceString);\n    if (isWarning) {\n      this.loggingService.sendWarnLevelMessage(errorTraceString, { error });\n    } else {\n      this.loggingService.sendErrorLevelMessage(errorTraceString, this, { error });\n    }\n\n    throw error;\n  }\n\n  /**\n   * Checks if an error is of type warning.\n   *\n   * @param errorTraceString - A description of the error and it's stack trace.\n   * @returns true - If the error is of type warning.\n   */\n  private isWarning(errorTraceString: string): boolean {\n    let isWarning: boolean = true;\n    if (errorTraceString.includes('/src/app/')) {\n      isWarning = false;\n    }\n\n    this.sentencesForWarningLogging.forEach((whiteListSentence: string) => {\n      if (errorTraceString.includes(whiteListSentence)) {\n        isWarning = true;\n      }\n    });\n\n    return isWarning;\n  }\n\n  /**\n   * Write appropriate logs according to the type of error.\n   *\n   * @param error - An error objects thrown when a runtime errors occurs.\n   */\n  logError(error: any): void {\n    const route: string = this.router.url;\n    if (error instanceof HttpErrorResponse) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was an HTTP error on route ${route}.\\n${error.message}.\\nStatus code: ${\n          (error as HttpErrorResponse).status\n        }`,\n        this,\n        { error }\n      );\n    } else if (error instanceof TypeError) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was a Type error on route ${route}.\\n${error.message}`,\n        this,\n        { error }\n      );\n    } else if (error instanceof Error) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was a general error on route ${route}.\\n${error.message}`,\n        this,\n        { error }\n      );\n    } else {\n      this.loggingService.sendErrorLevelMessage(\n        `Nobody threw an error but something happened on route ${route}!`,\n        this,\n        { error }\n      );\n    }\n  }\n}\n\nexport function rejectBody(error): { status: any; statusText: any } {\n  return {\n    status: error.status,\n    statusText: error.statusText,\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpConfigInterceptor.html":{"url":"interceptors/HttpConfigInterceptor.html","title":"interceptor - HttpConfigInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpConfigInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptors/http-config.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts and handles setting of configurations to outgoing HTTP request. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_interceptors/http-config.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            Initialization of http config interceptor. \n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptors/http-config.interceptor.ts:21\n                \n            \n\n\n            \n                \n                    Intercepts HTTP requests.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn outgoing HTTP request with an optional typed body.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe next HTTP handler or the outgoing request dispatcher.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The forwarded request.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// Third party imports\nimport { Observable } from 'rxjs';\n\n/** Intercepts and handles setting of configurations to outgoing HTTP request. */\n@Injectable()\nexport class HttpConfigInterceptor implements HttpInterceptor {\n  /** Initialization of http config interceptor. */\n  constructor() {}\n\n  /**\n   * Intercepts HTTP requests.\n   *\n   * @param request - An outgoing HTTP request with an optional typed body.\n   * @param next - The next HTTP handler or the outgoing request dispatcher.\n   * @returns The forwarded request.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    // const token: string = sessionStorage.getItem(btoa('CICADA_SESSION_TOKEN'));\n\n    // if (token) {\n    //   request = request.clone({headers: request.headers.set('Authorization', 'Bearer ' + token)});\n    // }\n\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpError.html":{"url":"classes/HttpError.html","title":"class - HttpError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/global-error-handler.ts\n        \n\n            \n                Description\n            \n            \n                A generalized http response error.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, status: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/_helpers/global-error-handler.ts:16\n                            \n                        \n\n                \n                    \n                            Initialize the HttpError class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe message given by the error.\n\n\n                                                        \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe status code given by the error.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_helpers/global-error-handler.ts:16\n                            \n                        \n\n                \n                    \n                        The error's status code. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// Application imports\nimport { LoggingService } from '@app/_services/logging.service';\n\n/**\n * A generalized http response error.\n *\n * @extends Error\n */\nexport class HttpError extends Error {\n  /** The error's status code. */\n  public status: number;\n\n  /**\n   * Initialize the HttpError class.\n   *\n   * @param message - The message given by the error.\n   * @param status - The status code given by the error.\n   */\n  constructor(message: string, status: number) {\n    super(message);\n    this.status = status;\n    this.name = 'HttpError';\n  }\n}\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * @extends ErrorHandler\n */\n@Injectable()\nexport class GlobalErrorHandler extends ErrorHandler {\n  /**\n   * An array of sentence sections that denote warnings.\n   */\n  private sentencesForWarningLogging: Array = [];\n\n  /**\n   * Initialization of the Global Error Handler.\n   *\n   * @param loggingService - A service that provides logging capabilities.\n   * @param router - A service that provides navigation among views and URL manipulation capabilities.\n   */\n  constructor(private loggingService: LoggingService, private router: Router) {\n    super();\n  }\n\n  /**\n   * Handles different types of errors.\n   *\n   * @param error - An error objects thrown when a runtime errors occurs.\n   */\n  handleError(error: Error): void {\n    this.logError(error);\n    const message: string = error.message ? error.message : error.toString();\n\n    // if (error.status) {\n    //   error = new Error(message);\n    // }\n\n    const errorTraceString: string = `Error message:\\n${message}.\\nStack trace: ${error.stack}`;\n\n    const isWarning: boolean = this.isWarning(errorTraceString);\n    if (isWarning) {\n      this.loggingService.sendWarnLevelMessage(errorTraceString, { error });\n    } else {\n      this.loggingService.sendErrorLevelMessage(errorTraceString, this, { error });\n    }\n\n    throw error;\n  }\n\n  /**\n   * Checks if an error is of type warning.\n   *\n   * @param errorTraceString - A description of the error and it's stack trace.\n   * @returns true - If the error is of type warning.\n   */\n  private isWarning(errorTraceString: string): boolean {\n    let isWarning: boolean = true;\n    if (errorTraceString.includes('/src/app/')) {\n      isWarning = false;\n    }\n\n    this.sentencesForWarningLogging.forEach((whiteListSentence: string) => {\n      if (errorTraceString.includes(whiteListSentence)) {\n        isWarning = true;\n      }\n    });\n\n    return isWarning;\n  }\n\n  /**\n   * Write appropriate logs according to the type of error.\n   *\n   * @param error - An error objects thrown when a runtime errors occurs.\n   */\n  logError(error: any): void {\n    const route: string = this.router.url;\n    if (error instanceof HttpErrorResponse) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was an HTTP error on route ${route}.\\n${error.message}.\\nStatus code: ${\n          (error as HttpErrorResponse).status\n        }`,\n        this,\n        { error }\n      );\n    } else if (error instanceof TypeError) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was a Type error on route ${route}.\\n${error.message}`,\n        this,\n        { error }\n      );\n    } else if (error instanceof Error) {\n      this.loggingService.sendErrorLevelMessage(\n        `There was a general error on route ${route}.\\n${error.message}`,\n        this,\n        { error }\n      );\n    } else {\n      this.loggingService.sendErrorLevelMessage(\n        `Nobody threw an error but something happened on route ${route}!`,\n        this,\n        { error }\n      );\n    }\n  }\n}\n\nexport function rejectBody(error): { status: any; statusText: any } {\n  return {\n    status: error.status,\n    statusText: error.statusText,\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeystoreService.html":{"url":"injectables/KeystoreService.html","title":"injectable - KeystoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KeystoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/keystore.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                mutableKeyStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getKeystore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/keystore.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            getKeystore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKeystore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/keystore.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            mutableKeyStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MutableKeyStore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/keystore.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MutableKeyStore, MutablePgpKeyStore } from '@app/_pgp';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeystoreService {\n  private static mutableKeyStore: MutableKeyStore;\n\n  constructor() {}\n\n  public static async getKeystore(): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!KeystoreService.mutableKeyStore) {\n        this.mutableKeyStore = new MutablePgpKeyStore();\n        await this.mutableKeyStore.loadKeyring();\n        return resolve(KeystoreService.mutableKeyStore);\n      }\n      return resolve(KeystoreService.mutableKeyStore);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/location.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areaNames\n                            \n                            \n                                    Private\n                                areaNamesList\n                            \n                            \n                                areaNamesSubject\n                            \n                            \n                                areaTypes\n                            \n                            \n                                    Private\n                                areaTypesList\n                            \n                            \n                                areaTypesSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAreaNameByLocation\n                            \n                            \n                                getAreaNames\n                            \n                            \n                                getAreaTypeByArea\n                            \n                            \n                                getAreaTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/location.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAreaNameByLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetAreaNameByLocation(location: string, areaNames: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/location.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    areaNames\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAreaNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetAreaNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/location.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAreaTypeByArea\n                        \n                        \n                    \n                \n            \n            \n                \ngetAreaTypeByArea(area: string, areaTypes: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/location.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    area\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    areaTypes\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAreaTypes\n                        \n                        \n                    \n                \n            \n            \n                \ngetAreaTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/location.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            areaNamesList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.areaNames)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaNamesSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.areaNamesList.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            areaTypesList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.areaTypes)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaTypesSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.areaTypesList.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/location.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from '@src/environments/environment';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocationService {\n  areaNames: object = {};\n  private areaNamesList: BehaviorSubject = new BehaviorSubject(this.areaNames);\n  areaNamesSubject: Observable = this.areaNamesList.asObservable();\n\n  areaTypes: object = {};\n  private areaTypesList: BehaviorSubject = new BehaviorSubject(this.areaTypes);\n  areaTypesSubject: Observable = this.areaTypesList.asObservable();\n\n  constructor(private httpClient: HttpClient) {}\n\n  getAreaNames(): void {\n    this.httpClient\n      .get(`${environment.cicMetaUrl}/areanames`)\n      .pipe(first())\n      .subscribe((res: object) => this.areaNamesList.next(res));\n  }\n\n  getAreaNameByLocation(location: string, areaNames: object): string {\n    const keywords = location.toLowerCase().split(' ');\n    for (const keyword of keywords) {\n      const queriedAreaName: string = Object.keys(areaNames).find((key) =>\n        areaNames[key].includes(keyword)\n      );\n      if (queriedAreaName) {\n        return queriedAreaName;\n      }\n    }\n  }\n\n  getAreaTypes(): void {\n    this.httpClient\n      .get(`${environment.cicMetaUrl}/areatypes`)\n      .pipe(first())\n      .subscribe((res: object) => this.areaTypesList.next(res));\n  }\n\n  getAreaTypeByArea(area: string, areaTypes: object): string {\n    const keywords = area.toLowerCase().split(' ');\n    for (const keyword of keywords) {\n      const queriedAreaType: string = Object.keys(areaTypes).find((key) =>\n        areaTypes[key].includes(keyword)\n      );\n      if (queriedAreaType) {\n        return queriedAreaType;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoggingInterceptor.html":{"url":"interceptors/LoggingInterceptor.html","title":"interceptor - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_interceptors/logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts and handles of events from outgoing HTTP request. \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_interceptors/logging.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            Initialization of the logging interceptor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides logging capabilities.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_interceptors/logging.interceptor.ts:35\n                \n            \n\n\n            \n                \n                    Intercepts HTTP requests.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn outgoing HTTP request with an optional typed body.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe next HTTP handler or the outgoing request dispatcher.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The forwarded request.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// Third party imports\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\n\n// Application imports\nimport { LoggingService } from '@app/_services/logging.service';\n\n/** Intercepts and handles of events from outgoing HTTP request. */\n@Injectable()\nexport class LoggingInterceptor implements HttpInterceptor {\n  /**\n   * Initialization of the logging interceptor.\n   *\n   * @param loggingService - A service that provides logging capabilities.\n   */\n  constructor(private loggingService: LoggingService) {}\n\n  /**\n   * Intercepts HTTP requests.\n   *\n   * @param request - An outgoing HTTP request with an optional typed body.\n   * @param next - The next HTTP handler or the outgoing request dispatcher.\n   * @returns The forwarded request.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request);\n    // this.loggingService.sendInfoLevelMessage(request);\n    // const startTime: number = Date.now();\n    // let status: string;\n    //\n    // return next.handle(request).pipe(tap(event => {\n    //   status = '';\n    //   if (event instanceof HttpResponse) {\n    //     status = 'succeeded';\n    //   }\n    // }, error => status = 'failed'),\n    //   finalize(() => {\n    //   const elapsedTime: number = Date.now() - startTime;\n    //   const message: string = `${request.method} request for ${request.urlWithParams} ${status} in ${elapsedTime} ms`;\n    //   this.loggingService.sendInfoLevelMessage(message);\n    // }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingService.html":{"url":"injectables/LoggingService.html","title":"injectable - LoggingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/logging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canDebug\n                            \n                            \n                                env\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendDebugLevelMessage\n                            \n                            \n                                sendErrorLevelMessage\n                            \n                            \n                                sendFatalLevelMessage\n                            \n                            \n                                sendInfoLevelMessage\n                            \n                            \n                                sendLogLevelMessage\n                            \n                            \n                                sendTraceLevelMessage\n                            \n                            \n                                sendWarnLevelMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/logging.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendDebugLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendDebugLevelMessage(message: any, source: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendErrorLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendErrorLevelMessage(message: any, source: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendFatalLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendFatalLevelMessage(message: any, source: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendInfoLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendInfoLevelMessage(message: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendLogLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendLogLevelMessage(message: any, source: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendTraceLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendTraceLevelMessage(message: any, source: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendWarnLevelMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendWarnLevelMessage(message: any, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/logging.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/logging.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/logging.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggingService {\n  env: string;\n  canDebug: boolean;\n\n  constructor(private logger: NGXLogger) {\n    // TRACE|DEBUG|INFO|LOG|WARN|ERROR|FATAL|OFF\n    if (isDevMode()) {\n      this.sendInfoLevelMessage('Dropping into debug mode');\n    }\n  }\n\n  sendTraceLevelMessage(message: any, source: any, error: any): void {\n    this.logger.trace(message, source, error);\n  }\n\n  sendDebugLevelMessage(message: any, source: any, error: any): void {\n    this.logger.debug(message, source, error);\n  }\n\n  sendInfoLevelMessage(message: any): void {\n    this.logger.info(message);\n  }\n\n  sendLogLevelMessage(message: any, source: any, error: any): void {\n    this.logger.log(message, source, error);\n  }\n\n  sendWarnLevelMessage(message: any, error: any): void {\n    this.logger.warn(message, error);\n  }\n\n  sendErrorLevelMessage(message: any, source: any, error: any): void {\n    this.logger.error(message, source, error);\n  }\n\n  sendFatalLevelMessage(message: any, source: any, error: any): void {\n    this.logger.fatal(message, source, error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MenuSelectionDirective.html":{"url":"directives/MenuSelectionDirective.html","title":"directive - MenuSelectionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MenuSelectionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/_directives/menu-selection.directive.ts\n        \n\n            \n                Description\n            \n            \n                Toggle availability of sidebar on menu item selection. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMenuSelection]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/_directives/menu-selection.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Handle click events on the html element.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA wrapper around a native element inside of a View.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nExtend this base class to implement custom rendering.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMenuSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonMenuSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/_directives/menu-selection.directive.ts:25\n                \n            \n\n\n            \n                \n                    Toggle the availability of the sidebar. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n/** Toggle availability of sidebar on menu item selection. */\n@Directive({\n  selector: '[appMenuSelection]',\n})\nexport class MenuSelectionDirective {\n  /**\n   * Handle click events on the html element.\n   *\n   * @param elementRef - A wrapper around a native element inside of a View.\n   * @param renderer - Extend this base class to implement custom rendering.\n   */\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.listen(this.elementRef.nativeElement, 'click', () => {\n      const mediaQuery = window.matchMedia('(max-width: 768px)');\n      if (mediaQuery.matches) {\n        this.onMenuSelect();\n      }\n    });\n  }\n\n  /** Toggle the availability of the sidebar. */\n  onMenuSelect(): void {\n    const sidebar: HTMLElement = document.getElementById('sidebar');\n    if (!sidebar?.classList.contains('active')) {\n      sidebar?.classList.add('active');\n    }\n    const content: HTMLElement = document.getElementById('content');\n    if (!content?.classList.contains('active')) {\n      content?.classList.add('active');\n    }\n    const sidebarCollapse: HTMLElement = document.getElementById('sidebarCollapse');\n    if (sidebarCollapse?.classList.contains('active')) {\n      sidebarCollapse?.classList.remove('active');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MenuToggleDirective.html":{"url":"directives/MenuToggleDirective.html","title":"directive - MenuToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MenuToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/_directives/menu-toggle.directive.ts\n        \n\n            \n                Description\n            \n            \n                Toggle availability of sidebar on menu toggle click. \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMenuToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/_directives/menu-toggle.directive.ts:8\n                            \n                        \n\n                \n                    \n                            Handle click events on the html element.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA wrapper around a native element inside of a View.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nExtend this base class to implement custom rendering.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onMenuToggle\n                        \n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/_directives/menu-toggle.directive.ts:22\n                \n            \n\n\n            \n                \n                    Toggle the availability of the sidebar. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\n/** Toggle availability of sidebar on menu toggle click. */\n@Directive({\n  selector: '[appMenuToggle]',\n})\nexport class MenuToggleDirective {\n  /**\n   * Handle click events on the html element.\n   *\n   * @param elementRef - A wrapper around a native element inside of a View.\n   * @param renderer - Extend this base class to implement custom rendering.\n   */\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.listen(this.elementRef.nativeElement, 'click', () => {\n      this.onMenuToggle();\n    });\n  }\n\n  /** Toggle the availability of the sidebar. */\n  onMenuToggle(): void {\n    const sidebar: HTMLElement = document.getElementById('sidebar');\n    sidebar?.classList.toggle('active');\n    const content: HTMLElement = document.getElementById('content');\n    content?.classList.toggle('active');\n    const sidebarCollapse: HTMLElement = document.getElementById('sidebarCollapse');\n    sidebarCollapse?.classList.toggle('active');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta.html":{"url":"interfaces/Meta.html","title":"interface - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/account.ts\n        \n\n            \n                Description\n            \n            \n                Meta object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        signature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         AccountDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account details \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Meta store id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                    \n                                \n                                \n                                    \n                                        signature:         Signature\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Signature\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Signature used during write. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface AccountDetails {\n  /** Age of user */\n  age?: string;\n  /** Token balance on account */\n  balance?: number;\n  /** Business category of user. */\n  category?: string;\n  /** Account registration day */\n  date_registered: number;\n  /** User's gender */\n  gender: string;\n  /** Account identifiers */\n  identities: {\n    evm: {\n      'bloxberg:8996': string[];\n      'oldchain:1': string[];\n    };\n    latitude: number;\n    longitude: number;\n  };\n  /** User's location */\n  location: {\n    area?: string;\n    area_name: string;\n    area_type?: string;\n  };\n  /** Products or services provided by user. */\n  products: string[];\n  /** Type of account */\n  type?: string;\n  /** Personal identifying information of user */\n  vcard: {\n    email: [\n      {\n        value: string;\n      }\n    ];\n    fn: [\n      {\n        value: string;\n      }\n    ];\n    n: [\n      {\n        value: string[];\n      }\n    ];\n    tel: [\n      {\n        meta: {\n          TYP: string[];\n        };\n        value: string;\n      }\n    ];\n    version: [\n      {\n        value: string;\n      }\n    ];\n  };\n}\n\n/** Meta signature interface */\ninterface Signature {\n  /** Algorithm used */\n  algo: string;\n  /** Data that was signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Meta object interface */\ninterface Meta {\n  /** Account details */\n  data: AccountDetails;\n  /** Meta store id */\n  id: string;\n  /** Signature used during write. */\n  signature: Signature;\n}\n\n/** Meta response interface */\ninterface MetaResponse {\n  /** Meta store id */\n  id: string;\n  /** Meta object */\n  m: Meta;\n}\n\n/** Default account data object */\nconst defaultAccount: AccountDetails = {\n  date_registered: Date.now(),\n  gender: 'other',\n  identities: {\n    evm: {\n      'bloxberg:8996': [''],\n      'oldchain:1': [''],\n    },\n    latitude: 0,\n    longitude: 0,\n  },\n  location: {\n    area_name: 'Kilifi',\n  },\n  products: [],\n  vcard: {\n    email: [\n      {\n        value: '',\n      },\n    ],\n    fn: [\n      {\n        value: 'Sarafu Contract',\n      },\n    ],\n    n: [\n      {\n        value: ['Sarafu', 'Contract'],\n      },\n    ],\n    tel: [\n      {\n        meta: {\n          TYP: [],\n        },\n        value: '+254700000000',\n      },\n    ],\n    version: [\n      {\n        value: '3.0',\n      },\n    ],\n  },\n};\n\n/** @exports */\nexport { AccountDetails, Meta, MetaResponse, Signature, defaultAccount };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaResponse.html":{"url":"interfaces/MetaResponse.html","title":"interface - MetaResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MetaResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/account.ts\n        \n\n            \n                Description\n            \n            \n                Meta response interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        m\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Meta store id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m\n                                    \n                                \n                                \n                                    \n                                        m:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Meta object \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface AccountDetails {\n  /** Age of user */\n  age?: string;\n  /** Token balance on account */\n  balance?: number;\n  /** Business category of user. */\n  category?: string;\n  /** Account registration day */\n  date_registered: number;\n  /** User's gender */\n  gender: string;\n  /** Account identifiers */\n  identities: {\n    evm: {\n      'bloxberg:8996': string[];\n      'oldchain:1': string[];\n    };\n    latitude: number;\n    longitude: number;\n  };\n  /** User's location */\n  location: {\n    area?: string;\n    area_name: string;\n    area_type?: string;\n  };\n  /** Products or services provided by user. */\n  products: string[];\n  /** Type of account */\n  type?: string;\n  /** Personal identifying information of user */\n  vcard: {\n    email: [\n      {\n        value: string;\n      }\n    ];\n    fn: [\n      {\n        value: string;\n      }\n    ];\n    n: [\n      {\n        value: string[];\n      }\n    ];\n    tel: [\n      {\n        meta: {\n          TYP: string[];\n        };\n        value: string;\n      }\n    ];\n    version: [\n      {\n        value: string;\n      }\n    ];\n  };\n}\n\n/** Meta signature interface */\ninterface Signature {\n  /** Algorithm used */\n  algo: string;\n  /** Data that was signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Meta object interface */\ninterface Meta {\n  /** Account details */\n  data: AccountDetails;\n  /** Meta store id */\n  id: string;\n  /** Signature used during write. */\n  signature: Signature;\n}\n\n/** Meta response interface */\ninterface MetaResponse {\n  /** Meta store id */\n  id: string;\n  /** Meta object */\n  m: Meta;\n}\n\n/** Default account data object */\nconst defaultAccount: AccountDetails = {\n  date_registered: Date.now(),\n  gender: 'other',\n  identities: {\n    evm: {\n      'bloxberg:8996': [''],\n      'oldchain:1': [''],\n    },\n    latitude: 0,\n    longitude: 0,\n  },\n  location: {\n    area_name: 'Kilifi',\n  },\n  products: [],\n  vcard: {\n    email: [\n      {\n        value: '',\n      },\n    ],\n    fn: [\n      {\n        value: 'Sarafu Contract',\n      },\n    ],\n    n: [\n      {\n        value: ['Sarafu', 'Contract'],\n      },\n    ],\n    tel: [\n      {\n        meta: {\n          TYP: [],\n        },\n        value: '+254700000000',\n      },\n    ],\n    version: [\n      {\n        value: '3.0',\n      },\n    ],\n  },\n};\n\n/** @exports */\nexport { AccountDetails, Meta, MetaResponse, Signature, defaultAccount };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/MockBackendInterceptor.html":{"url":"interceptors/MockBackendInterceptor.html","title":"interceptor - MockBackendInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  MockBackendInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_helpers/mock-backend.ts\n        \n\n            \n                Description\n            \n            \n                Intercepts HTTP requests and handles some specified requests internally.\nProvides a backend that can handle requests for certain data items.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_helpers/mock-backend.ts:936\n                \n            \n\n\n            \n                \n                    Intercepts HTTP requests.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn outgoing HTTP request with an optional typed body.\n\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe next HTTP handler or the outgoing request dispatcher.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        The response from the resolved request.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// Third party imports\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, dematerialize, materialize, mergeMap } from 'rxjs/operators';\n\n// Application imports\nimport { Action } from '@app/_models';\n\n/** A mock of the curated account types. */\nconst accountTypes: Array = ['user', 'cashier', 'vendor', 'tokenagent', 'group'];\n\n/** A mock of actions made by the admin staff. */\nconst actions: Array = [\n  { id: 1, user: 'Tom', role: 'enroller', action: 'Disburse RSV 100', approval: false },\n  { id: 2, user: 'Christine', role: 'admin', action: 'Change user phone number', approval: true },\n  { id: 3, user: 'Will', role: 'superadmin', action: 'Reclaim RSV 1000', approval: true },\n  { id: 4, user: 'Vivian', role: 'enroller', action: 'Complete user profile', approval: true },\n  { id: 5, user: 'Jack', role: 'enroller', action: 'Reclaim RSV 200', approval: false },\n  { id: 6, user: 'Patience', role: 'enroller', action: 'Change user information', approval: false },\n];\n\n/** A mock of curated area names. */\nconst areaNames: object = {\n  'Mukuru Nairobi': [\n    'kayaba',\n    'kayba',\n    'kambi',\n    'mukuru',\n    'masai',\n    'hazina',\n    'south',\n    'tetra',\n    'tetrapak',\n    'ruben',\n    'rueben',\n    'kingston',\n    'korokocho',\n    'kingstone',\n    'kamongo',\n    'lungalunga',\n    'sinai',\n    'sigei',\n    'lungu',\n    'lunga lunga',\n    'owino road',\n    'seigei',\n  ],\n  'Kinango Kwale': [\n    'amani',\n    'bofu',\n    'chibuga',\n    'chikomani',\n    'chilongoni',\n    'chigojoni',\n    'chinguluni',\n    'chigato',\n    'chigale',\n    'chikole',\n    'chilongoni',\n    'chilumani',\n    'chigojoni',\n    'chikomani',\n    'chizini',\n    'chikomeni',\n    'chidzuvini',\n    'chidzivuni',\n    'chikuyu',\n    'chizingo',\n    'doti',\n    'dzugwe',\n    'dzivani',\n    'dzovuni',\n    'hanje',\n    'kasemeni',\n    'katundani',\n    'kibandaogo',\n    'kibandaongo',\n    'kwale',\n    'kinango',\n    'kidzuvini',\n    'kalalani',\n    'kafuduni',\n    'kaloleni',\n    'kilibole',\n    'lutsangani',\n    'peku',\n    'gona',\n    'guro',\n    'gandini',\n    'mkanyeni',\n    'myenzeni',\n    'miyenzeni',\n    'miatsiani',\n    'mienzeni',\n    'mnyenzeni',\n    'minyenzeni',\n    'miyani',\n    'mioleni',\n    'makuluni',\n    'mariakani',\n    'makobeni',\n    'madewani',\n    'mwangaraba',\n    'mwashanga',\n    'miloeni',\n    'mabesheni',\n    'mazeras',\n    'mazera',\n    'mlola',\n    'muugano',\n    'mulunguni',\n    'mabesheni',\n    'miatsani',\n    'miatsiani',\n    'mwache',\n    'mwangani',\n    'mwehavikonje',\n    'miguneni',\n    'nzora',\n    'nzovuni',\n    'vikinduni',\n    'vikolani',\n    'vitangani',\n    'viogato',\n    'vyogato',\n    'vistangani',\n    'yapha',\n    'yava',\n    'yowani',\n    'ziwani',\n    'majengo',\n    'matuga',\n    'vigungani',\n    'vidziweni',\n    'vinyunduni',\n    'ukunda',\n    'kokotoni',\n    'mikindani',\n  ],\n  'Misc Nairobi': [\n    'nairobi',\n    'west',\n    'lindi',\n    'kibera',\n    'kibira',\n    'kibra',\n    'makina',\n    'soweto',\n    'olympic',\n    'kangemi',\n    'ruiru',\n    'congo',\n    'kawangware',\n    'kwangware',\n    'donholm',\n    'dagoreti',\n    'dandora',\n    'kabete',\n    'sinai',\n    'donhom',\n    'donholm',\n    'huruma',\n    'kitengela',\n    'makadara',\n    ',mlolongo',\n    'kenyatta',\n    'mlolongo',\n    'tassia',\n    'tasia',\n    'gatina',\n    '56',\n    'industrial',\n    'kariobangi',\n    'kasarani',\n    'kayole',\n    'mathare',\n    'pipe',\n    'juja',\n    'uchumi',\n    'jogoo',\n    'umoja',\n    'thika',\n    'kikuyu',\n    'stadium',\n    'buru buru',\n    'ngong',\n    'starehe',\n    'mwiki',\n    'fuata',\n    'kware',\n    'kabiro',\n    'embakassi',\n    'embakasi',\n    'kmoja',\n    'east',\n    'githurai',\n    'landi',\n    'langata',\n    'limuru',\n    'mathere',\n    'dagoretti',\n    'kirembe',\n    'muugano',\n    'mwiki',\n    'toi market',\n  ],\n  'Kisauni Mombasa': [\n    'bamburi',\n    'mnyuchi',\n    'kisauni',\n    'kasauni',\n    'mworoni',\n    'nyali',\n    'falcon',\n    'shanzu',\n    'bombolulu',\n    'kandongo',\n    'kadongo',\n    'mshomoro',\n    'mtopanga',\n    'mjambere',\n    'majaoni',\n    'manyani',\n    'magogoni',\n    'magongoni',\n    'junda',\n    'mwakirunge',\n    'mshomoroni',\n    'mjinga',\n    'mlaleo',\n    'utange',\n  ],\n  'Misc Mombasa': [\n    'mombasa',\n    'likoni',\n    'bangla',\n    'bangladesh',\n    'kizingo',\n    'old town',\n    'makupa',\n    'mvita',\n    'ngombeni',\n    'ngómbeni',\n    'ombeni',\n    'magongo',\n    'miritini',\n    'changamwe',\n    'jomvu',\n    'ohuru',\n    'tudor',\n    'diani',\n  ],\n  Kilifi: [\n    'kilfi',\n    'kilifi',\n    'mtwapa',\n    'takaungu',\n    'makongeni',\n    'mnarani',\n    'mnarani',\n    'office',\n    'g.e',\n    'ge',\n    'raibai',\n    'ribe',\n  ],\n  Kakuma: ['kakuma'],\n  Kitui: ['kitui', 'mwingi'],\n  Nyanza: [\n    'busia',\n    'nyalgunga',\n    'mbita',\n    'siaya',\n    'kisumu',\n    'nyalenda',\n    'hawinga',\n    'rangala',\n    'uyoma',\n    'mumias',\n    'homabay',\n    'homaboy',\n    'migori',\n    'kusumu',\n  ],\n  'Misc Rural Counties': [\n    'makueni',\n    'meru',\n    'kisii',\n    'bomet',\n    'machakos',\n    'bungoma',\n    'eldoret',\n    'kakamega',\n    'kericho',\n    'kajiado',\n    'nandi',\n    'nyeri',\n    'wote',\n    'kiambu',\n    'mwea',\n    'nakuru',\n    'narok',\n  ],\n  other: ['other', 'none', 'unknown'],\n};\n\nconst areaTypes: object = {\n  urban: ['urban', 'nairobi', 'mombasa', 'kisauni'],\n  rural: ['rural', 'kakuma', 'kwale', 'kinango', 'kitui', 'nyanza'],\n  periurban: ['kilifi', 'periurban'],\n  other: ['other'],\n};\n\n/** A mock of the user's business categories */\nconst categories: object = {\n  system: ['system', 'office main', 'office main phone'],\n  education: [\n    'book',\n    'coach',\n    'teacher',\n    'sch',\n    'school',\n    'pry',\n    'education',\n    'student',\n    'mwalimu',\n    'maalim',\n    'consultant',\n    'consult',\n    'college',\n    'university',\n    'lecturer',\n    'primary',\n    'secondary',\n    'daycare',\n    'babycare',\n    'baby care',\n    'elim',\n    'eimu',\n    'nursery',\n    'red cross',\n    'volunteer',\n    'instructor',\n    'journalist',\n    'lesson',\n    'academy',\n    'headmistress',\n    'headteacher',\n    'cyber',\n    'researcher',\n    'professor',\n    'demo',\n    'expert',\n    'tution',\n    'children',\n    'headmaster',\n    'educator',\n    'Marital counsellor',\n    'counsellor',\n    'trainer',\n    'vijana',\n    'youth',\n    'intern',\n    'redcross',\n    'KRCS',\n    'danish',\n    'science',\n    'data',\n    'facilitator',\n    'vitabu',\n    'kitabu',\n  ],\n  faith: [\n    'pastor',\n    'imam',\n    'madrasa',\n    'religous',\n    'religious',\n    'ustadh',\n    'ustadhi',\n    'Marital counsellor',\n    'counsellor',\n    'church',\n    'kanisa',\n    'mksiti',\n    'donor',\n  ],\n  government: [\n    'elder',\n    'chief',\n    'police',\n    'government',\n    'country',\n    'county',\n    'soldier',\n    'village admin',\n    'ward',\n    'leader',\n    'kra',\n    'mailman',\n    'immagration',\n  ],\n  environment: [\n    'conservation',\n    'toilet',\n    'choo',\n    'garbage',\n    'fagio',\n    'waste',\n    'tree',\n    'taka',\n    'scrap',\n    'cleaning',\n    'gardener',\n    'rubbish',\n    'usafi',\n    'mazingira',\n    'miti',\n    'trash',\n    'cleaner',\n    'plastic',\n    'collection',\n    'seedling',\n    'seedlings',\n    'recycling',\n  ],\n  farming: [\n    'farm',\n    'farmer',\n    'farming',\n    'mkulima',\n    'kulima',\n    'ukulima',\n    'wakulima',\n    'jembe',\n    'shamba',\n  ],\n  labour: [\n    'artist',\n    'agent',\n    'guard',\n    'askari',\n    'accountant',\n    'baker',\n    'beadwork',\n    'beauty',\n    'business',\n    'barber',\n    'casual',\n    'electrian',\n    'caretaker',\n    'car wash',\n    'capenter',\n    'construction',\n    'chef',\n    'catering',\n    'cobler',\n    'cobbler',\n    'carwash',\n    'dhobi',\n    'landlord',\n    'design',\n    'carpenter',\n    'fundi',\n    'hawking',\n    'hawker',\n    'househelp',\n    'hsehelp',\n    'house help',\n    'help',\n    'housegirl',\n    'kushona',\n    'juakali',\n    'jualikali',\n    'juacali',\n    'jua kali',\n    'shepherd',\n    'makuti',\n    'kujenga',\n    'kinyozi',\n    'kazi',\n    'knitting',\n    'kufua',\n    'fua',\n    'hustler',\n    'biashara',\n    'labour',\n    'labor',\n    'laundry',\n    'repair',\n    'hair',\n    'posho',\n    'mill',\n    'mtambo',\n    'uvuvi',\n    'engineer',\n    'manager',\n    'tailor',\n    'nguo',\n    'mason',\n    'mtumba',\n    'garage',\n    'mechanic',\n    'mjenzi',\n    'mfugaji',\n    'painter',\n    'receptionist',\n    'printing',\n    'programming',\n    'plumb',\n    'charging',\n    'salon',\n    'mpishi',\n    'msusi',\n    'mgema',\n    'footballer',\n    'photocopy',\n    'peddler',\n    'staff',\n    'sales',\n    'service',\n    'saloon',\n    'seremala',\n    'security',\n    'insurance',\n    'secretary',\n    'shoe',\n    'shepard',\n    'shephard',\n    'tout',\n    'tv',\n    'mvuvi',\n    'mawe',\n    'majani',\n    'maembe',\n    'freelance',\n    'mjengo',\n    'electronics',\n    'photographer',\n    'programmer',\n    'electrician',\n    'washing',\n    'bricks',\n    'welder',\n    'welding',\n    'working',\n    'worker',\n    'watchman',\n    'waiter',\n    'waitress',\n    'viatu',\n    'yoga',\n    'guitarist',\n    'house',\n    'artisan',\n    'musician',\n    'trade',\n    'makonge',\n    'ujenzi',\n    'vendor',\n    'watchlady',\n    'marketing',\n    'beautician',\n    'photo',\n    'metal work',\n    'supplier',\n    'law firm',\n    'brewer',\n  ],\n  food: [\n    'avocado',\n    'bhajia',\n    'bajia',\n    'mbonga',\n    'bofu',\n    'beans',\n    'biscuits',\n    'biringanya',\n    'banana',\n    'bananas',\n    'crisps',\n    'chakula',\n    'coconut',\n    'chapati',\n    'cereal',\n    'chipo',\n    'chapo',\n    'chai',\n    'chips',\n    'cassava',\n    'cake',\n    'cereals',\n    'cook',\n    'corn',\n    'coffee',\n    'chicken',\n    'dagaa',\n    'donut',\n    'dough',\n    'groundnuts',\n    'hotel',\n    'holel',\n    'hoteli',\n    'butcher',\n    'butchery',\n    'fruit',\n    'food',\n    'fruits',\n    'fish',\n    'githeri',\n    'grocery',\n    'grocer',\n    'pojo',\n    'papa',\n    'goats',\n    'mabenda',\n    'mbenda',\n    'poultry',\n    'soda',\n    'peanuts',\n    'potatoes',\n    'samosa',\n    'soko',\n    'samaki',\n    'tomato',\n    'tomatoes',\n    'mchele',\n    'matunda',\n    'mango',\n    'melon',\n    'mellon',\n    'nyanya',\n    'nyama',\n    'omena',\n    'umena',\n    'ndizi',\n    'njugu',\n    'kamba kamba',\n    'khaimati',\n    'kaimati',\n    'kunde',\n    'kuku',\n    'kahawa',\n    'keki',\n    'muguka',\n    'miraa',\n    'milk',\n    'choma',\n    'maziwa',\n    'mboga',\n    'mbog',\n    'busaa',\n    'chumvi',\n    'cabbages',\n    'mabuyu',\n    'machungwa',\n    'mbuzi',\n    'mnazi',\n    'mchicha',\n    'ngombe',\n    'ngano',\n    'nazi',\n    'oranges',\n    'peanuts',\n    'mkate',\n    'bread',\n    'mikate',\n    'vitungu',\n    'sausages',\n    'maize',\n    'mbata',\n    'mchuzi',\n    'mchuuzi',\n    'mandazi',\n    'mbaazi',\n    'mahindi',\n    'maandazi',\n    'mogoka',\n    'meat',\n    'mhogo',\n    'mihogo',\n    'muhogo',\n    'maharagwe',\n    'miwa',\n    'mahamri',\n    'mitumba',\n    'simsim',\n    'porridge',\n    'pilau',\n    'vegetable',\n    'egg',\n    'mayai',\n    'mifugo',\n    'unga',\n    'good',\n    'sima',\n    'sweet',\n    'sweats',\n    'sambusa',\n    'snacks',\n    'sugar',\n    'suger',\n    'ugoro',\n    'sukari',\n    'soup',\n    'spinach',\n    'smokie',\n    'smokies',\n    'sukuma',\n    'tea',\n    'uji',\n    'ugali',\n    'uchuzi',\n    'uchuuzi',\n    'viazi',\n    'yoghurt',\n    'yogurt',\n    'wine',\n    'marondo',\n    'maandzi',\n    'matoke',\n    'omeno',\n    'onions',\n    'nzugu',\n    'korosho',\n    'barafu',\n    'juice',\n  ],\n  water: ['maji', 'water'],\n  health: [\n    'agrovet',\n    'dispensary',\n    'barakoa',\n    'chemist',\n    'Chemicals',\n    'chv',\n    'doctor',\n    'daktari',\n    'dawa',\n    'hospital',\n    'herbalist',\n    'mganga',\n    'sabuni',\n    'soap',\n    'nurse',\n    'heath',\n    'community health worker',\n    'clinic',\n    'clinical',\n    'mask',\n    'medicine',\n    'lab technician',\n    'pharmacy',\n    'cosmetics',\n    'veterinary',\n    'vet',\n    'sickly',\n    'emergency response',\n    'emergency',\n  ],\n  savings: ['chama', 'group', 'savings', 'loan', 'silc', 'vsla', 'credit', 'finance'],\n  shop: [\n    'bag',\n    'bead',\n    'belt',\n    'bedding',\n    'jik',\n    'bed',\n    'cement',\n    'botique',\n    'boutique',\n    'lines',\n    'kibanda',\n    'kiosk',\n    'spareparts',\n    'candy',\n    'cloth',\n    'electricals',\n    'mutumba',\n    'cafe',\n    'leso',\n    'lesso',\n    'duka',\n    'spare parts',\n    'socks',\n    'malimali',\n    'mitungi',\n    'mali mali',\n    'hardware',\n    'detergent',\n    'detergents',\n    'dera',\n    'retail',\n    'kamba',\n    'pombe',\n    'pampers',\n    'pool',\n    'phone',\n    'simu',\n    'mangwe',\n    'mikeka',\n    'movie',\n    'shop',\n    'acces',\n    'mchanga',\n    'uto',\n    'airtime',\n    'matress',\n    'mattress',\n    'mattresses',\n    'mpsea',\n    'mpesa',\n    'shirt',\n    'wholesaler',\n    'perfume',\n    'playstation',\n    'tissue',\n    'vikapu',\n    'uniform',\n    'flowers',\n    'vitenge',\n    'utencils',\n    'utensils',\n    'station',\n    'jewel',\n    'pool table',\n    'club',\n    'pub',\n    'bar',\n    'furniture',\n    'm-pesa',\n    'vyombo',\n  ],\n  transport: [\n    'kebeba',\n    'beba',\n    'bebabeba',\n    'bike',\n    'bicycle',\n    'matatu',\n    'boda',\n    'bodaboda',\n    'cart',\n    'carrier',\n    'tour',\n    'travel',\n    'driver',\n    'dereva',\n    'tout',\n    'conductor',\n    'kubeba',\n    'tuktuk',\n    'taxi',\n    'piki',\n    'pikipiki',\n    'manamba',\n    'trasportion',\n    'mkokoteni',\n    'mover',\n    'motorist',\n    'motorbike',\n    'transport',\n    'transpoter',\n    'gari',\n    'magari',\n    'makanga',\n    'car',\n  ],\n  'fuel/energy': [\n    'timber',\n    'timberyard',\n    'biogas',\n    'charcol',\n    'charcoal',\n    'kuni',\n    'mbao',\n    'fuel',\n    'makaa',\n    'mafuta',\n    'moto',\n    'solar',\n    'stima',\n    'fire',\n    'firewood',\n    'wood',\n    'oil',\n    'taa',\n    'gas',\n    'paraffin',\n    'parrafin',\n    'parafin',\n    'petrol',\n    'petro',\n    'kerosine',\n    'kerosene',\n    'diesel',\n  ],\n  other: ['other', 'none', 'unknown', 'none'],\n};\n\n/** A mock of curated genders */\nconst genders: Array = ['male', 'female', 'other'];\n\n/** A mock of curated  transaction types. */\nconst transactionTypes: Array = [\n  'transactions',\n  'conversions',\n  'disbursements',\n  'rewards',\n  'reclamations',\n];\n\n/**\n * Intercepts HTTP requests and handles some specified requests internally.\n * Provides a backend that can handle requests for certain data items.\n */\n@Injectable()\nexport class MockBackendInterceptor implements HttpInterceptor {\n  /**\n   * Intercepts HTTP requests.\n   *\n   * @param request - An outgoing HTTP request with an optional typed body.\n   * @param next - The next HTTP handler or the outgoing request dispatcher.\n   * @returns The response from the resolved request.\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const { url, method, headers, body } = request;\n\n    // wrap in delayed observable to simulate server api call\\\n    // call materialize and dematerialize to ensure delay even is thrown\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize())\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    /** Forward requests from select routes to their internal handlers. */\n    function handleRoute(): Observable {\n      switch (true) {\n        case url.endsWith('/accounttypes') && method === 'GET':\n          return getAccountTypes();\n        case url.endsWith('/actions') && method === 'GET':\n          return getActions();\n        case url.match(/\\/actions\\/\\d+$/) && method === 'GET':\n          return getActionById();\n        case url.match(/\\/actions\\/\\d+$/) && method === 'POST':\n          return approveAction();\n        case url.endsWith('/areanames') && method === 'GET':\n          return getAreaNames();\n        case url.endsWith('/areatypes') && method === 'GET':\n          return getAreaTypes();\n        case url.endsWith('/categories') && method === 'GET':\n          return getCategories();\n        case url.endsWith('/genders') && method === 'GET':\n          return getGenders();\n        case url.endsWith('/transactiontypes') && method === 'GET':\n          return getTransactionTypes();\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n\n    function approveAction(): Observable> {\n      const queriedAction: Action = actions.find((action) => action.id === idFromUrl());\n      queriedAction.approval = body.approval;\n      const message: string = `Action approval status set to ${body.approval} successfully!`;\n      return ok(message);\n    }\n\n    function getAccountTypes(): Observable> {\n      return ok(accountTypes);\n    }\n\n    function getActions(): Observable> {\n      return ok(actions);\n    }\n\n    function getActionById(): Observable> {\n      const queriedAction: Action = actions.find((action) => action.id === idFromUrl());\n      return ok(queriedAction);\n    }\n\n    function getAreaNames(): Observable> {\n      return ok(areaNames);\n    }\n\n    function getAreaTypes(): Observable> {\n      return ok(areaTypes);\n    }\n\n    function getCategories(): Observable> {\n      return ok(categories);\n    }\n\n    function getGenders(): Observable> {\n      return ok(genders);\n    }\n\n    function getTransactionTypes(): Observable> {\n      return ok(transactionTypes);\n    }\n\n    // helper functions\n\n    function error(message): Observable {\n      return throwError({ status: 400, error: { message } });\n    }\n\n    function idFromUrl(): number {\n      const urlParts: Array = url.split('/');\n      return parseInt(urlParts[urlParts.length - 1], 10);\n    }\n\n    function ok(responseBody: any): Observable> {\n      return of(new HttpResponse({ status: 200, body: responseBody }));\n    }\n\n    function stringFromUrl(): string {\n      const urlParts: Array = url.split('/');\n      return urlParts[urlParts.length - 1];\n    }\n  }\n}\n\n/** Exports the MockBackendInterceptor as an Angular provider. */\nexport const MockBackendProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockBackendInterceptor,\n  multi: true,\n};\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NetworkStatusComponent.html":{"url":"components/NetworkStatusComponent.html","title":"component - NetworkStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NetworkStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/network-status/network-status.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-network-status\n            \n\n            \n                styleUrls\n                ./network-status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./network-status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                noInternetConnection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNetworkChange\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/network-status/network-status.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleNetworkChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleNetworkChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/network-status/network-status.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/network-status/network-status.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noInternetConnection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : !navigator.onLine\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/network-status/network-status.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-network-status',\n  templateUrl: './network-status.component.html',\n  styleUrls: ['./network-status.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NetworkStatusComponent implements OnInit {\n  noInternetConnection: boolean = !navigator.onLine;\n\n  constructor(private cdr: ChangeDetectorRef) {\n    this.handleNetworkChange();\n  }\n\n  ngOnInit(): void {}\n\n  handleNetworkChange(): void {\n    setTimeout(() => {\n      if (!navigator.onLine !== this.noInternetConnection) {\n        this.noInternetConnection = !navigator.onLine;\n        this.cdr.detectChanges();\n      }\n      this.handleNetworkChange();\n    }, 5000);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      OFFLINE \n      \n    \n    \n      ONLINE \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./network-status.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                OFFLINE                     ONLINE             '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'NetworkStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/organization/organization.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-organization\n            \n\n            \n                styleUrls\n                ./organization.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                matcher\n                            \n                            \n                                organizationForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    organizationFormStub\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/organization/organization.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/organization/organization.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/organization/organization.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CustomErrorStateMatcher\n\n                        \n                    \n                    \n                        \n                            Default value : new CustomErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/organization/organization.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            organizationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/organization/organization.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/organization/organization.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        organizationFormStub\n                    \n                \n\n                \n                    \n                        getorganizationFormStub()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/settings/organization/organization.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomErrorStateMatcher } from '@app/_helpers';\n\n@Component({\n  selector: 'app-organization',\n  templateUrl: './organization.component.html',\n  styleUrls: ['./organization.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrganizationComponent implements OnInit {\n  organizationForm: FormGroup;\n  submitted: boolean = false;\n  matcher: CustomErrorStateMatcher = new CustomErrorStateMatcher();\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.organizationForm = this.formBuilder.group({\n      disbursement: ['', Validators.required],\n      transfer: '',\n      countryCode: ['', Validators.required],\n    });\n  }\n\n  get organizationFormStub(): any {\n    return this.organizationForm.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n    if (this.organizationForm.invalid || !confirm('Set organization information?')) {\n      return;\n    }\n    this.submitted = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Settings\n          Organization Settings\n        \n      \n      \n        \n          \n            DEFAULT ORGANISATION SETTINGS\n          \n          \n            \n              \n                Default Disbursement *\n                \n                RCU\n                \n                  Default Disbursement is required.\n                \n              \n              \n                Require Transfer Card *\n              \n              \n                Default Country Code *\n                \n                  KE Kenya\n                  US United States\n                  ETH Ethiopia\n                  GER Germany\n                  UG Uganda\n                \n                \n                  Country Code is required.\n                 \n              \n                Submit\n              \n            \n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./organization.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Settings          Organization Settings                                                  DEFAULT ORGANISATION SETTINGS                                                              Default Disbursement *                                RCU                                  Default Disbursement is required.                                                            Require Transfer Card *                                            Default Country Code *                                  KE Kenya                  US United States                  ETH Ethiopia                  GER Germany                  UG Uganda                                                  Country Code is required.                                               Submit                                                                  '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PGPSigner.html":{"url":"classes/PGPSigner.html","title":"class - PGPSigner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PGPSigner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_pgp/pgp-signer.ts\n        \n\n            \n                Description\n            \n            \n                Provides functionality for signing and verifying signed messages. \n\n            \n\n\n            \n                Implements\n            \n            \n                            Signer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                algo\n                            \n                            \n                                dgst\n                            \n                            \n                                engine\n                            \n                            \n                                keyStore\n                            \n                            \n                                loggingService\n                            \n                            \n                                onsign\n                            \n                            \n                                onverify\n                            \n                            \n                                signature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fingerprint\n                            \n                            \n                                    Public\n                                prepare\n                            \n                            \n                                    Public\n                                    Async\n                                sign\n                            \n                            \n                                    Public\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(keyStore: MutableKeyStore)\n                    \n                \n                        \n                            \n                                Defined in src/app/_pgp/pgp-signer.ts:74\n                            \n                        \n\n                \n                    \n                            Initializing the Signer.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        keyStore\n                                                  \n                                                        \n                                                                        MutableKeyStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA keystore holding pgp keys.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            algo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'sha256'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:60\n                            \n                        \n\n                \n                    \n                        Encryption algorithm used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dgst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:62\n                            \n                        \n\n                \n                    \n                        Message digest \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            engine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'pgp'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:64\n                            \n                        \n\n                \n                    \n                        Encryption engine used. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MutableKeyStore\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:66\n                            \n                        \n\n                \n                    \n                        A keystore holding pgp keys. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:68\n                            \n                        \n\n                \n                    \n                        A service that provides logging capabilities. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsign\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:70\n                            \n                        \n\n                \n                    \n                        Event triggered on successful signing of message. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onverify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:72\n                            \n                        \n\n                \n                    \n                        Event triggered on successful verification of a signature. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Signature\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_pgp/pgp-signer.ts:74\n                            \n                        \n\n                \n                    \n                        Generated signature \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fingerprint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fingerprint()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:90\n                \n            \n\n\n            \n                \n                    Get the private key fingerprint.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A private key fingerprint.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            prepare\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    prepare(material: Signable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:99\n                \n            \n\n\n            \n                \n                    Load the message digest.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                                Signable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA signable object.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true - If digest has been loaded successfully.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            sign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sign(digest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:109\n                \n            \n\n\n            \n                \n                    Signs a message using a private key.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    digest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be signed.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(digest: string, signature: Signature)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:144\n                \n            \n\n\n            \n                \n                    Verify that signature is valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    digest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message that was signed.\n\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                Signature\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe generated signature.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as openpgp from 'openpgp';\n\n// Application imports\nimport { MutableKeyStore } from '@app/_pgp/pgp-key-store';\nimport { LoggingService } from '@app/_services/logging.service';\n\n/** Signable object interface */\ninterface Signable {\n  /** The message to be signed. */\n  digest(): string;\n}\n\n/** Signature object interface */\ninterface Signature {\n  /** Encryption algorithm used */\n  algo: string;\n  /** Data to be signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Signer interface */\ninterface Signer {\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  fingerprint(): string;\n  /** Event triggered on successful signing of message. */\n  onsign(signature: Signature): void;\n  /** Event triggered on successful verification of a signature. */\n  onverify(flag: boolean): void;\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  prepare(material: Signable): boolean;\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  sign(digest: string): Promise;\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  verify(digest: string, signature: Signature): void;\n}\n\n/** Provides functionality for signing and verifying signed messages. */\nclass PGPSigner implements Signer {\n  /** Encryption algorithm used */\n  algo = 'sha256';\n  /** Message digest */\n  dgst: string;\n  /** Encryption engine used. */\n  engine = 'pgp';\n  /** A keystore holding pgp keys. */\n  keyStore: MutableKeyStore;\n  /** A service that provides logging capabilities. */\n  loggingService: LoggingService;\n  /** Event triggered on successful signing of message. */\n  onsign: (signature: Signature) => void;\n  /** Event triggered on successful verification of a signature. */\n  onverify: (flag: boolean) => void;\n  /** Generated signature */\n  signature: Signature;\n\n  /**\n   * Initializing the Signer.\n   * @param keyStore - A keystore holding pgp keys.\n   */\n  constructor(keyStore: MutableKeyStore) {\n    this.keyStore = keyStore;\n    this.onsign = (signature: Signature) => {};\n    this.onverify = (flag: boolean) => {};\n  }\n\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  public fingerprint(): string {\n    return this.keyStore.getFingerprint();\n  }\n\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  public prepare(material: Signable): boolean {\n    this.dgst = material.digest();\n    return true;\n  }\n\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  public async sign(digest: string): Promise {\n    const m = openpgp.cleartext.fromText(digest);\n    const pk = this.keyStore.getPrivateKey();\n    if (!pk.isDecrypted()) {\n      const password = window.prompt('password');\n      await pk.decrypt(password);\n    }\n    const opts = {\n      message: m,\n      privateKeys: [pk],\n      detached: true,\n    };\n    openpgp\n      .sign(opts)\n      .then((s) => {\n        this.signature = {\n          engine: this.engine,\n          algo: this.algo,\n          data: s.signature,\n          // TODO: fix for browser later\n          digest,\n        };\n        this.onsign(this.signature);\n      })\n      .catch((e) => {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onsign(undefined);\n      });\n  }\n\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  public verify(digest: string, signature: Signature): void {\n    openpgp.signature\n      .readArmored(signature.data)\n      .then((sig) => {\n        const opts = {\n          message: openpgp.cleartext.fromText(digest),\n          publicKeys: this.keyStore.getTrustedKeys(),\n          signature: sig,\n        };\n        openpgp.verify(opts).then((v) => {\n          let i = 0;\n          for (i = 0; i  {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onverify(false);\n      });\n  }\n}\n\n/** @exports */\nexport { PGPSigner, Signable, Signature, Signer };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PagesComponent.html":{"url":"components/PagesComponent.html","title":"component - PagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/pages.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pages\n            \n\n            \n                styleUrls\n                ./pages.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pages.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/pages.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.dashboardUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/pages.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { environment } from '@src/environments/environment';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PagesComponent {\n  url: string = environment.dashboardUrl;\n\n  constructor() {}\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n        \n      \n      \n        \n          \n             Your browser does not support iframes. \n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./pages.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home                                                   Your browser does not support iframes.                                         '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'PagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\n\nPagesComponent\n\nPagesComponent\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nPagesComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PagesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PagesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PagesRoutingModule } from '@pages/pages-routing.module';\nimport { PagesComponent } from '@pages/pages.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [PagesComponent],\n  imports: [\n    CommonModule,\n    PagesRoutingModule,\n    SharedModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatCardModule,\n  ],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesRoutingModule.html":{"url":"modules/PagesRoutingModule.html","title":"module - PagesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/pages-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PagesComponent } from './pages.component';\n\nconst routes: Routes = [\n  { path: 'home', component: PagesComponent },\n  {\n    path: 'tx',\n    loadChildren: () =>\n      \"import('@pages/transactions/transactions.module').then((m) => m.TransactionsModule)\",\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('@pages/settings/settings.module').then((m) => m.SettingsModule)\",\n  },\n  {\n    path: 'accounts',\n    loadChildren: () => \"import('@pages/accounts/accounts.module').then((m) => m.AccountsModule)\",\n  },\n  {\n    path: 'tokens',\n    loadChildren: () => \"import('@pages/tokens/tokens.module').then((m) => m.TokensModule)\",\n  },\n  {\n    path: 'admin',\n    loadChildren: () => \"import('@pages/admin/admin.module').then((m) => m.AdminModule)\",\n  },\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordToggleDirective.html":{"url":"directives/PasswordToggleDirective.html","title":"directive - PasswordToggleDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PasswordToggleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/_directives/password-toggle.directive.ts\n        \n\n            \n                Description\n            \n            \n                Toggle password form field input visibility \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPasswordToggle]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iconId\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/_directives/password-toggle.directive.ts:15\n                            \n                        \n\n                \n                    \n                            Handle click events on the html element.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA wrapper around a native element inside of a View.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nExtend this base class to implement custom rendering.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        iconId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/_directives/password-toggle.directive.ts:15\n                            \n                        \n                \n                    \n                        The password form field icon id \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/_directives/password-toggle.directive.ts:11\n                            \n                        \n                \n                    \n                        The password form field id \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePasswordVisibility\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/_directives/password-toggle.directive.ts:30\n                \n            \n\n\n            \n                \n                    Toggle the visibility of the password input field value and accompanying icon. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n/** Toggle password form field input visibility */\n@Directive({\n  selector: '[appPasswordToggle]',\n})\nexport class PasswordToggleDirective {\n  /** The password form field id */\n  @Input()\n  id: string;\n\n  /** The password form field icon id */\n  @Input()\n  iconId: string;\n\n  /**\n   * Handle click events on the html element.\n   *\n   * @param elementRef - A wrapper around a native element inside of a View.\n   * @param renderer - Extend this base class to implement custom rendering.\n   */\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {\n    this.renderer.listen(this.elementRef.nativeElement, 'click', () => {\n      this.togglePasswordVisibility();\n    });\n  }\n\n  /** Toggle the visibility of the password input field value and accompanying icon. */\n  togglePasswordVisibility(): void {\n    const password: HTMLElement = document.getElementById(this.id);\n    const icon: HTMLElement = document.getElementById(this.iconId);\n    // @ts-ignore\n    if (password.type === 'password') {\n      // @ts-ignore\n      password.type = 'text';\n      icon.classList.remove('fa-eye');\n      icon.classList.add('fa-eye-slash');\n    } else {\n      // @ts-ignore\n      password.type = 'password';\n      icon.classList.remove('fa-eye-slash');\n      icon.classList.add('fa-eye');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegistryService.html":{"url":"injectables/RegistryService.html","title":"injectable - RegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/registry.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fileGetter\n                            \n                            \n                                    Private\n                                    Static\n                                registry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/registry.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            getRegistry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegistry()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/registry.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fileGetter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileGetter\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpGetter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/registry.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CICRegistry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/registry.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '@src/environments/environment';\nimport { CICRegistry, FileGetter } from '@cicnet/cic-client';\nimport { HttpGetter } from '@app/_helpers';\nimport { Web3Service } from '@app/_services/web3.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistryService {\n  static fileGetter: FileGetter = new HttpGetter();\n  private static registry: CICRegistry;\n\n  constructor() {}\n\n  public static async getRegistry(): Promise {\n    if (!RegistryService.registry) {\n      RegistryService.registry = new CICRegistry(\n        Web3Service.getInstance(),\n        environment.registryAddress,\n        'Registry',\n        RegistryService.fileGetter,\n        ['../../assets/js/block-sync/data']\n      );\n      RegistryService.registry.declaratorHelper.addTrust(environment.trustedDeclaratorAddress);\n      await RegistryService.registry.load();\n    }\n    return RegistryService.registry;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/_guards/role.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Role guard implementation.\nDictates access to routes depending on the user's role.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/_guards/role.guard.ts:21\n                            \n                        \n\n                \n                    \n                            Instantiates the role guard class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides navigation among views and URL manipulation capabilities.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_guards/role.guard.ts:38\n                \n            \n\n\n            \n                \n                    Returns whether navigation to a specific route is acceptable.\nChecks if the user has the required role to access the route.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nContains the information about a route associated with a component loaded in an outlet at a particular moment in time.\nActivatedRouteSnapshot can also be used to traverse the router state tree.\n\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRepresents the state of the router at a moment in time.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        true - If the user's role matches with accepted roles.\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\n\n// Third party imports\nimport { Observable } from 'rxjs';\n\n/**\n * Role guard implementation.\n * Dictates access to routes depending on the user's role.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleGuard implements CanActivate {\n  /**\n   * Instantiates the role guard class.\n   *\n   * @param router - A service that provides navigation among views and URL manipulation capabilities.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Returns whether navigation to a specific route is acceptable.\n   * Checks if the user has the required role to access the route.\n   *\n   * @param route - Contains the information about a route associated with a component loaded in an outlet at a particular moment in time.\n   * ActivatedRouteSnapshot can also be used to traverse the router state tree.\n   * @param state - Represents the state of the router at a moment in time.\n   * @returns true - If the user's role matches with accepted roles.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    const currentUser = JSON.parse(localStorage.getItem(atob('CICADA_USER')));\n    if (currentUser) {\n      if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n        this.router.navigate(['/']);\n        return false;\n      }\n      return true;\n    }\n\n    this.router.navigate(['/auth'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RouterLinkDirectiveStub.html":{"url":"directives/RouterLinkDirectiveStub.html","title":"directive - RouterLinkDirectiveStub","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RouterLinkDirectiveStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/router-link-directive-stub.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appRouterLink]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigatedTo\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                routerLink\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        routerLink\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/testing/router-link-directive-stub.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n            \n                \n                    Defined in src/testing/router-link-directive-stub.ts:13\n                \n            \n\n\n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigatedTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/router-link-directive-stub.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appRouterLink]',\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class RouterLinkDirectiveStub {\n  // tslint:disable-next-line:no-input-rename\n  @Input('routerLink') linkParams: any;\n  navigatedTo: any = null;\n\n  @HostListener('click')\n  onClick(): void {\n    this.navigatedTo = this.linkParams;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafePipe.html":{"url":"pipes/SafePipe.html","title":"pipe - SafePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/_pipes/safe.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(url: string, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/_pipes/safe.pipe.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe',\n})\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(url: string, ...args: unknown[]): unknown {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/settings.ts\n        \n\n            \n                Description\n            \n            \n                Settings class \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registry\n                            \n                            \n                                scanFilter\n                            \n                            \n                                txHelper\n                            \n                            \n                                w3\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scanFilter: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/_models/settings.ts:13\n                            \n                        \n\n                \n                    \n                            Initialize the settings.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scanFilter\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA resource for searching through blocks on the blockchain network.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/settings.ts:4\n                            \n                        \n\n                \n                    \n                        CIC Registry instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scanFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/settings.ts:6\n                            \n                        \n\n                \n                    \n                        A resource for searching through blocks on the blockchain network. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            txHelper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/settings.ts:8\n                            \n                        \n\n                \n                    \n                        Transaction Helper instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            w3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         W3\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    engine: undefined,\n    provider: undefined,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_models/settings.ts:10\n                            \n                        \n\n                \n                    \n                        Web3 Object \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Settings {\n  /** CIC Registry instance */\n  registry: any;\n  /** A resource for searching through blocks on the blockchain network. */\n  scanFilter: any;\n  /** Transaction Helper instance */\n  txHelper: any;\n  /** Web3 Object */\n  w3: W3 = {\n    engine: undefined,\n    provider: undefined,\n  };\n\n  /**\n   * Initialize the settings.\n   *\n   * @param scanFilter - A resource for searching through blocks on the blockchain network.\n   */\n  constructor(scanFilter: any) {\n    this.scanFilter = scanFilter;\n  }\n}\n\n/** Web3 object interface */\ninterface W3 {\n  /** An active web3 instance connected to the blockchain network. */\n  engine: any;\n  /** The connection socket to the blockchain network. */\n  provider: any;\n}\n\n/** @exports */\nexport { Settings, W3 };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                date\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                trustedUsers\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFilter\n                            \n                            \n                                downloadCsv\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndoFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadCsv\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/settings/settings.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'email', 'userId']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trustedUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AuthService } from '@app/_services';\nimport { Staff } from '@app/_models/staff';\nimport { exportCsv } from '@app/_helpers';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsComponent implements OnInit {\n  date: string;\n  dataSource: MatTableDataSource;\n  displayedColumns: Array = ['name', 'email', 'userId'];\n  trustedUsers: Array;\n  userInfo: Staff;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private authService: AuthService) {}\n\n  async ngOnInit(): Promise {\n    await this.authService.init();\n    this.authService.trustedUsersSubject.subscribe((users) => {\n      this.dataSource = new MatTableDataSource(users);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.trustedUsers = users;\n    });\n    this.userInfo = this.authService.getPrivateKeyInfo();\n  }\n\n  doFilter(value: string): void {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  downloadCsv(): void {\n    exportCsv(this.trustedUsers, 'users');\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Settings\n        \n      \n      \n        \n          \n             ACCOUNT MANAGEMENT \n            \n              CICADA Admin Credentials\n              UserId:  {{ userInfo?.userid }} \n              Username:  {{ userInfo?.name }} \n              Email:  {{ userInfo?.email }} \n            \n            \n            \n              \n                LOGOUT ADMIN\n              \n            \n          \n        \n        \n          \n            \n              \n                TRUSTED USERS\n                \n                  EXPORT\n                \n              \n            \n            \n              \n                 Filter \n                \n                search\n              \n              \n                \n                   NAME \n                   {{ user.name }} \n                \n\n                \n                   EMAIL \n                   {{ user.email }} \n                \n\n                \n                   USER ID \n                   {{ user.userid }} \n                \n\n                \n                \n              \n\n              \n            \n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Settings                                                   ACCOUNT MANAGEMENT                           CICADA Admin Credentials              UserId:  {{ userInfo?.userid }}               Username:  {{ userInfo?.name }}               Email:  {{ userInfo?.email }}                                                                   LOGOUT ADMIN                                                                                                        TRUSTED USERS                                  EXPORT                                                                                     Filter                                 search                                                               NAME                    {{ user.name }}                                                    EMAIL                    {{ user.email }}                                                    USER ID                    {{ user.userid }}                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_declarations\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nOrganizationComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSettingsModule -->\n\nSharedModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganizationComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from '@pages/settings/settings-routing.module';\nimport { SettingsComponent } from '@pages/settings/settings.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { OrganizationComponent } from '@pages/settings/organization/organization.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [SettingsComponent, OrganizationComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    SharedModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsComponent } from '@pages/settings/settings.component';\nimport { OrganizationComponent } from '@pages/settings/organization/organization.component';\n\nconst routes: Routes = [\n  { path: '', component: SettingsComponent },\n  { path: 'organization', component: OrganizationComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nErrorDialogComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nMenuSelectionDirective\n\nMenuSelectionDirective\n\nSharedModule -->\n\nMenuSelectionDirective->SharedModule\n\n\n\n\n\nMenuToggleDirective\n\nMenuToggleDirective\n\nSharedModule -->\n\nMenuToggleDirective->SharedModule\n\n\n\n\n\nNetworkStatusComponent\n\nNetworkStatusComponent\n\nSharedModule -->\n\nNetworkStatusComponent->SharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nSharedModule -->\n\nSafePipe->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\nTokenRatioPipe\n\nTokenRatioPipe\n\nSharedModule -->\n\nTokenRatioPipe->SharedModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nSharedModule -->\n\nTopbarComponent->SharedModule\n\n\n\n\n\nUnixDatePipe\n\nUnixDatePipe\n\nSharedModule -->\n\nUnixDatePipe->SharedModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nMenuSelectionDirective \n\nMenuSelectionDirective \n\nMenuSelectionDirective  -->\n\nSharedModule->MenuSelectionDirective \n\n\n\n\n\nNetworkStatusComponent \n\nNetworkStatusComponent \n\nNetworkStatusComponent  -->\n\nSharedModule->NetworkStatusComponent \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nSharedModule->SafePipe \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\n\n\nTokenRatioPipe \n\nTokenRatioPipe \n\nTokenRatioPipe  -->\n\nSharedModule->TokenRatioPipe \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nSharedModule->TopbarComponent \n\n\n\n\n\nUnixDatePipe \n\nUnixDatePipe \n\nUnixDatePipe  -->\n\nSharedModule->UnixDatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorDialogComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            MenuSelectionDirective\n                        \n                        \n                            MenuToggleDirective\n                        \n                        \n                            NetworkStatusComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TokenRatioPipe\n                        \n                        \n                            TopbarComponent\n                        \n                        \n                            UnixDatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            MenuSelectionDirective\n                        \n                        \n                            NetworkStatusComponent\n                        \n                        \n                            SafePipe\n                        \n                        \n                            SidebarComponent\n                        \n                        \n                            TokenRatioPipe\n                        \n                        \n                            TopbarComponent\n                        \n                        \n                            UnixDatePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopbarComponent } from '@app/shared/topbar/topbar.component';\nimport { FooterComponent } from '@app/shared/footer/footer.component';\nimport { SidebarComponent } from '@app/shared/sidebar/sidebar.component';\nimport { MenuSelectionDirective } from '@app/shared/_directives/menu-selection.directive';\nimport { MenuToggleDirective } from '@app/shared/_directives/menu-toggle.directive';\nimport { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TokenRatioPipe } from '@app/shared/_pipes/token-ratio.pipe';\nimport { ErrorDialogComponent } from '@app/shared/error-dialog/error-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SafePipe } from '@app/shared/_pipes/safe.pipe';\nimport { NetworkStatusComponent } from './network-status/network-status.component';\nimport { UnixDatePipe } from './_pipes/unix-date.pipe';\n\n@NgModule({\n  declarations: [\n    TopbarComponent,\n    FooterComponent,\n    SidebarComponent,\n    MenuSelectionDirective,\n    MenuToggleDirective,\n    TokenRatioPipe,\n    ErrorDialogComponent,\n    SafePipe,\n    NetworkStatusComponent,\n    UnixDatePipe,\n  ],\n  exports: [\n    TopbarComponent,\n    FooterComponent,\n    SidebarComponent,\n    MenuSelectionDirective,\n    TokenRatioPipe,\n    SafePipe,\n    NetworkStatusComponent,\n    UnixDatePipe,\n  ],\n  imports: [CommonModule, RouterModule, MatIconModule, MatDialogModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/sidebar/sidebar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n      \n      CICADA\n    \n\n    \n      \n        \n          \n           Dashboard \n        \n      \n      \n        \n          \n           Accounts \n        \n      \n      \n        \n          \n           Transactions \n        \n      \n      \n        \n          \n           Tokens \n        \n      \n      \n        \n          \n           Settings \n        \n      \n      -->\n      -->\n      -->\n       Admin -->\n      -->\n      -->\n    \n  \n\n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  CICADA                                           Dashboard                                                  Accounts                                                  Transactions                                                  Tokens                                                  Settings                     -->      -->      -->       Admin -->      -->      -->      '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarStubComponent.html":{"url":"components/SidebarStubComponent.html","title":"component - SidebarStubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarStubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/testing/shared-module-stub.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({ selector: 'app-sidebar', template: '' })\nexport class SidebarStubComponent {}\n\n@Component({ selector: 'app-topbar', template: '' })\nexport class TopbarStubComponent {}\n\n@Component({ selector: 'app-footer', template: '' })\nexport class FooterStubComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidebarStubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Signable.html":{"url":"interfaces/Signable.html","title":"interface - Signable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Signable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_pgp/pgp-signer.ts\n        \n\n            \n                Description\n            \n            \n                Signable object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    digest\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            digest\n                        \n                        \n                    \n                \n            \n            \n                \ndigest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:11\n                \n            \n\n\n            \n                \n                    The message to be signed. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as openpgp from 'openpgp';\n\n// Application imports\nimport { MutableKeyStore } from '@app/_pgp/pgp-key-store';\nimport { LoggingService } from '@app/_services/logging.service';\n\n/** Signable object interface */\ninterface Signable {\n  /** The message to be signed. */\n  digest(): string;\n}\n\n/** Signature object interface */\ninterface Signature {\n  /** Encryption algorithm used */\n  algo: string;\n  /** Data to be signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Signer interface */\ninterface Signer {\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  fingerprint(): string;\n  /** Event triggered on successful signing of message. */\n  onsign(signature: Signature): void;\n  /** Event triggered on successful verification of a signature. */\n  onverify(flag: boolean): void;\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  prepare(material: Signable): boolean;\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  sign(digest: string): Promise;\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  verify(digest: string, signature: Signature): void;\n}\n\n/** Provides functionality for signing and verifying signed messages. */\nclass PGPSigner implements Signer {\n  /** Encryption algorithm used */\n  algo = 'sha256';\n  /** Message digest */\n  dgst: string;\n  /** Encryption engine used. */\n  engine = 'pgp';\n  /** A keystore holding pgp keys. */\n  keyStore: MutableKeyStore;\n  /** A service that provides logging capabilities. */\n  loggingService: LoggingService;\n  /** Event triggered on successful signing of message. */\n  onsign: (signature: Signature) => void;\n  /** Event triggered on successful verification of a signature. */\n  onverify: (flag: boolean) => void;\n  /** Generated signature */\n  signature: Signature;\n\n  /**\n   * Initializing the Signer.\n   * @param keyStore - A keystore holding pgp keys.\n   */\n  constructor(keyStore: MutableKeyStore) {\n    this.keyStore = keyStore;\n    this.onsign = (signature: Signature) => {};\n    this.onverify = (flag: boolean) => {};\n  }\n\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  public fingerprint(): string {\n    return this.keyStore.getFingerprint();\n  }\n\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  public prepare(material: Signable): boolean {\n    this.dgst = material.digest();\n    return true;\n  }\n\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  public async sign(digest: string): Promise {\n    const m = openpgp.cleartext.fromText(digest);\n    const pk = this.keyStore.getPrivateKey();\n    if (!pk.isDecrypted()) {\n      const password = window.prompt('password');\n      await pk.decrypt(password);\n    }\n    const opts = {\n      message: m,\n      privateKeys: [pk],\n      detached: true,\n    };\n    openpgp\n      .sign(opts)\n      .then((s) => {\n        this.signature = {\n          engine: this.engine,\n          algo: this.algo,\n          data: s.signature,\n          // TODO: fix for browser later\n          digest,\n        };\n        this.onsign(this.signature);\n      })\n      .catch((e) => {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onsign(undefined);\n      });\n  }\n\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  public verify(digest: string, signature: Signature): void {\n    openpgp.signature\n      .readArmored(signature.data)\n      .then((sig) => {\n        const opts = {\n          message: openpgp.cleartext.fromText(digest),\n          publicKeys: this.keyStore.getTrustedKeys(),\n          signature: sig,\n        };\n        openpgp.verify(opts).then((v) => {\n          let i = 0;\n          for (i = 0; i  {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onverify(false);\n      });\n  }\n}\n\n/** @exports */\nexport { PGPSigner, Signable, Signature, Signer };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Signature.html":{"url":"interfaces/Signature.html","title":"interface - Signature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Signature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/account.ts\n        \n\n            \n                Description\n            \n            \n                Meta signature interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        algo\n                                \n                                \n                                        data\n                                \n                                \n                                        digest\n                                \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        algo\n                                    \n                                \n                                \n                                    \n                                        algo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Algorithm used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data that was signed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        digest\n                                    \n                                \n                                \n                                    \n                                        digest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message digest \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Encryption engine used. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface AccountDetails {\n  /** Age of user */\n  age?: string;\n  /** Token balance on account */\n  balance?: number;\n  /** Business category of user. */\n  category?: string;\n  /** Account registration day */\n  date_registered: number;\n  /** User's gender */\n  gender: string;\n  /** Account identifiers */\n  identities: {\n    evm: {\n      'bloxberg:8996': string[];\n      'oldchain:1': string[];\n    };\n    latitude: number;\n    longitude: number;\n  };\n  /** User's location */\n  location: {\n    area?: string;\n    area_name: string;\n    area_type?: string;\n  };\n  /** Products or services provided by user. */\n  products: string[];\n  /** Type of account */\n  type?: string;\n  /** Personal identifying information of user */\n  vcard: {\n    email: [\n      {\n        value: string;\n      }\n    ];\n    fn: [\n      {\n        value: string;\n      }\n    ];\n    n: [\n      {\n        value: string[];\n      }\n    ];\n    tel: [\n      {\n        meta: {\n          TYP: string[];\n        };\n        value: string;\n      }\n    ];\n    version: [\n      {\n        value: string;\n      }\n    ];\n  };\n}\n\n/** Meta signature interface */\ninterface Signature {\n  /** Algorithm used */\n  algo: string;\n  /** Data that was signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Meta object interface */\ninterface Meta {\n  /** Account details */\n  data: AccountDetails;\n  /** Meta store id */\n  id: string;\n  /** Signature used during write. */\n  signature: Signature;\n}\n\n/** Meta response interface */\ninterface MetaResponse {\n  /** Meta store id */\n  id: string;\n  /** Meta object */\n  m: Meta;\n}\n\n/** Default account data object */\nconst defaultAccount: AccountDetails = {\n  date_registered: Date.now(),\n  gender: 'other',\n  identities: {\n    evm: {\n      'bloxberg:8996': [''],\n      'oldchain:1': [''],\n    },\n    latitude: 0,\n    longitude: 0,\n  },\n  location: {\n    area_name: 'Kilifi',\n  },\n  products: [],\n  vcard: {\n    email: [\n      {\n        value: '',\n      },\n    ],\n    fn: [\n      {\n        value: 'Sarafu Contract',\n      },\n    ],\n    n: [\n      {\n        value: ['Sarafu', 'Contract'],\n      },\n    ],\n    tel: [\n      {\n        meta: {\n          TYP: [],\n        },\n        value: '+254700000000',\n      },\n    ],\n    version: [\n      {\n        value: '3.0',\n      },\n    ],\n  },\n};\n\n/** @exports */\nexport { AccountDetails, Meta, MetaResponse, Signature, defaultAccount };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Signature-1.html":{"url":"interfaces/Signature-1.html","title":"interface - Signature-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Signature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_pgp/pgp-signer.ts\n        \n\n            \n                Description\n            \n            \n                Signature object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        algo\n                                \n                                \n                                        data\n                                \n                                \n                                        digest\n                                \n                                \n                                        engine\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        algo\n                                    \n                                \n                                \n                                    \n                                        algo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Encryption algorithm used \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data to be signed. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        digest\n                                    \n                                \n                                \n                                    \n                                        digest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Message digest \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Encryption engine used. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import * as openpgp from 'openpgp';\n\n// Application imports\nimport { MutableKeyStore } from '@app/_pgp/pgp-key-store';\nimport { LoggingService } from '@app/_services/logging.service';\n\n/** Signable object interface */\ninterface Signable {\n  /** The message to be signed. */\n  digest(): string;\n}\n\n/** Signature object interface */\ninterface Signature {\n  /** Encryption algorithm used */\n  algo: string;\n  /** Data to be signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Signer interface */\ninterface Signer {\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  fingerprint(): string;\n  /** Event triggered on successful signing of message. */\n  onsign(signature: Signature): void;\n  /** Event triggered on successful verification of a signature. */\n  onverify(flag: boolean): void;\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  prepare(material: Signable): boolean;\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  sign(digest: string): Promise;\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  verify(digest: string, signature: Signature): void;\n}\n\n/** Provides functionality for signing and verifying signed messages. */\nclass PGPSigner implements Signer {\n  /** Encryption algorithm used */\n  algo = 'sha256';\n  /** Message digest */\n  dgst: string;\n  /** Encryption engine used. */\n  engine = 'pgp';\n  /** A keystore holding pgp keys. */\n  keyStore: MutableKeyStore;\n  /** A service that provides logging capabilities. */\n  loggingService: LoggingService;\n  /** Event triggered on successful signing of message. */\n  onsign: (signature: Signature) => void;\n  /** Event triggered on successful verification of a signature. */\n  onverify: (flag: boolean) => void;\n  /** Generated signature */\n  signature: Signature;\n\n  /**\n   * Initializing the Signer.\n   * @param keyStore - A keystore holding pgp keys.\n   */\n  constructor(keyStore: MutableKeyStore) {\n    this.keyStore = keyStore;\n    this.onsign = (signature: Signature) => {};\n    this.onverify = (flag: boolean) => {};\n  }\n\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  public fingerprint(): string {\n    return this.keyStore.getFingerprint();\n  }\n\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  public prepare(material: Signable): boolean {\n    this.dgst = material.digest();\n    return true;\n  }\n\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  public async sign(digest: string): Promise {\n    const m = openpgp.cleartext.fromText(digest);\n    const pk = this.keyStore.getPrivateKey();\n    if (!pk.isDecrypted()) {\n      const password = window.prompt('password');\n      await pk.decrypt(password);\n    }\n    const opts = {\n      message: m,\n      privateKeys: [pk],\n      detached: true,\n    };\n    openpgp\n      .sign(opts)\n      .then((s) => {\n        this.signature = {\n          engine: this.engine,\n          algo: this.algo,\n          data: s.signature,\n          // TODO: fix for browser later\n          digest,\n        };\n        this.onsign(this.signature);\n      })\n      .catch((e) => {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onsign(undefined);\n      });\n  }\n\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  public verify(digest: string, signature: Signature): void {\n    openpgp.signature\n      .readArmored(signature.data)\n      .then((sig) => {\n        const opts = {\n          message: openpgp.cleartext.fromText(digest),\n          publicKeys: this.keyStore.getTrustedKeys(),\n          signature: sig,\n        };\n        openpgp.verify(opts).then((v) => {\n          let i = 0;\n          for (i = 0; i  {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onverify(false);\n      });\n  }\n}\n\n/** @exports */\nexport { PGPSigner, Signable, Signature, Signer };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Signer.html":{"url":"interfaces/Signer.html","title":"interface - Signer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Signer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_pgp/pgp-signer.ts\n        \n\n            \n                Description\n            \n            \n                Signer interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fingerprint\n                                \n                                \n                                    onsign\n                                \n                                \n                                    onverify\n                                \n                                \n                                    prepare\n                                \n                                \n                                    sign\n                                \n                                \n                                    verify\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fingerprint\n                        \n                        \n                    \n                \n            \n            \n                \nfingerprint()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:32\n                \n            \n\n\n            \n                \n                    Get the private key fingerprint.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A private key fingerprint.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onsign\n                        \n                        \n                    \n                \n            \n            \n                \nonsign(signature: Signature)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:34\n                \n            \n\n\n            \n                \n                    Event triggered on successful signing of message. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signature\n                                    \n                                                Signature\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onverify\n                        \n                        \n                    \n                \n            \n            \n                \nonverify(flag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:36\n                \n            \n\n\n            \n                \n                    Event triggered on successful verification of a signature. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepare\n                        \n                        \n                    \n                \n            \n            \n                \nprepare(material: Signable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:42\n                \n            \n\n\n            \n                \n                    Load the message digest.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                                Signable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA signable object.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true - If digest has been loaded successfully.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sign\n                        \n                        \n                    \n                \n            \n            \n                \nsign(digest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:48\n                \n            \n\n\n            \n                \n                    Signs a message using a private key.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    digest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message to be signed.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verify\n                        \n                        \n                    \n                \n            \n            \n                \nverify(digest: string, signature: Signature)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_pgp/pgp-signer.ts:54\n                \n            \n\n\n            \n                \n                    Verify that signature is valid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    digest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe message that was signed.\n\n\n                                    \n                                \n                                \n                                    signature\n                                    \n                                                Signature\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe generated signature.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as openpgp from 'openpgp';\n\n// Application imports\nimport { MutableKeyStore } from '@app/_pgp/pgp-key-store';\nimport { LoggingService } from '@app/_services/logging.service';\n\n/** Signable object interface */\ninterface Signable {\n  /** The message to be signed. */\n  digest(): string;\n}\n\n/** Signature object interface */\ninterface Signature {\n  /** Encryption algorithm used */\n  algo: string;\n  /** Data to be signed. */\n  data: string;\n  /** Message digest */\n  digest: string;\n  /** Encryption engine used. */\n  engine: string;\n}\n\n/** Signer interface */\ninterface Signer {\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  fingerprint(): string;\n  /** Event triggered on successful signing of message. */\n  onsign(signature: Signature): void;\n  /** Event triggered on successful verification of a signature. */\n  onverify(flag: boolean): void;\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  prepare(material: Signable): boolean;\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  sign(digest: string): Promise;\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  verify(digest: string, signature: Signature): void;\n}\n\n/** Provides functionality for signing and verifying signed messages. */\nclass PGPSigner implements Signer {\n  /** Encryption algorithm used */\n  algo = 'sha256';\n  /** Message digest */\n  dgst: string;\n  /** Encryption engine used. */\n  engine = 'pgp';\n  /** A keystore holding pgp keys. */\n  keyStore: MutableKeyStore;\n  /** A service that provides logging capabilities. */\n  loggingService: LoggingService;\n  /** Event triggered on successful signing of message. */\n  onsign: (signature: Signature) => void;\n  /** Event triggered on successful verification of a signature. */\n  onverify: (flag: boolean) => void;\n  /** Generated signature */\n  signature: Signature;\n\n  /**\n   * Initializing the Signer.\n   * @param keyStore - A keystore holding pgp keys.\n   */\n  constructor(keyStore: MutableKeyStore) {\n    this.keyStore = keyStore;\n    this.onsign = (signature: Signature) => {};\n    this.onverify = (flag: boolean) => {};\n  }\n\n  /**\n   * Get the private key fingerprint.\n   * @returns A private key fingerprint.\n   */\n  public fingerprint(): string {\n    return this.keyStore.getFingerprint();\n  }\n\n  /**\n   * Load the message digest.\n   * @param material - A signable object.\n   * @returns true - If digest has been loaded successfully.\n   */\n  public prepare(material: Signable): boolean {\n    this.dgst = material.digest();\n    return true;\n  }\n\n  /**\n   * Signs a message using a private key.\n   * @async\n   * @param digest - The message to be signed.\n   */\n  public async sign(digest: string): Promise {\n    const m = openpgp.cleartext.fromText(digest);\n    const pk = this.keyStore.getPrivateKey();\n    if (!pk.isDecrypted()) {\n      const password = window.prompt('password');\n      await pk.decrypt(password);\n    }\n    const opts = {\n      message: m,\n      privateKeys: [pk],\n      detached: true,\n    };\n    openpgp\n      .sign(opts)\n      .then((s) => {\n        this.signature = {\n          engine: this.engine,\n          algo: this.algo,\n          data: s.signature,\n          // TODO: fix for browser later\n          digest,\n        };\n        this.onsign(this.signature);\n      })\n      .catch((e) => {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onsign(undefined);\n      });\n  }\n\n  /**\n   * Verify that signature is valid.\n   * @param digest - The message that was signed.\n   * @param signature - The generated signature.\n   */\n  public verify(digest: string, signature: Signature): void {\n    openpgp.signature\n      .readArmored(signature.data)\n      .then((sig) => {\n        const opts = {\n          message: openpgp.cleartext.fromText(digest),\n          publicKeys: this.keyStore.getTrustedKeys(),\n          signature: sig,\n        };\n        openpgp.verify(opts).then((v) => {\n          let i = 0;\n          for (i = 0; i  {\n        this.loggingService.sendErrorLevelMessage(e.message, this, { error: e });\n        this.onverify(false);\n      });\n  }\n}\n\n/** @exports */\nexport { PGPSigner, Signable, Signature, Signer };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Staff.html":{"url":"interfaces/Staff.html","title":"interface - Staff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Staff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/staff.ts\n        \n\n            \n                Description\n            \n            \n                Staff object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        comment\n                                \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        tag\n                                \n                                \n                                        userid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comment made on the public key. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email used to create the public key. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the owner of the public key \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tags added to the public key. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User ID of the owner of the public key. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface Staff {\n  /** Comment made on the public key. */\n  comment: string;\n  /** Email used to create the public key. */\n  email: string;\n  /** Name of the owner of the public key */\n  name: string;\n  /** Tags added to the public key. */\n  tag: number;\n  /** User ID of the owner of the public key. */\n  userid: string;\n}\n\n/** @exports */\nexport { Staff };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/token.ts\n        \n\n            \n                Description\n            \n            \n                Token object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        decimals\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        owner\n                                \n                                \n                                            Optional\n                                        reserveRatio\n                                \n                                \n                                            Optional\n                                        reserves\n                                \n                                \n                                        supply\n                                \n                                \n                                        symbol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Address of the deployed token contract. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                    \n                                \n                                \n                                    \n                                        decimals:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of decimals to convert to smallest denomination of the token. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the token. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Address of account that deployed token. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reserveRatio\n                                    \n                                \n                                \n                                    \n                                        reserveRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Token reserve to token minting ratio. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reserves\n                                    \n                                \n                                \n                                    \n                                        reserves:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Token reserve information \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        supply\n                                    \n                                \n                                \n                                    \n                                        supply:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total token supply. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique token symbol. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        interface Token {\n  /** Address of the deployed token contract. */\n  address: string;\n  /** Number of decimals to convert to smallest denomination of the token. */\n  decimals: string;\n  /** Name of the token. */\n  name: string;\n  /** Address of account that deployed token. */\n  owner?: string;\n  /** Token reserve to token minting ratio. */\n  reserveRatio?: string;\n  /** Token reserve information */\n  reserves?: {\n    '0xa686005CE37Dce7738436256982C3903f2E4ea8E'?: {\n      weight: string;\n      balance: string;\n    };\n  };\n  /** Total token supply. */\n  supply: string;\n  /** The unique token symbol. */\n  symbol: string;\n}\n\n/** @exports */\nexport { Token };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TokenDetailsComponent.html":{"url":"components/TokenDetailsComponent.html","title":"component - TokenDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TokenDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tokens/token-details/token-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-token-details\n            \n\n            \n                styleUrls\n                ./token-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./token-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeWindow\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tokens/token-details/token-details.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n                \n                    \n                        Type :         Token\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tokens/token-details/token-details.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeWindow\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/tokens/token-details/token-details.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/token-details/token-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/token-details/token-details.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Token } from '@app/_models';\n\n@Component({\n  selector: 'app-token-details',\n  templateUrl: './token-details.component.html',\n  styleUrls: ['./token-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TokenDetailsComponent implements OnInit {\n  @Input() token: Token;\n\n  @Output() closeWindow: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  close(): void {\n    this.token = null;\n    this.closeWindow.emit(this.token);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        TOKEN DETAILS\n        \n          CLOSE\n        \n      \n    \n    \n      \n        Name: {{ token?.name }}\n      \n      \n        Symbol: {{ token?.symbol }}\n      \n      \n        Address: {{ token?.address }}\n      \n      \n        Details: A community inclusive currency for trading among lower to\n          middle income societies.\n      \n      \n        Supply: {{ token?.supply | tokenRatio }}\n      \n      \n      \n        Reserve\n        \n          Weight: {{ token?.reserveRatio }}\n        \n        \n          Owner: {{ token?.owner }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./token-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    TOKEN DETAILS                  CLOSE                                    Name: {{ token?.name }}                    Symbol: {{ token?.symbol }}                    Address: {{ token?.address }}                    Details: A community inclusive currency for trading among lower to          middle income societies.                    Supply: {{ token?.supply | tokenRatio }}                          Reserve                  Weight: {{ token?.reserveRatio }}                          Owner: {{ token?.owner }}                    '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TokenDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TokenRatioPipe.html":{"url":"pipes/TokenRatioPipe.html","title":"pipe - TokenRatioPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TokenRatioPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/_pipes/token-ratio.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        tokenRatio\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/_pipes/token-ratio.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'tokenRatio' })\nexport class TokenRatioPipe implements PipeTransform {\n  transform(value: any = 0, ...args): any {\n    return Number(value) / Math.pow(10, 6);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenRegistry.html":{"url":"classes/TokenRegistry.html","title":"class - TokenRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_eth/token-registry.ts\n        \n\n            \n                Description\n            \n            \n                Provides an instance of the token registry contract.\nAllows querying of tokens that have been registered as valid tokens in the network.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contract\n                            \n                            \n                                contractAddress\n                            \n                            \n                                signerAddress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                addressOf\n                            \n                            \n                                    Public\n                                    Async\n                                entry\n                            \n                            \n                                    Public\n                                    Async\n                                totalTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contractAddress: string, signerAddress?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/_eth/token-registry.ts:26\n                            \n                        \n\n                \n                    \n                            Create a connection to the deployed token registry contract.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        contractAddress\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe deployed token registry contract's address.\n\n\n                                                        \n                                                \n                                                \n                                                        signerAddress\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nThe account address of the account that deployed the token registry contract.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/token-registry.ts:22\n                            \n                        \n\n                \n                    \n                        The instance of the token registry contract. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contractAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/token-registry.ts:24\n                            \n                        \n\n                \n                    \n                        The deployed token registry contract's address. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signerAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_eth/token-registry.ts:26\n                            \n                        \n\n                \n                    \n                        The account address of the account that deployed the token registry contract. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            addressOf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addressOf(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/token-registry.ts:57\n                \n            \n\n\n            \n                \n                    Returns the address of the token with a given identifier.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name or identifier of the token to be fetched from the token registry.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints the address of the token with the identifier &#39;sarafu&#39;:\n```typescript\n\nconsole.log(await addressOf(&#39;sarafu&#39;));\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The address of the token assigned the specified identifier in the token registry.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            entry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entry(serial: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/token-registry.ts:75\n                \n            \n\n\n            \n                \n                    Returns the address of a token with the given serial in the token registry.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    serial\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe serial number of the token to be fetched.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints the address of the token with the serial &#39;2&#39;:\n```typescript\n\nconsole.log(await entry(2));\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The address of the token with the specified serial number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            totalTokens\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    totalTokens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_eth/token-registry.ts:91\n                \n            \n\n\n            \n                \n                    Returns the total number of tokens that have been registered in the network.\n\n\n                    \n                        Example :\n                        \n                            Prints the total number of registered tokens:\n```typescript\n\nconsole.log(await totalTokens());\n```\n\n                        \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The total number of registered tokens.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import Web3 from 'web3';\n\n// Application imports\nimport { environment } from '@src/environments/environment';\nimport { Web3Service } from '@app/_services/web3.service';\n\n/** Fetch the token registry contract's ABI. */\nconst abi: Array = require('@src/assets/js/block-sync/data/TokenUniqueSymbolIndex.json');\n/** Establish a connection to the blockchain network. */\nconst web3: Web3 = Web3Service.getInstance();\n\n/**\n * Provides an instance of the token registry contract.\n * Allows querying of tokens that have been registered as valid tokens in the network.\n *\n * @remarks\n * This is our interface to the token registry contract.\n */\nexport class TokenRegistry {\n  /** The instance of the token registry contract. */\n  contract: any;\n  /** The deployed token registry contract's address. */\n  contractAddress: string;\n  /** The account address of the account that deployed the token registry contract. */\n  signerAddress: string;\n\n  /**\n   * Create a connection to the deployed token registry contract.\n   *\n   * @param contractAddress - The deployed token registry contract's address.\n   * @param signerAddress - The account address of the account that deployed the token registry contract.\n   */\n  constructor(contractAddress: string, signerAddress?: string) {\n    this.contractAddress = contractAddress;\n    this.contract = new web3.eth.Contract(abi, this.contractAddress);\n    if (signerAddress) {\n      this.signerAddress = signerAddress;\n    } else {\n      this.signerAddress = web3.eth.accounts[0];\n    }\n  }\n\n  /**\n   * Returns the address of the token with a given identifier.\n   *\n   * @async\n   * @example\n   * Prints the address of the token with the identifier 'sarafu':\n   * ```typescript\n   * console.log(await addressOf('sarafu'));\n   * ```\n   *\n   * @param identifier - The name or identifier of the token to be fetched from the token registry.\n   * @returns The address of the token assigned the specified identifier in the token registry.\n   */\n  public async addressOf(identifier: string): Promise {\n    const id: string = web3.eth.abi.encodeParameter('bytes32', web3.utils.toHex(identifier));\n    return await this.contract.methods.addressOf(id).call();\n  }\n\n  /**\n   * Returns the address of a token with the given serial in the token registry.\n   *\n   * @async\n   * @example\n   * Prints the address of the token with the serial '2':\n   * ```typescript\n   * console.log(await entry(2));\n   * ```\n   *\n   * @param serial - The serial number of the token to be fetched.\n   * @return The address of the token with the specified serial number.\n   */\n  public async entry(serial: number): Promise {\n    return await this.contract.methods.entry(serial).call();\n  }\n\n  /**\n   * Returns the total number of tokens that have been registered in the network.\n   *\n   * @async\n   * @example\n   * Prints the total number of registered tokens:\n   * ```typescript\n   * console.log(await totalTokens());\n   * ```\n   *\n   * @returns The total number of registered tokens.\n   */\n  public async totalTokens(): Promise {\n    return await this.contract.methods.entryCount().call();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                registry\n                            \n                            \n                                tokenRegistry\n                            \n                            \n                                tokens\n                            \n                            \n                                    Private\n                                tokensList\n                            \n                            \n                                tokensSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToken\n                            \n                            \n                                    Async\n                                getTokenBalance\n                            \n                            \n                                    Async\n                                getTokenByAddress\n                            \n                            \n                                    Async\n                                getTokenBySymbol\n                            \n                            \n                                    Async\n                                getTokenName\n                            \n                            \n                                    Async\n                                getTokens\n                            \n                            \n                                    Async\n                                getTokenSymbol\n                            \n                            \n                                    Async\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/token.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToken\n                        \n                        \n                    \n                \n            \n            \n                \naddToken(token: Token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                Token\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenBalance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenBalance(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenByAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenByAddress(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenBySymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenBySymbol(symbol: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    symbol\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokens\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTokenSymbol\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenSymbol()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/token.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CICRegistry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenRegistry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenRegistry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tokensList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject>\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject>(\n    this.tokens\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokensSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.tokensList.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/token.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CICRegistry } from '@cicnet/cic-client';\nimport { TokenRegistry } from '@app/_eth';\nimport { RegistryService } from '@app/_services/registry.service';\nimport { Token } from '@app/_models';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenService {\n  registry: CICRegistry;\n  tokenRegistry: TokenRegistry;\n  tokens: Array = [];\n  private tokensList: BehaviorSubject> = new BehaviorSubject>(\n    this.tokens\n  );\n  tokensSubject: Observable> = this.tokensList.asObservable();\n  load: BehaviorSubject = new BehaviorSubject(false);\n\n  constructor() {}\n\n  async init(): Promise {\n    this.registry = await RegistryService.getRegistry();\n    this.tokenRegistry = new TokenRegistry(\n      await this.registry.getContractAddressByName('TokenRegistry')\n    );\n    this.load.next(true);\n  }\n\n  addToken(token: Token): void {\n    const savedIndex = this.tokens.findIndex((tk) => tk.address === token.address);\n    if (savedIndex === 0) {\n      return;\n    }\n    if (savedIndex > 0) {\n      this.tokens.splice(savedIndex, 1);\n    }\n    this.tokens.unshift(token);\n    this.tokensList.next(this.tokens);\n  }\n\n  async getTokens(): Promise {\n    const count: number = await this.tokenRegistry.totalTokens();\n    for (let i = 0; i  {\n    const token: any = {};\n    const tokenContract = await this.registry.addToken(address);\n    token.address = address;\n    token.name = await tokenContract.methods.name().call();\n    token.symbol = await tokenContract.methods.symbol().call();\n    token.supply = await tokenContract.methods.totalSupply().call();\n    token.decimals = await tokenContract.methods.decimals().call();\n    return token;\n  }\n\n  async getTokenBySymbol(symbol: string): Promise> {\n    const tokenSubject: Subject = new Subject();\n    await this.getTokens();\n    this.tokensSubject.subscribe((tokens) => {\n      const queriedToken = tokens.find((token) => token.symbol === symbol);\n      tokenSubject.next(queriedToken);\n    });\n    return tokenSubject.asObservable();\n  }\n\n  async getTokenBalance(address: string): Promise Promise> {\n    const token = await this.registry.addToken(await this.tokenRegistry.entry(0));\n    return await token.methods.balanceOf(address).call();\n  }\n\n  async getTokenName(): Promise {\n    const token = await this.registry.addToken(await this.tokenRegistry.entry(0));\n    return await token.methods.name().call();\n  }\n\n  async getTokenSymbol(): Promise {\n    const token = await this.registry.addToken(await this.tokenRegistry.entry(0));\n    return await token.methods.symbol().call();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenServiceStub.html":{"url":"classes/TokenServiceStub.html","title":"class - TokenServiceStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenServiceStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/token-service-stub.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBySymbol\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBySymbol\n                        \n                        \n                    \n                \n            \n            \n                \ngetBySymbol(symbol: string)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/token-service-stub.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    symbol\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TokenServiceStub {\n  getBySymbol(symbol: string): any {\n    return {\n      name: 'Reserve',\n      symbol: 'RSV',\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TokensComponent.html":{"url":"components/TokensComponent.html","title":"component - TokensComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TokensComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tokens/tokens.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tokens\n            \n\n            \n                styleUrls\n                ./tokens.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tokens.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                token\n                            \n                            \n                                tokens\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFilter\n                            \n                            \n                                downloadCsv\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                viewToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenService: TokenService, loggingService: LoggingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tokens/tokens.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndoFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/tokens.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadCsv\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/tokens.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/tokens.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewToken\n                        \n                        \n                    \n                \n            \n            \n                \nviewToken(token)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tokens/tokens.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnsToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'symbol', 'address', 'supply']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Token\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tokens/tokens.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { LoggingService, TokenService } from '@app/_services';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { exportCsv } from '@app/_helpers';\nimport { Token } from '@app/_models';\n\n@Component({\n  selector: 'app-tokens',\n  templateUrl: './tokens.component.html',\n  styleUrls: ['./tokens.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TokensComponent implements OnInit {\n  dataSource: MatTableDataSource;\n  columnsToDisplay: Array = ['name', 'symbol', 'address', 'supply'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  tokens: Array;\n  token: Token;\n\n  constructor(\n    private tokenService: TokenService,\n    private loggingService: LoggingService,\n    private router: Router\n  ) {}\n\n  async ngOnInit(): Promise {\n    await this.tokenService.init();\n    this.tokenService.load.subscribe(async (status: boolean) => {\n      if (status) {\n        await this.tokenService.getTokens();\n      }\n    });\n    this.tokenService.tokensSubject.subscribe((tokens) => {\n      this.loggingService.sendInfoLevelMessage(tokens);\n      this.dataSource = new MatTableDataSource(tokens);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.tokens = tokens;\n    });\n  }\n\n  doFilter(value: string): void {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  viewToken(token): void {\n    this.token = token;\n  }\n\n  downloadCsv(): void {\n    exportCsv(this.tokens, 'tokens');\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Tokens\n        \n      \n      \n        \n          \n            Tokens\n            \n              EXPORT\n            \n          \n        \n        \n          \n\n          \n             Filter \n            \n            search\n          \n\n          \n            \n               Name \n               {{ token.name }} \n            \n\n            \n               Symbol \n               {{ token.symbol }} \n            \n\n            \n               Address \n               {{ token.address }} \n            \n\n            \n               Supply \n               {{ token.supply | tokenRatio }} \n            \n\n            \n            \n          \n\n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./tokens.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Tokens                                                  Tokens                          EXPORT                                                                       Filter                         search                                               Name                {{ token.name }}                                        Symbol                {{ token.symbol }}                                        Address                {{ token.address }}                                        Supply                {{ token.supply | tokenRatio }}                                                                                       '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TokensComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TokensModule.html":{"url":"modules/TokensModule.html","title":"module - TokensModule","body":"\n                   \n\n\n\n\n    Modules\n    TokensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TokensModule\n\n\n\ncluster_TokensModule_declarations\n\n\n\ncluster_TokensModule_imports\n\n\n\n\nTokenDetailsComponent\n\nTokenDetailsComponent\n\n\n\nTokensModule\n\nTokensModule\n\nTokensModule -->\n\nTokenDetailsComponent->TokensModule\n\n\n\n\n\nTokensComponent\n\nTokensComponent\n\nTokensModule -->\n\nTokensComponent->TokensModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTokensModule -->\n\nSharedModule->TokensModule\n\n\n\n\n\nTokensRoutingModule\n\nTokensRoutingModule\n\nTokensModule -->\n\nTokensRoutingModule->TokensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tokens/tokens.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TokenDetailsComponent\n                        \n                        \n                            TokensComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TokensRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TokensRoutingModule } from '@pages/tokens/tokens-routing.module';\nimport { TokensComponent } from '@pages/tokens/tokens.component';\nimport { TokenDetailsComponent } from '@pages/tokens/token-details/token-details.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPseudoCheckboxModule, MatRippleModule } from '@angular/material/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [TokensComponent, TokenDetailsComponent],\n  imports: [\n    CommonModule,\n    TokensRoutingModule,\n    SharedModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatPseudoCheckboxModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatRippleModule,\n  ],\n})\nexport class TokensModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TokensRoutingModule.html":{"url":"modules/TokensRoutingModule.html","title":"module - TokensRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TokensRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tokens/tokens-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TokensComponent } from '@pages/tokens/tokens.component';\nimport { TokenDetailsComponent } from '@pages/tokens/token-details/token-details.component';\n\nconst routes: Routes = [\n  { path: '', component: TokensComponent },\n  { path: ':id', component: TokenDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TokensRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/topbar/topbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                styleUrls\n                ./topbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/topbar/topbar.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/topbar/topbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TopbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./topbar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarStubComponent.html":{"url":"components/TopbarStubComponent.html","title":"component - TopbarStubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TopbarStubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/testing/shared-module-stub.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({ selector: 'app-sidebar', template: '' })\nexport class SidebarStubComponent {}\n\n@Component({ selector: 'app-topbar', template: '' })\nexport class TopbarStubComponent {}\n\n@Component({ selector: 'app-footer', template: '' })\nexport class FooterStubComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopbarStubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transaction.html":{"url":"interfaces/Transaction.html","title":"interface - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/transaction.ts\n        \n\n            \n                Description\n            \n            \n                Transaction object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        recipient\n                                \n                                \n                                        sender\n                                \n                                \n                                        to\n                                \n                                \n                                        token\n                                \n                                \n                                        tx\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Address of the transaction sender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient\n                                    \n                                \n                                \n                                    \n                                        recipient:         AccountDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account information of the transaction recipient. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                    \n                                \n                                \n                                    \n                                        sender:         AccountDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDetails\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Account information of the transaction sender. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Address of the transaction recipient. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         TxToken\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TxToken\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction token information. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx\n                                    \n                                \n                                \n                                    \n                                        tx:         Tx\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tx\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction mining information. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Type of transaction. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Amount of tokens transacted. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccountDetails } from '@app/_models/account';\n\n/** Conversion object interface */\ninterface Conversion {\n  /** Final transaction token information. */\n  destinationToken: TxToken;\n  /** Initial transaction token amount. */\n  fromValue: number;\n  /** Initial transaction token information. */\n  sourceToken: TxToken;\n  /** Final transaction token amount. */\n  toValue: number;\n  /** Address of the initiator of the conversion. */\n  trader: string;\n  /** Conversion mining information. */\n  tx: Tx;\n  /** Account information of the initiator of the conversion. */\n  user: AccountDetails;\n}\n\n/** Transaction object interface */\ninterface Transaction {\n  /** Address of the transaction sender. */\n  from: string;\n  /** Account information of the transaction recipient. */\n  recipient: AccountDetails;\n  /** Account information of the transaction sender. */\n  sender: AccountDetails;\n  /** Address of the transaction recipient. */\n  to: string;\n  /** Transaction token information. */\n  token: TxToken;\n  /** Transaction mining information. */\n  tx: Tx;\n  /** Type of transaction. */\n  type?: string;\n  /** Amount of tokens transacted. */\n  value: number;\n}\n\n/** Transaction data interface */\ninterface Tx {\n  /** Transaction block number. */\n  block: number;\n  /** Transaction mining status. */\n  success: boolean;\n  /** Time transaction was mined. */\n  timestamp: number;\n  /** Hash generated by transaction. */\n  txHash: string;\n  /** Index of transaction in block. */\n  txIndex: number;\n}\n\n/** Transaction token object interface */\ninterface TxToken {\n  /** Address of the deployed token contract. */\n  address: string;\n  /** Name of the token. */\n  name: string;\n  /** The unique token symbol. */\n  symbol: string;\n}\n\n/** @exports */\nexport { Conversion, Transaction, Tx, TxToken };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionDetailsComponent.html":{"url":"components/TransactionDetailsComponent.html","title":"component - TransactionDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/transactions/transaction-details/transaction-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transaction-details\n            \n\n            \n                styleUrls\n                ./transaction-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./transaction-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                recipientBloxbergLink\n                            \n                            \n                                senderBloxbergLink\n                            \n                            \n                                tokenName\n                            \n                            \n                                tokenSymbol\n                            \n                            \n                                traderBloxbergLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                copyAddress\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                reverseTransaction\n                            \n                            \n                                    Async\n                                viewRecipient\n                            \n                            \n                                    Async\n                                viewSender\n                            \n                            \n                                    Async\n                                viewTrader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                transaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeWindow\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, transactionService: TransactionService, snackBar: MatSnackBar, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        transaction\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeWindow\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyAddress\n                        \n                        \n                    \n                \n            \n            \n                \ncopyAddress(address: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            reverseTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reverseTransaction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            viewRecipient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewRecipient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            viewSender\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewSender()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            viewTrader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewTrader()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recipientBloxbergLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            senderBloxbergLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenSymbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            traderBloxbergLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transaction-details/transaction-details.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenService, TransactionService } from '@app/_services';\nimport { copyToClipboard } from '@app/_helpers';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { strip0x } from '@src/assets/js/ethtx/dist/hex';\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionDetailsComponent implements OnInit {\n  @Input() transaction;\n\n  @Output() closeWindow: EventEmitter = new EventEmitter();\n\n  senderBloxbergLink: string;\n  recipientBloxbergLink: string;\n  traderBloxbergLink: string;\n  tokenName: string;\n  tokenSymbol: string;\n\n  constructor(\n    private router: Router,\n    private transactionService: TransactionService,\n    private snackBar: MatSnackBar,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise {\n    await this.transactionService.init();\n    await this.tokenService.init();\n    if (this.transaction?.type === 'conversion') {\n      this.traderBloxbergLink =\n        'https://blockexplorer.bloxberg.org/address/' + this.transaction?.trader + '/transactions';\n    } else {\n      this.senderBloxbergLink =\n        'https://blockexplorer.bloxberg.org/address/' + this.transaction?.from + '/transactions';\n      this.recipientBloxbergLink =\n        'https://blockexplorer.bloxberg.org/address/' + this.transaction?.to + '/transactions';\n    }\n    this.tokenService.load.subscribe(async (status: boolean) => {\n      if (status) {\n        this.tokenSymbol = await this.tokenService.getTokenSymbol();\n        this.tokenName = await this.tokenService.getTokenName();\n      }\n    });\n  }\n\n  async viewSender(): Promise {\n    await this.router.navigateByUrl(`/accounts/${strip0x(this.transaction.from)}`);\n  }\n\n  async viewRecipient(): Promise {\n    await this.router.navigateByUrl(`/accounts/${strip0x(this.transaction.to)}`);\n  }\n\n  async viewTrader(): Promise {\n    await this.router.navigateByUrl(`/accounts/${strip0x(this.transaction.trader)}`);\n  }\n\n  async reverseTransaction(): Promise {\n    await this.transactionService.transferRequest(\n      this.transaction.token.address,\n      this.transaction.to,\n      this.transaction.from,\n      this.transaction.value\n    );\n  }\n\n  copyAddress(address: string): void {\n    if (copyToClipboard(address)) {\n      this.snackBar.open(address + ' copied successfully!', 'Close', { duration: 3000 });\n    }\n  }\n\n  close(): void {\n    this.transaction = null;\n    this.closeWindow.emit(this.transaction);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        TRANSACTION DETAILS\n        \n          CLOSE\n        \n      \n    \n    \n      \n        \n          Exchange:\n          \n            \n              Sender: {{ transaction.sender?.vcard.fn[0].value }}\n              \n                Sender Address:\n                 {{ transaction.from }} \n                 \n              \n                View Sender\n              \n            \n            \n              Recipient: {{ transaction.recipient?.vcard.fn[0].value }}\n              \n                Recipient Address:\n                 {{ transaction.to }} \n                 \n              \n                View Recipient\n              \n            \n            \n              Amount: {{ transaction.value | tokenRatio }} {{ tokenSymbol | uppercase }}\n            \n          \n          Token:\n          \n            \n              \n                Address:\n                {{ transaction.token._address }}\n                \n              \n            \n            \n              Name: {{ tokenName }}\n            \n            \n              Symbol: {{ tokenSymbol | uppercase }}\n            \n          \n        \n        \n          Transaction:\n          \n            \n              Block: {{ transaction.tx.block }}\n            \n            \n              Index: {{ transaction.tx.txIndex }}\n            \n            \n              Hash: {{ transaction.tx.txHash }}\n            \n            \n              Success: {{ transaction.tx.success }}\n            \n            \n              Timestamp: {{ transaction.tx.timestamp | unixDate }}\n            \n          \n          \n          \n            \n              Resend SMS\n            \n          \n          \n            \n              Reverse Transaction\n            \n          \n        \n      \n    \n    \n      Exchange:\n      \n        \n          Trader: {{ transaction.sender?.vcard.fn[0].value }}\n        \n        \n          \n            Trader Address:\n             {{ transaction.trader }} \n            \n          \n        \n      \n      \n        View Trader\n      \n      \n      \n        \n          Source Token:\n          \n            \n              \n                Address:\n                {{ transaction.sourceToken.address }}\n                \n              \n            \n            \n              Name: {{ transaction.sourceToken.name }}\n            \n            \n              Symbol: {{ transaction.sourceToken.symbol | uppercase }}\n            \n            \n              Amount: {{ transaction.fromValue }}\n                {{ transaction.sourceToken.symbol | uppercase }}\n            \n          \n        \n        \n          Destination Token:\n          \n            \n              \n                Address:\n                {{ transaction.destinationToken.address }}\n                \n              \n            \n            \n              Name: {{ transaction.destinationToken.name }}\n            \n            \n              Symbol: {{ transaction.destinationToken.symbol | uppercase }}\n            \n            \n              Amount: {{ transaction.toValue }}\n                {{ transaction.destinationToken.symbol | uppercase }}\n            \n          \n        \n        \n          \n            Resend SMS\n          \n        \n        \n          \n            Reverse Transaction\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./transaction-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    TRANSACTION DETAILS                  CLOSE                                              Exchange:                                    Sender: {{ transaction.sender?.vcard.fn[0].value }}                              Sender Address:                 {{ transaction.from }}                                                View Sender                                                    Recipient: {{ transaction.recipient?.vcard.fn[0].value }}                              Recipient Address:                 {{ transaction.to }}                                                View Recipient                                                    Amount: {{ transaction.value | tokenRatio }} {{ tokenSymbol | uppercase }}                                Token:                                                    Address:                {{ transaction.token._address }}                                                                    Name: {{ tokenName }}                                      Symbol: {{ tokenSymbol | uppercase }}                                                Transaction:                                    Block: {{ transaction.tx.block }}                                      Index: {{ transaction.tx.txIndex }}                                      Hash: {{ transaction.tx.txHash }}                                      Success: {{ transaction.tx.success }}                                      Timestamp: {{ transaction.tx.timestamp | unixDate }}                                                                    Resend SMS                                                          Reverse Transaction                                                  Exchange:                        Trader: {{ transaction.sender?.vcard.fn[0].value }}                                      Trader Address:             {{ transaction.trader }}                                                   View Trader                                    Source Token:                                                    Address:                {{ transaction.sourceToken.address }}                                                                    Name: {{ transaction.sourceToken.name }}                                      Symbol: {{ transaction.sourceToken.symbol | uppercase }}                                      Amount: {{ transaction.fromValue }}                {{ transaction.sourceToken.symbol | uppercase }}                                                Destination Token:                                                    Address:                {{ transaction.destinationToken.address }}                                                                    Name: {{ transaction.destinationToken.name }}                                      Symbol: {{ transaction.destinationToken.symbol | uppercase }}                                      Amount: {{ transaction.toValue }}                {{ transaction.destinationToken.symbol | uppercase }}                                                            Resend SMS                                                Reverse Transaction                              '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionService.html":{"url":"injectables/TransactionService.html","title":"injectable - TransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/transaction.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registry\n                            \n                            \n                                    Private\n                                transactionList\n                            \n                            \n                                transactions\n                            \n                            \n                                transactionsSubject\n                            \n                            \n                                userInfo\n                            \n                            \n                                web3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransaction\n                            \n                            \n                                getAccountInfo\n                            \n                            \n                                getAddressTransactions\n                            \n                            \n                                getAllTransactions\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                resetTransactionsList\n                            \n                            \n                                    Async\n                                setConversion\n                            \n                            \n                                    Async\n                                setTransaction\n                            \n                            \n                                    Async\n                                transferRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authService: AuthService, userService: UserService, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/transaction.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransaction\n                        \n                        \n                    \n                \n            \n            \n                \naddTransaction(transaction, cacheSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cacheSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAccountInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetAccountInfo(account: string, cacheSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cacheSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        100\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddressTransactions\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddressTransactions(address: string, offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTransactions\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTransactions(offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetTransactionsList\n                        \n                        \n                    \n                \n            \n            \n                \nresetTransactionsList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setConversion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setConversion(conversion, cacheSize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conversion\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cacheSize\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setTransaction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTransaction(transaction, cacheSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cacheSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transferRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transferRequest(tokenAddress: string, senderAddress: string, recipientAddress: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/transaction.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokenAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    senderAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recipientAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CICRegistry\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transactionList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.transactions)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionsSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.transactionList.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            web3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Web3\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/transaction.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from '@src/environments/environment';\nimport { Envelope, User } from 'cic-client-meta';\nimport { UserService } from '@app/_services/user.service';\nimport { Keccak } from 'sha3';\nimport { utils } from 'ethers';\nimport { add0x, fromHex, strip0x, toHex } from '@src/assets/js/ethtx/dist/hex';\nimport { Tx } from '@src/assets/js/ethtx/dist';\nimport { toValue } from '@src/assets/js/ethtx/dist/tx';\nimport * as secp256k1 from 'secp256k1';\nimport { AuthService } from '@app/_services/auth.service';\nimport { defaultAccount } from '@app/_models';\nimport { LoggingService } from '@app/_services/logging.service';\nimport { HttpClient } from '@angular/common/http';\nimport { CICRegistry } from '@cicnet/cic-client';\nimport { RegistryService } from '@app/_services/registry.service';\nimport Web3 from 'web3';\nimport { Web3Service } from '@app/_services/web3.service';\nimport { KeystoreService } from '@app/_services/keystore.service';\nconst vCard = require('vcard-parser');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransactionService {\n  transactions: any[] = [];\n  private transactionList = new BehaviorSubject(this.transactions);\n  transactionsSubject = this.transactionList.asObservable();\n  userInfo: any;\n  web3: Web3;\n  registry: CICRegistry;\n\n  constructor(\n    private httpClient: HttpClient,\n    private authService: AuthService,\n    private userService: UserService,\n    private loggingService: LoggingService\n  ) {\n    this.web3 = Web3Service.getInstance();\n  }\n\n  async init(): Promise {\n    await this.authService.init();\n    await this.userService.init();\n    this.registry = await RegistryService.getRegistry();\n  }\n\n  getAllTransactions(offset: number, limit: number): Observable {\n    return this.httpClient.get(`${environment.cicCacheUrl}/tx/${offset}/${limit}`);\n  }\n\n  getAddressTransactions(address: string, offset: number, limit: number): Observable {\n    return this.httpClient.get(`${environment.cicCacheUrl}/tx/user/${address}/${offset}/${limit}`);\n  }\n\n  async setTransaction(transaction, cacheSize: number): Promise {\n    if (this.transactions.find((cachedTx) => cachedTx.tx.txHash === transaction.tx.txHash)) {\n      return;\n    }\n    transaction.value = Number(transaction.value);\n    transaction.type = 'transaction';\n    try {\n      if (transaction.from === environment.trustedDeclaratorAddress) {\n        transaction.sender = defaultAccount;\n        this.userService.addAccount(defaultAccount, cacheSize);\n      } else {\n        this.userService\n          .getAccountDetailsFromMeta(await User.toKey(transaction.from))\n          .pipe(first())\n          .subscribe(\n            (res) => {\n              transaction.sender = this.getAccountInfo(res, cacheSize);\n            },\n            (error) => {\n              this.loggingService.sendErrorLevelMessage(\n                `Account with address ${transaction.from} not found`,\n                this,\n                { error }\n              );\n            }\n          );\n      }\n      if (transaction.to === environment.trustedDeclaratorAddress) {\n        transaction.recipient = defaultAccount;\n        this.userService.addAccount(defaultAccount, cacheSize);\n      } else {\n        this.userService\n          .getAccountDetailsFromMeta(await User.toKey(transaction.to))\n          .pipe(first())\n          .subscribe(\n            (res) => {\n              transaction.recipient = this.getAccountInfo(res, cacheSize);\n            },\n            (error) => {\n              this.loggingService.sendErrorLevelMessage(\n                `Account with address ${transaction.to} not found`,\n                this,\n                { error }\n              );\n            }\n          );\n      }\n    } finally {\n      this.addTransaction(transaction, cacheSize);\n    }\n  }\n\n  async setConversion(conversion, cacheSize): Promise {\n    if (this.transactions.find((cachedTx) => cachedTx.tx.txHash === conversion.tx.txHash)) {\n      return;\n    }\n    conversion.type = 'conversion';\n    conversion.fromValue = Number(conversion.fromValue);\n    conversion.toValue = Number(conversion.toValue);\n    try {\n      if (conversion.trader === environment.trustedDeclaratorAddress) {\n        conversion.sender = conversion.recipient = defaultAccount;\n        this.userService.addAccount(defaultAccount, cacheSize);\n      } else {\n        this.userService\n          .getAccountDetailsFromMeta(await User.toKey(conversion.trader))\n          .pipe(first())\n          .subscribe(\n            (res) => {\n              conversion.sender = conversion.recipient = this.getAccountInfo(res);\n            },\n            (error) => {\n              this.loggingService.sendErrorLevelMessage(\n                `Account with address ${conversion.trader} not found`,\n                this,\n                { error }\n              );\n            }\n          );\n      }\n    } finally {\n      this.addTransaction(conversion, cacheSize);\n    }\n  }\n\n  addTransaction(transaction, cacheSize: number): void {\n    const savedIndex = this.transactions.findIndex((tx) => tx.tx.txHash === transaction.tx.txHash);\n    if (savedIndex === 0) {\n      return;\n    }\n    if (savedIndex > 0) {\n      this.transactions.splice(savedIndex, 1);\n    }\n    this.transactions.unshift(transaction);\n    if (this.transactions.length > cacheSize) {\n      this.transactions.length = Math.min(this.transactions.length, cacheSize);\n    }\n    this.transactionList.next(this.transactions);\n  }\n\n  resetTransactionsList(): void {\n    this.transactions = [];\n    this.transactionList.next(this.transactions);\n  }\n\n  getAccountInfo(account: string, cacheSize: number = 100): any {\n    const accountInfo = Envelope.fromJSON(JSON.stringify(account)).unwrap().m.data;\n    accountInfo.vcard = vCard.parse(atob(accountInfo.vcard));\n    this.userService.addAccount(accountInfo, cacheSize);\n    return accountInfo;\n  }\n\n  async transferRequest(\n    tokenAddress: string,\n    senderAddress: string,\n    recipientAddress: string,\n    value: number\n  ): Promise {\n    const transferAuthAddress = await this.registry.getContractAddressByName(\n      'TransferAuthorization'\n    );\n    const hashFunction = new Keccak(256);\n    hashFunction.update('createRequest(address,address,address,uint256)');\n    const hash = hashFunction.digest();\n    const methodSignature = hash.toString('hex').substring(0, 8);\n    const abiCoder = new utils.AbiCoder();\n    const abi = await abiCoder.encode(\n      ['address', 'address', 'address', 'uint256'],\n      [senderAddress, recipientAddress, tokenAddress, value]\n    );\n    const data = fromHex(methodSignature + strip0x(abi));\n    const tx = new Tx(environment.bloxbergChainId);\n    tx.nonce = await this.web3.eth.getTransactionCount(senderAddress);\n    tx.gasPrice = Number(await this.web3.eth.getGasPrice());\n    tx.gasLimit = 8000000;\n    tx.to = fromHex(strip0x(transferAuthAddress));\n    tx.value = toValue(value);\n    tx.data = data;\n    const txMsg = tx.message();\n    const keystore = await KeystoreService.getKeystore();\n    const privateKey = keystore.getPrivateKey();\n    if (!privateKey.isDecrypted()) {\n      const password = window.prompt('password');\n      await privateKey.decrypt(password);\n    }\n    const signatureObject = secp256k1.ecdsaSign(txMsg, privateKey.keyPacket.privateParams.d);\n    const r = signatureObject.signature.slice(0, 32);\n    const s = signatureObject.signature.slice(32);\n    const v = signatureObject.recid;\n    tx.setSignature(r, s, v);\n    const txWire = add0x(toHex(tx.serializeRLP()));\n    const result = await this.web3.eth.sendSignedTransaction(txWire);\n    this.loggingService.sendInfoLevelMessage(`Result: ${result}`);\n    const transaction = await this.web3.eth.getTransaction(result.transactionHash);\n    this.loggingService.sendInfoLevelMessage(`Transaction: ${transaction}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionServiceStub.html":{"url":"classes/TransactionServiceStub.html","title":"class - TransactionServiceStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionServiceStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/transaction-service-stub.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllTransactions\n                            \n                            \n                                setConversion\n                            \n                            \n                                setTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllTransactions\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllTransactions(offset: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/transaction-service-stub.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setConversion\n                        \n                        \n                    \n                \n            \n            \n                \nsetConversion(conversion: any)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/transaction-service-stub.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conversion\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTransaction\n                        \n                        \n                    \n                \n            \n            \n                \nsetTransaction(transaction: any, cacheSize: number)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/transaction-service-stub.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cacheSize\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nexport class TransactionServiceStub {\n  setTransaction(transaction: any, cacheSize: number): void {}\n\n  setConversion(conversion: any): void {}\n\n  getAllTransactions(offset: number, limit: number): Observable {\n    return of('Hello World');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/transactions/transactions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-transactions\n            \n\n            \n                styleUrls\n                ./transactions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultPageSize\n                            \n                            \n                                pageSizeOptions\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                tokenSymbol\n                            \n                            \n                                transaction\n                            \n                            \n                                transactionDataSource\n                            \n                            \n                                transactionDisplayedColumns\n                            \n                            \n                                transactions\n                            \n                            \n                                transactionsType\n                            \n                            \n                                transactionsTypes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                doFilter\n                            \n                            \n                                downloadCsv\n                            \n                            \n                                filterTransactions\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                viewTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(blockSyncService: BlockSyncService, transactionService: TransactionService, userService: UserService, tokenService: TokenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/transactions/transactions.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blockSyncService\n                                                  \n                                                        \n                                                                        BlockSyncService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doFilter\n                        \n                        \n                    \n                \n            \n            \n                \ndoFilter(value: string, dataSource)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataSource\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            downloadCsv\n                        \n                        \n                    \n                \n            \n            \n                \ndownloadCsv()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterTransactions\n                        \n                        \n                    \n                \n            \n            \n                \nfilterTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            viewTransaction\n                        \n                        \n                    \n                \n            \n            \n                \nviewTransaction(transaction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/transactions/transactions.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultPageSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageSizeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [10, 20, 50, 100]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenSymbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transaction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Transaction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTableDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionDisplayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['sender', 'recipient', 'value', 'created', 'type']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionsTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/transactions/transactions.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { BlockSyncService, TokenService, TransactionService, UserService } from '@app/_services';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { exportCsv } from '@app/_helpers';\nimport { first } from 'rxjs/operators';\nimport { Transaction } from '@app/_models';\n\n@Component({\n  selector: 'app-transactions',\n  templateUrl: './transactions.component.html',\n  styleUrls: ['./transactions.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TransactionsComponent implements OnInit, AfterViewInit {\n  transactionDataSource: MatTableDataSource;\n  transactionDisplayedColumns: Array = ['sender', 'recipient', 'value', 'created', 'type'];\n  defaultPageSize: number = 10;\n  pageSizeOptions: Array = [10, 20, 50, 100];\n  transactions: Array;\n  transaction: Transaction;\n  transactionsType: string = 'all';\n  transactionsTypes: Array;\n  tokenSymbol: string;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private blockSyncService: BlockSyncService,\n    private transactionService: TransactionService,\n    private userService: UserService,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise {\n    this.transactionService.transactionsSubject.subscribe((transactions) => {\n      this.transactionDataSource = new MatTableDataSource(transactions);\n      this.transactionDataSource.paginator = this.paginator;\n      this.transactionDataSource.sort = this.sort;\n      this.transactions = transactions;\n    });\n    await this.blockSyncService.init();\n    await this.tokenService.init();\n    await this.transactionService.init();\n    await this.userService.init();\n    await this.blockSyncService.blockSync();\n    this.userService\n      .getTransactionTypes()\n      .pipe(first())\n      .subscribe((res) => (this.transactionsTypes = res));\n    this.tokenService.load.subscribe(async (status: boolean) => {\n      if (status) {\n        this.tokenSymbol = await this.tokenService.getTokenSymbol();\n      }\n    });\n  }\n\n  viewTransaction(transaction): void {\n    this.transaction = transaction;\n  }\n\n  doFilter(value: string, dataSource): void {\n    dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  filterTransactions(): void {\n    if (this.transactionsType === 'all') {\n      this.transactionService.transactionsSubject.subscribe((transactions) => {\n        this.transactionDataSource.data = transactions;\n        this.transactions = transactions;\n      });\n    } else {\n      this.transactionDataSource.data = this.transactions.filter(\n        (transaction) => transaction.type + 's' === this.transactionsType\n      );\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.transactionDataSource.paginator = this.paginator;\n    this.transactionDataSource.sort = this.sort;\n  }\n\n  downloadCsv(): void {\n    exportCsv(this.transactions, 'transactions');\n  }\n}\n\n    \n\n    \n        \n\n  \n\n  \n  \n  \n\n  \n    \n    \n    \n      \n        \n          Home\n          Transactions\n        \n      \n      \n         Transfers \n        \n          \n\n          \n            \n               TRANSFER TYPE \n              \n                ALL TRANSFERS\n                \n                  {{ transactionType | uppercase }}\n                \n              \n            \n            \n              EXPORT\n            \n          \n\n          \n             Filter \n            \n            search\n          \n\n          \n            \n              Sender\n              \n                {{ transaction?.sender?.vcard.fn[0].value || transaction.from }}\n              \n            \n\n            \n              Recipient\n              \n                {{ transaction?.recipient?.vcard.fn[0].value || transaction.to }}\n              \n            \n\n            \n              Value\n              \n                {{ transaction?.value | tokenRatio }} {{ tokenSymbol | uppercase }}\n                {{ transaction?.toValue | tokenRatio }} {{ tokenSymbol | uppercase }}\n              \n            \n\n            \n              Created\n              \n                {{ transaction?.tx.timestamp | unixDate }}\n              \n            \n\n            \n              TYPE\n              \n                 {{ transaction?.type }} \n              \n            \n\n            \n            \n          \n\n          \n        \n      \n    \n    \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./transactions.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Home          Transactions                             Transfers                                                        TRANSFER TYPE                               ALL TRANSFERS                                  {{ transactionType | uppercase }}                                                                    EXPORT                                             Filter                         search                                              Sender                              {{ transaction?.sender?.vcard.fn[0].value || transaction.from }}                                                    Recipient                              {{ transaction?.recipient?.vcard.fn[0].value || transaction.to }}                                                    Value                              {{ transaction?.value | tokenRatio }} {{ tokenSymbol | uppercase }}                {{ transaction?.toValue | tokenRatio }} {{ tokenSymbol | uppercase }}                                                    Created                              {{ transaction?.tx.timestamp | unixDate }}                                                    TYPE                               {{ transaction?.type }}                                                                                                     '\n    var COMPONENTS = [{'name': 'AccountDetailsComponent', 'selector': 'app-account-details'},{'name': 'AccountsComponent', 'selector': 'app-accounts'},{'name': 'AccountSearchComponent', 'selector': 'app-account-search'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CreateAccountComponent', 'selector': 'app-create-account'},{'name': 'ErrorDialogComponent', 'selector': 'app-error-dialog'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FooterStubComponent', 'selector': 'app-footer'},{'name': 'NetworkStatusComponent', 'selector': 'app-network-status'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'PagesComponent', 'selector': 'app-pages'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SidebarStubComponent', 'selector': 'app-sidebar'},{'name': 'TokenDetailsComponent', 'selector': 'app-token-details'},{'name': 'TokensComponent', 'selector': 'app-tokens'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'TopbarStubComponent', 'selector': 'app-topbar'},{'name': 'TransactionDetailsComponent', 'selector': 'app-transaction-details'},{'name': 'TransactionsComponent', 'selector': 'app-transactions'}];\n    var DIRECTIVES = [{'name': 'MenuSelectionDirective', 'selector': '[appMenuSelection]'},{'name': 'MenuToggleDirective', 'selector': '[appMenuToggle]'},{'name': 'PasswordToggleDirective', 'selector': '[appPasswordToggle]'},{'name': 'RouterLinkDirectiveStub', 'selector': '[appRouterLink]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsModule.html":{"url":"modules/TransactionsModule.html","title":"module - TransactionsModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_imports\n\n\n\ncluster_TransactionsModule_declarations\n\n\n\n\nTransactionDetailsComponent\n\nTransactionDetailsComponent\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsModule -->\n\nTransactionDetailsComponent->TransactionsModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nTransactionsModule -->\n\nTransactionsComponent->TransactionsModule\n\n\n\n\n\nTransactionDetailsComponent \n\nTransactionDetailsComponent \n\nTransactionDetailsComponent  -->\n\nTransactionsModule->TransactionDetailsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTransactionsModule -->\n\nSharedModule->TransactionsModule\n\n\n\n\n\nTransactionsRoutingModule\n\nTransactionsRoutingModule\n\nTransactionsModule -->\n\nTransactionsRoutingModule->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/transactions/transactions.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransactionDetailsComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TransactionsRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionDetailsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TransactionsRoutingModule } from '@pages/transactions/transactions-routing.module';\nimport { TransactionsComponent } from '@pages/transactions/transactions.component';\nimport { TransactionDetailsComponent } from '@pages/transactions/transaction-details/transaction-details.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [TransactionsComponent, TransactionDetailsComponent],\n  exports: [TransactionDetailsComponent],\n  imports: [\n    CommonModule,\n    TransactionsRoutingModule,\n    SharedModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatRippleModule,\n    MatSnackBarModule,\n  ],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsRoutingModule.html":{"url":"modules/TransactionsRoutingModule.html","title":"module - TransactionsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/transactions/transactions-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TransactionsComponent } from '@pages/transactions/transactions.component';\n\nconst routes: Routes = [{ path: '', component: TransactionsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TransactionsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tx.html":{"url":"interfaces/Tx.html","title":"interface - Tx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/transaction.ts\n        \n\n            \n                Description\n            \n            \n                Transaction data interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        block\n                                \n                                \n                                        success\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        txHash\n                                \n                                \n                                        txIndex\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block\n                                    \n                                \n                                \n                                    \n                                        block:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction block number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Transaction mining status. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time transaction was mined. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash generated by transaction. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txIndex\n                                    \n                                \n                                \n                                    \n                                        txIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Index of transaction in block. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccountDetails } from '@app/_models/account';\n\n/** Conversion object interface */\ninterface Conversion {\n  /** Final transaction token information. */\n  destinationToken: TxToken;\n  /** Initial transaction token amount. */\n  fromValue: number;\n  /** Initial transaction token information. */\n  sourceToken: TxToken;\n  /** Final transaction token amount. */\n  toValue: number;\n  /** Address of the initiator of the conversion. */\n  trader: string;\n  /** Conversion mining information. */\n  tx: Tx;\n  /** Account information of the initiator of the conversion. */\n  user: AccountDetails;\n}\n\n/** Transaction object interface */\ninterface Transaction {\n  /** Address of the transaction sender. */\n  from: string;\n  /** Account information of the transaction recipient. */\n  recipient: AccountDetails;\n  /** Account information of the transaction sender. */\n  sender: AccountDetails;\n  /** Address of the transaction recipient. */\n  to: string;\n  /** Transaction token information. */\n  token: TxToken;\n  /** Transaction mining information. */\n  tx: Tx;\n  /** Type of transaction. */\n  type?: string;\n  /** Amount of tokens transacted. */\n  value: number;\n}\n\n/** Transaction data interface */\ninterface Tx {\n  /** Transaction block number. */\n  block: number;\n  /** Transaction mining status. */\n  success: boolean;\n  /** Time transaction was mined. */\n  timestamp: number;\n  /** Hash generated by transaction. */\n  txHash: string;\n  /** Index of transaction in block. */\n  txIndex: number;\n}\n\n/** Transaction token object interface */\ninterface TxToken {\n  /** Address of the deployed token contract. */\n  address: string;\n  /** Name of the token. */\n  name: string;\n  /** The unique token symbol. */\n  symbol: string;\n}\n\n/** @exports */\nexport { Conversion, Transaction, Tx, TxToken };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TxToken.html":{"url":"interfaces/TxToken.html","title":"interface - TxToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TxToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/transaction.ts\n        \n\n            \n                Description\n            \n            \n                Transaction token object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        name\n                                \n                                \n                                        symbol\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Address of the deployed token contract. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the token. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The unique token symbol. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AccountDetails } from '@app/_models/account';\n\n/** Conversion object interface */\ninterface Conversion {\n  /** Final transaction token information. */\n  destinationToken: TxToken;\n  /** Initial transaction token amount. */\n  fromValue: number;\n  /** Initial transaction token information. */\n  sourceToken: TxToken;\n  /** Final transaction token amount. */\n  toValue: number;\n  /** Address of the initiator of the conversion. */\n  trader: string;\n  /** Conversion mining information. */\n  tx: Tx;\n  /** Account information of the initiator of the conversion. */\n  user: AccountDetails;\n}\n\n/** Transaction object interface */\ninterface Transaction {\n  /** Address of the transaction sender. */\n  from: string;\n  /** Account information of the transaction recipient. */\n  recipient: AccountDetails;\n  /** Account information of the transaction sender. */\n  sender: AccountDetails;\n  /** Address of the transaction recipient. */\n  to: string;\n  /** Transaction token information. */\n  token: TxToken;\n  /** Transaction mining information. */\n  tx: Tx;\n  /** Type of transaction. */\n  type?: string;\n  /** Amount of tokens transacted. */\n  value: number;\n}\n\n/** Transaction data interface */\ninterface Tx {\n  /** Transaction block number. */\n  block: number;\n  /** Transaction mining status. */\n  success: boolean;\n  /** Time transaction was mined. */\n  timestamp: number;\n  /** Hash generated by transaction. */\n  txHash: string;\n  /** Index of transaction in block. */\n  txIndex: number;\n}\n\n/** Transaction token object interface */\ninterface TxToken {\n  /** Address of the deployed token contract. */\n  address: string;\n  /** Name of the token. */\n  name: string;\n  /** The unique token symbol. */\n  symbol: string;\n}\n\n/** @exports */\nexport { Conversion, Transaction, Tx, TxToken };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/UnixDatePipe.html":{"url":"pipes/UnixDatePipe.html","title":"pipe - UnixDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  UnixDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/_pipes/unix-date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        unixDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(timestamp: number, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/_pipes/unix-date.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timestamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'unixDate',\n})\nexport class UnixDatePipe implements PipeTransform {\n  transform(timestamp: number, ...args: unknown[]): any {\n    return new Date(timestamp * 1000).toLocaleDateString('en-GB');\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserServiceStub.html":{"url":"classes/UserServiceStub.html","title":"class - UserServiceStub","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserServiceStub\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/testing/user-service-stub.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                approveAction\n                            \n                            \n                                getActionById\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { id: 1, user: 'Tom', role: 'enroller', action: 'Disburse RSV 100', approval: false },\n    { id: 2, user: 'Christine', role: 'admin', action: 'Change user phone number', approval: true },\n    { id: 3, user: 'Will', role: 'superadmin', action: 'Reclaim RSV 1000', approval: true },\n    { id: 4, user: 'Vivian', role: 'enroller', action: 'Complete user profile', approval: true },\n    { id: 5, user: 'Jack', role: 'enroller', action: 'Reclaim RSV 200', approval: false },\n    {\n      id: 6,\n      user: 'Patience',\n      role: 'enroller',\n      action: 'Change user information',\n      approval: false,\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/user-service-stub.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 1,\n      name: 'John Doe',\n      phone: '+25412345678',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'user',\n      created: '08/16/2020',\n      balance: '12987',\n      failedPinAttempts: 1,\n      status: 'approved',\n      bio: 'Bodaboda',\n      gender: 'male',\n    },\n    {\n      id: 2,\n      name: 'Jane Buck',\n      phone: '+25412341234',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'vendor',\n      created: '04/02/2020',\n      balance: '56281',\n      failedPinAttempts: 0,\n      status: 'approved',\n      bio: 'Groceries',\n      gender: 'female',\n    },\n    {\n      id: 3,\n      name: 'Mc Donald',\n      phone: '+25498765432',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'group',\n      created: '11/16/2020',\n      balance: '450',\n      failedPinAttempts: 2,\n      status: 'unapproved',\n      bio: 'Food',\n      gender: 'male',\n    },\n    {\n      id: 4,\n      name: 'Hera Cles',\n      phone: '+25498769876',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'user',\n      created: '05/28/2020',\n      balance: '5621',\n      failedPinAttempts: 3,\n      status: 'approved',\n      bio: 'Shop',\n      gender: 'female',\n    },\n    {\n      id: 5,\n      name: 'Silver Fia',\n      phone: '+25462518374',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'token agent',\n      created: '10/10/2020',\n      balance: '817',\n      failedPinAttempts: 0,\n      status: 'unapproved',\n      bio: 'Electronics',\n      gender: 'male',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/testing/user-service-stub.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            approveAction\n                        \n                        \n                    \n                \n            \n            \n                \napproveAction(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/user-service-stub.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionById\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/user-service-stub.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser(userKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/user-service-stub.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/testing/user-service-stub.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nexport class UserServiceStub {\n  users = [\n    {\n      id: 1,\n      name: 'John Doe',\n      phone: '+25412345678',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'user',\n      created: '08/16/2020',\n      balance: '12987',\n      failedPinAttempts: 1,\n      status: 'approved',\n      bio: 'Bodaboda',\n      gender: 'male',\n    },\n    {\n      id: 2,\n      name: 'Jane Buck',\n      phone: '+25412341234',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'vendor',\n      created: '04/02/2020',\n      balance: '56281',\n      failedPinAttempts: 0,\n      status: 'approved',\n      bio: 'Groceries',\n      gender: 'female',\n    },\n    {\n      id: 3,\n      name: 'Mc Donald',\n      phone: '+25498765432',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'group',\n      created: '11/16/2020',\n      balance: '450',\n      failedPinAttempts: 2,\n      status: 'unapproved',\n      bio: 'Food',\n      gender: 'male',\n    },\n    {\n      id: 4,\n      name: 'Hera Cles',\n      phone: '+25498769876',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'user',\n      created: '05/28/2020',\n      balance: '5621',\n      failedPinAttempts: 3,\n      status: 'approved',\n      bio: 'Shop',\n      gender: 'female',\n    },\n    {\n      id: 5,\n      name: 'Silver Fia',\n      phone: '+25462518374',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'token agent',\n      created: '10/10/2020',\n      balance: '817',\n      failedPinAttempts: 0,\n      status: 'unapproved',\n      bio: 'Electronics',\n      gender: 'male',\n    },\n  ];\n\n  actions = [\n    { id: 1, user: 'Tom', role: 'enroller', action: 'Disburse RSV 100', approval: false },\n    { id: 2, user: 'Christine', role: 'admin', action: 'Change user phone number', approval: true },\n    { id: 3, user: 'Will', role: 'superadmin', action: 'Reclaim RSV 1000', approval: true },\n    { id: 4, user: 'Vivian', role: 'enroller', action: 'Complete user profile', approval: true },\n    { id: 5, user: 'Jack', role: 'enroller', action: 'Reclaim RSV 200', approval: false },\n    {\n      id: 6,\n      user: 'Patience',\n      role: 'enroller',\n      action: 'Change user information',\n      approval: false,\n    },\n  ];\n\n  getUserById(id: string): any {\n    return {\n      id: 1,\n      name: 'John Doe',\n      phone: '+25412345678',\n      address: '0xc86ff893ac40d3950b4d5f94a9b837258b0a9865',\n      type: 'user',\n      created: '08/16/2020',\n      balance: '12987',\n      failedPinAttempts: 1,\n      status: 'approved',\n      bio: 'Bodaboda',\n      gender: 'male',\n    };\n  }\n\n  getUser(userKey: string): Observable {\n    console.log('Here');\n    return of({\n      dateRegistered: 1595537208,\n      key: {\n        ethereum: [\n          '0x51d3c8e2e421604e2b644117a362d589c5434739',\n          '0x9D7c284907acbd4a0cE2dDD0AA69147A921a573D',\n        ],\n      },\n      location: {\n        external: {},\n        latitude: '22.430670',\n        longitude: '151.002995',\n      },\n      selling: ['environment', 'health', 'transport'],\n      vcard:\n        'QkVHSU46VkNBUkQNClZFUlNJT046My4wDQpFTUFJTDphYXJuZXNlbkBob3RtYWlsLmNvbQ0KRk46S3VydMKgS3JhbmpjDQpOOktyYW5qYztLdXJ0Ozs7DQpURUw7VFlQPUNFTEw6NjkyNTAzMzQ5ODE5Ng0KRU5EOlZDQVJEDQo=',\n    });\n  }\n\n  getActionById(id: string): any {\n    return {\n      id: 1,\n      user: 'Tom',\n      role: 'enroller',\n      action: 'Disburse RSV 100',\n      approval: false,\n    };\n  }\n\n  approveAction(id: number): any {\n    return {\n      id: 1,\n      user: 'Tom',\n      role: 'enroller',\n      action: 'Disburse RSV 100',\n      approval: true,\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/W3.html":{"url":"interfaces/W3.html","title":"interface - W3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  W3\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_models/settings.ts\n        \n\n            \n                Description\n            \n            \n                Web3 object interface \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        engine\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        engine\n                                    \n                                \n                                \n                                    \n                                        engine:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An active web3 instance connected to the blockchain network. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection socket to the blockchain network. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        class Settings {\n  /** CIC Registry instance */\n  registry: any;\n  /** A resource for searching through blocks on the blockchain network. */\n  scanFilter: any;\n  /** Transaction Helper instance */\n  txHelper: any;\n  /** Web3 Object */\n  w3: W3 = {\n    engine: undefined,\n    provider: undefined,\n  };\n\n  /**\n   * Initialize the settings.\n   *\n   * @param scanFilter - A resource for searching through blocks on the blockchain network.\n   */\n  constructor(scanFilter: any) {\n    this.scanFilter = scanFilter;\n  }\n}\n\n/** Web3 object interface */\ninterface W3 {\n  /** An active web3 instance connected to the blockchain network. */\n  engine: any;\n  /** The connection socket to the blockchain network. */\n  provider: any;\n}\n\n/** @exports */\nexport { Settings, W3 };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Web3Service.html":{"url":"injectables/Web3Service.html","title":"injectable - Web3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Web3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/_services/web3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                web3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/_services/web3.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/_services/web3.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Web3\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            web3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Web3\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/_services/web3.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Web3 from 'web3';\nimport { environment } from '@src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Web3Service {\n  private static web3: Web3;\n\n  constructor() {}\n\n  public static getInstance(): Web3 {\n    if (!Web3Service.web3) {\n      Web3Service.web3 = new Web3(environment.web3Provider);\n    }\n    return Web3Service.web3;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/_eth/accountIndex.ts\n            \n            class\n            AccountIndex\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_eth/accountIndex.ts\n            \n            variable\n            abi\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_eth/accountIndex.ts\n            \n            variable\n            web3\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_eth/token-registry.ts\n            \n            class\n            TokenRegistry\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_eth/token-registry.ts\n            \n            variable\n            abi\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_eth/token-registry.ts\n            \n            variable\n            web3\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/array-sum.ts\n            \n            function\n            arraySum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/clipboard-copy.ts\n            \n            function\n            copyToClipboard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/custom-error-state-matcher.ts\n            \n            class\n            CustomErrorStateMatcher\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/_helpers/custom.validator.ts\n            \n            class\n            CustomValidator\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/export-csv.ts\n            \n            function\n            exportCsv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/global-error-handler.ts\n            \n            class\n            HttpError\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_helpers/global-error-handler.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_helpers/global-error-handler.ts\n            \n            function\n            rejectBody\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/http-getter.ts\n            \n            function\n            HttpGetter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            interceptor\n            MockBackendInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            accountTypes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            actions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            areaNames\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            areaTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            categories\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            genders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            MockBackendProvider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/mock-backend.ts\n            \n            variable\n            transactionTypes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/read-csv.ts\n            \n            function\n            parseData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/read-csv.ts\n            \n            function\n            readCsv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/read-csv.ts\n            \n            variable\n            objCsv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/schema-validation.ts\n            \n            function\n            personValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/schema-validation.ts\n            \n            function\n            vcardValidation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_helpers/sync.ts\n            \n            function\n            updateSyncable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_interceptors/http-config.interceptor.ts\n            \n            interceptor\n            HttpConfigInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_interceptors/logging.interceptor.ts\n            \n            interceptor\n            LoggingInterceptor\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_models/account.ts\n            \n            interface\n            AccountDetails\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/_models/account.ts\n            \n            interface\n            Meta\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/_models/account.ts\n            \n            interface\n            MetaResponse\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_models/account.ts\n            \n            interface\n            Signature\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_models/account.ts\n            \n            variable\n            defaultAccount\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_models/mappings.ts\n            \n            interface\n            Action\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_models/settings.ts\n            \n            class\n            Settings\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_models/settings.ts\n            \n            interface\n            W3\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/_models/staff.ts\n            \n            interface\n            Staff\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_models/token.ts\n            \n            interface\n            Token\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_models/transaction.ts\n            \n            interface\n            Conversion\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/_models/transaction.ts\n            \n            interface\n            Transaction\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/_models/transaction.ts\n            \n            interface\n            Tx\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/_models/transaction.ts\n            \n            interface\n            TxToken\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-key-store.ts\n            \n            class\n            MutablePgpKeyStore\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-key-store.ts\n            \n            interface\n            MutableKeyStore\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-key-store.ts\n            \n            variable\n            keyring\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-signer.ts\n            \n            class\n            PGPSigner\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-signer.ts\n            \n            interface\n            Signable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-signer.ts\n            \n            interface\n            Signature\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/_pgp/pgp-signer.ts\n            \n            interface\n            Signer\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/_services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/_services/block-sync.service.ts\n            \n            injectable\n            BlockSyncService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/_services/error-dialog.service.ts\n            \n            injectable\n            ErrorDialogService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_services/keystore.service.ts\n            \n            injectable\n            KeystoreService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/_services/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/_services/logging.service.ts\n            \n            injectable\n            LoggingService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/_services/registry.service.ts\n            \n            injectable\n            RegistryService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/_services/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/_services/transaction.service.ts\n            \n            injectable\n            TransactionService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/_services/transaction.service.ts\n            \n            variable\n            vCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/_services/user.service.ts\n            \n            variable\n            vCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/_services/web3.service.ts\n            \n            injectable\n            Web3Service\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/auth/_directives/password-toggle.directive.ts\n            \n            directive\n            PasswordToggleDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/accounts/account-details/account-details.component.ts\n            \n            component\n            AccountDetailsComponent\n            \n                0 %\n                (0/47)\n            \n        \n        \n            \n                \n                src/app/pages/accounts/account-search/account-search.component.ts\n            \n            component\n            AccountSearchComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/pages/accounts/accounts.component.ts\n            \n            component\n            AccountsComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/pages/accounts/create-account/create-account.component.ts\n            \n            component\n            CreateAccountComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/pages.component.ts\n            \n            component\n            PagesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/settings/organization/organization.component.ts\n            \n            component\n            OrganizationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/tokens/token-details/token-details.component.ts\n            \n            component\n            TokenDetailsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/tokens/tokens.component.ts\n            \n            component\n            TokensComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/transactions/transaction-details/transaction-details.component.ts\n            \n            component\n            TransactionDetailsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/pages/transactions/transactions.component.ts\n            \n            component\n            TransactionsComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/_directives/menu-selection.directive.ts\n            \n            directive\n            MenuSelectionDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/_directives/menu-toggle.directive.ts\n            \n            directive\n            MenuToggleDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/_pipes/safe.pipe.ts\n            \n            pipe\n            SafePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/_pipes/token-ratio.pipe.ts\n            \n            pipe\n            TokenRatioPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/_pipes/unix-date.pipe.ts\n            \n            pipe\n            UnixDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/error-dialog/error-dialog.component.ts\n            \n            component\n            ErrorDialogComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/network-status/network-status.component.ts\n            \n            component\n            NetworkStatusComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/activated-route-stub.ts\n            \n            class\n            ActivatedRouteStub\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/testing/router-link-directive-stub.ts\n            \n            directive\n            RouterLinkDirectiveStub\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/testing/shared-module-stub.ts\n            \n            component\n            FooterStubComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/shared-module-stub.ts\n            \n            component\n            SidebarStubComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/shared-module-stub.ts\n            \n            component\n            TopbarStubComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/testing/token-service-stub.ts\n            \n            class\n            TokenServiceStub\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/testing/transaction-service-stub.ts\n            \n            class\n            TransactionServiceStub\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/testing/user-service-stub.ts\n            \n            class\n            UserServiceStub\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.2.0\n        \n            @angular/cdk : ~10.2.7\n        \n            @angular/common : ~10.2.0\n        \n            @angular/compiler : ~10.2.0\n        \n            @angular/core : ~10.2.0\n        \n            @angular/forms : ~10.2.0\n        \n            @angular/material : ~10.2.7\n        \n            @angular/platform-browser : ~10.2.0\n        \n            @angular/platform-browser-dynamic : ~10.2.0\n        \n            @angular/router : ~10.2.0\n        \n            @angular/service-worker : ~10.2.0\n        \n            @cicnet/cic-client : ^0.1.6\n        \n            @cicnet/schemas-data-validator : *\n        \n            @popperjs/core : ^2.5.4\n        \n            bootstrap : ^4.5.3\n        \n            cic-client-meta : 0.0.7-alpha.6\n        \n            ethers : ^5.0.31\n        \n            http-server : ^0.12.3\n        \n            jquery : ^3.5.1\n        \n            ngx-logger : ^4.2.1\n        \n            rxjs : ~6.6.0\n        \n            sha3 : ^2.1.4\n        \n            tslib : ^2.0.0\n        \n            vcard-parser : ^1.0.0\n        \n            web3 : ^1.3.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            arraySum   (src/.../array-sum.ts)\n                        \n                        \n                            copyToClipboard   (src/.../clipboard-copy.ts)\n                        \n                        \n                            exportCsv   (src/.../export-csv.ts)\n                        \n                        \n                            HttpGetter   (src/.../http-getter.ts)\n                        \n                        \n                            parseData   (src/.../read-csv.ts)\n                        \n                        \n                            personValidation   (src/.../schema-validation.ts)\n                        \n                        \n                            readCsv   (src/.../read-csv.ts)\n                        \n                        \n                            rejectBody   (src/.../global-error-handler.ts)\n                        \n                        \n                            updateSyncable   (src/.../sync.ts)\n                        \n                        \n                            vcardValidation   (src/.../schema-validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_helpers/array-sum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            arraySum\n                        \n                        \n                    \n                \n            \n            \n                \narraySum(arr)\n                \n            \n\n\n\n\n            \n                \n                    Returns the sum of all values in an array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn array of numbers.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            Prints 6 for the array [1, 2, 3]:\n```typescript\n\nconsole.log(arraySum([1, 2, 3]));\n```\n\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The sum of all values in the array.\n\n                    \n                \n            \n        \n    \n    src/app/_helpers/clipboard-copy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            copyToClipboard\n                        \n                        \n                    \n                \n            \n            \n                \ncopyToClipboard(text: any)\n                \n            \n\n\n\n\n            \n                \n                    Copies set text to clipboard.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe text to be copied to the clipboard.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            copies &#39;Hello World!&#39; to the clipboard and prints &quot;true&quot;:\n```typescript\n\nconsole.log(copyToClipboard(&#39;Hello World!&#39;));\n```\n\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true - If the copy operation is successful.\n\n                    \n                \n            \n        \n    \n    src/app/_helpers/export-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            exportCsv\n                        \n                        \n                    \n                \n            \n            \n                \nexportCsv(arrayData, filename, delimiter)\n                \n            \n\n\n\n\n            \n                \n                    Exports data to a CSV format and provides a download file.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arrayData\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn array of data to be converted to CSV format.\n\n\n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe name of the file to be downloaded.\n\n\n                                    \n                                \n                                \n                                    delimiter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter to be used when converting to CSV format.\nDefaults to commas.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_helpers/http-getter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            HttpGetter\n                        \n                        \n                    \n                \n            \n            \n                \nHttpGetter()\n                \n            \n\n\n\n\n            \n                \n                    Provides an avenue of fetching resources via HTTP calls. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    src/app/_helpers/read-csv.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            parseData\n                        \n                        \n                    \n                \n            \n            \n                \nparseData(data: any)\n                \n            \n\n\n\n\n            \n                \n                    Parses data to CSV format.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe data to be parsed.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        An array of the parsed data.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readCsv\n                        \n                        \n                    \n                \n            \n            \n                \nreadCsv(input: any)\n                \n            \n\n\n\n\n            \n                \n                    Reads a csv file and converts it to an array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe file to be read.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array | void\n\n                    \n                    \n                        An array of the read data.\n\n                    \n                \n            \n        \n    \n    src/app/_helpers/schema-validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            personValidation\n                        \n                        \n                    \n                \n            \n            \n                \npersonValidation(person: any)\n                \n            \n\n\n\n\n            \n                \n                    Validates a person object against the defined Person schema.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA person object to be validated.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            vcardValidation\n                        \n                        \n                    \n                \n            \n            \n                \nvcardValidation(vcard: any)\n                \n            \n\n\n\n\n            \n                \n                    Validates a vcard object against the defined Vcard schema.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    vcard\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA vcard object to be validated.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_helpers/global-error-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            rejectBody\n                        \n                        \n                    \n                \n            \n            \n                \nrejectBody(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/_helpers/sync.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            updateSyncable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSyncable(changes, changesDescription, syncable)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    changesDescription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    syncable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCICADA\nAn angular admin web client for managing users and transactions in the CIC network.\nThis project was generated with Angular CLI version 10.2.0.\nAngular CLI\nRun npm install -g @angular/cli to install the angular CLI.\nDevelopment server\nRun  ng serve for a local server, npm run start:dev for a dev server and  npm run start:prod for a prod server..\nNavigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nLazy-loading feature modules\nRun ng generate module module-name --route module-name --module app.module to generate a new module on route /module-name in the app module. \nBuild\nRun ng build to build the project using local configurations.\nThe build artifacts will be stored in the dist/ directory.\nUse the npm run build:dev script for a development build and the npm run build:prod script for a production build.\nPWA\nThe app supports Progressive Web App capabilities.\nRun npm run start:pwa to run the project in PWA mode.\nPWA mode works using production configurations.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nEnvironment variables\nDefault environment variables are located in the src/environments/ directory.\nCustom environment variables are contained in the .env file. See .env.example for a template.\nCustom environment variables are set via the set-env.ts file.\nOnce loaded they will be populated in the directory src/environments/.\nIt contains environment variables for development on environment.dev.ts and production on environment.prod.ts.\nCode formatting\nThe system has automated code formatting using Prettier and TsLint.\nTo view the styling rules set, check out .prettierrc and tslint.json.\nRun npm run format:lint To perform formatting and linting of the codebase.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nCIC Staff Client\nCopyright (C) 2021  Grassroots Economics\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see https://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n  Copyright (C) 2021  Grassroots Economics\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TokensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TokensRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_declarations\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_declarations\n\n\n\ncluster_PagesModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TokensModule\n\n\n\ncluster_TokensModule_declarations\n\n\n\ncluster_TokensModule_imports\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_declarations\n\n\n\ncluster_TransactionsModule_imports\n\n\n\ncluster_TransactionsModule_exports\n\n\n\n\nAccountDetailsComponent\n\nAccountDetailsComponent\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAccountDetailsComponent->AccountsModule\n\n\n\n\n\nAccountSearchComponent\n\nAccountSearchComponent\n\nAccountsModule -->\n\nAccountSearchComponent->AccountsModule\n\n\n\n\n\nAccountsComponent\n\nAccountsComponent\n\nAccountsModule -->\n\nAccountsComponent->AccountsModule\n\n\n\n\n\nCreateAccountComponent\n\nCreateAccountComponent\n\nAccountsModule -->\n\nCreateAccountComponent->AccountsModule\n\n\n\n\n\nAccountsRoutingModule\n\nAccountsRoutingModule\n\nAccountsModule -->\n\nAccountsRoutingModule->AccountsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccountsModule -->\n\nSharedModule->AccountsModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsModule -->\n\nSharedModule->TransactionsModule\n\n\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nSharedModule->PagesModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSharedModule->SettingsModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nSharedModule->FooterComponent \n\n\n\n\n\nMenuSelectionDirective \n\nMenuSelectionDirective \n\nMenuSelectionDirective  -->\n\nSharedModule->MenuSelectionDirective \n\n\n\n\n\nNetworkStatusComponent \n\nNetworkStatusComponent \n\nNetworkStatusComponent  -->\n\nSharedModule->NetworkStatusComponent \n\n\n\n\n\nSafePipe \n\nSafePipe \n\nSafePipe  -->\n\nSharedModule->SafePipe \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nSharedModule->SidebarComponent \n\n\n\n\n\nTokenRatioPipe \n\nTokenRatioPipe \n\nTokenRatioPipe  -->\n\nSharedModule->TokenRatioPipe \n\n\n\n\n\nTopbarComponent \n\nTopbarComponent \n\nTopbarComponent  -->\n\nSharedModule->TopbarComponent \n\n\n\n\n\nUnixDatePipe \n\nUnixDatePipe \n\nUnixDatePipe  -->\n\nSharedModule->UnixDatePipe \n\n\n\n\n\nTokensModule\n\nTokensModule\n\nTokensModule -->\n\nSharedModule->TokensModule\n\n\n\nAccountsModule -->\n\nTransactionsModule->AccountsModule\n\n\n\n\n\nTransactionDetailsComponent \n\nTransactionDetailsComponent \n\nTransactionDetailsComponent  -->\n\nTransactionsModule->TransactionDetailsComponent \n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nGlobalErrorHandler\n\nGlobalErrorHandler\n\nAppModule -->\n\nGlobalErrorHandler->AppModule\n\n\n\n\n\nHttpConfigInterceptor\n\nHttpConfigInterceptor\n\nAppModule -->\n\nHttpConfigInterceptor->AppModule\n\n\n\n\n\nLoggingInterceptor\n\nLoggingInterceptor\n\nAppModule -->\n\nLoggingInterceptor->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nPasswordToggleDirective\n\nPasswordToggleDirective\n\nAuthModule -->\n\nPasswordToggleDirective->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nPagesComponent\n\nPagesComponent\n\nPagesModule -->\n\nPagesComponent->PagesModule\n\n\n\n\n\nPagesRoutingModule\n\nPagesRoutingModule\n\nPagesModule -->\n\nPagesRoutingModule->PagesModule\n\n\n\n\n\nOrganizationComponent\n\nOrganizationComponent\n\nSettingsModule -->\n\nOrganizationComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nErrorDialogComponent\n\nErrorDialogComponent\n\nSharedModule -->\n\nErrorDialogComponent->SharedModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nSharedModule -->\n\nFooterComponent->SharedModule\n\n\n\n\n\nMenuSelectionDirective\n\nMenuSelectionDirective\n\nSharedModule -->\n\nMenuSelectionDirective->SharedModule\n\n\n\n\n\nMenuToggleDirective\n\nMenuToggleDirective\n\nSharedModule -->\n\nMenuToggleDirective->SharedModule\n\n\n\n\n\nNetworkStatusComponent\n\nNetworkStatusComponent\n\nSharedModule -->\n\nNetworkStatusComponent->SharedModule\n\n\n\n\n\nSafePipe\n\nSafePipe\n\nSharedModule -->\n\nSafePipe->SharedModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nSharedModule -->\n\nSidebarComponent->SharedModule\n\n\n\n\n\nTokenRatioPipe\n\nTokenRatioPipe\n\nSharedModule -->\n\nTokenRatioPipe->SharedModule\n\n\n\n\n\nTopbarComponent\n\nTopbarComponent\n\nSharedModule -->\n\nTopbarComponent->SharedModule\n\n\n\n\n\nUnixDatePipe\n\nUnixDatePipe\n\nSharedModule -->\n\nUnixDatePipe->SharedModule\n\n\n\n\n\nTokenDetailsComponent\n\nTokenDetailsComponent\n\nTokensModule -->\n\nTokenDetailsComponent->TokensModule\n\n\n\n\n\nTokensComponent\n\nTokensComponent\n\nTokensModule -->\n\nTokensComponent->TokensModule\n\n\n\n\n\nTokensRoutingModule\n\nTokensRoutingModule\n\nTokensModule -->\n\nTokensRoutingModule->TokensModule\n\n\n\n\n\nTransactionDetailsComponent\n\nTransactionDetailsComponent\n\nTransactionsModule -->\n\nTransactionDetailsComponent->TransactionsModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nTransactionsModule -->\n\nTransactionsComponent->TransactionsModule\n\n\n\n\n\nTransactionsRoutingModule\n\nTransactionsRoutingModule\n\nTransactionsModule -->\n\nTransactionsRoutingModule->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abi   (src/.../accountIndex.ts)\n                        \n                        \n                            abi   (src/.../token-registry.ts)\n                        \n                        \n                            accountTypes   (src/.../mock-backend.ts)\n                        \n                        \n                            actions   (src/.../mock-backend.ts)\n                        \n                        \n                            areaNames   (src/.../mock-backend.ts)\n                        \n                        \n                            areaTypes   (src/.../mock-backend.ts)\n                        \n                        \n                            categories   (src/.../mock-backend.ts)\n                        \n                        \n                            defaultAccount   (src/.../account.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            genders   (src/.../mock-backend.ts)\n                        \n                        \n                            keyring   (src/.../pgp-key-store.ts)\n                        \n                        \n                            MockBackendProvider   (src/.../mock-backend.ts)\n                        \n                        \n                            objCsv   (src/.../read-csv.ts)\n                        \n                        \n                            transactionTypes   (src/.../mock-backend.ts)\n                        \n                        \n                            vCard   (src/.../transaction.service.ts)\n                        \n                        \n                            vCard   (src/.../user.service.ts)\n                        \n                        \n                            web3   (src/.../accountIndex.ts)\n                        \n                        \n                            web3   (src/.../token-registry.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/_eth/accountIndex.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            abi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : require('@src/assets/js/block-sync/data/AccountsIndex.json')\n                        \n                    \n\n                \n                    \n                        Fetch the account registry contract's ABI. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            web3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Web3\n\n                        \n                    \n                    \n                        \n                            Default value : Web3Service.getInstance()\n                        \n                    \n\n                \n                    \n                        Establish a connection to the blockchain network. \n\n                    \n                \n\n            \n        \n\n    src/app/_eth/token-registry.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            abi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : require('@src/assets/js/block-sync/data/TokenUniqueSymbolIndex.json')\n                        \n                    \n\n                \n                    \n                        Fetch the token registry contract's ABI. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            web3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Web3\n\n                        \n                    \n                    \n                        \n                            Default value : Web3Service.getInstance()\n                        \n                    \n\n                \n                    \n                        Establish a connection to the blockchain network. \n\n                    \n                \n\n            \n        \n\n    src/app/_helpers/mock-backend.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            accountTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['user', 'cashier', 'vendor', 'tokenagent', 'group']\n                        \n                    \n\n                \n                    \n                        A mock of the curated account types. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { id: 1, user: 'Tom', role: 'enroller', action: 'Disburse RSV 100', approval: false },\n  { id: 2, user: 'Christine', role: 'admin', action: 'Change user phone number', approval: true },\n  { id: 3, user: 'Will', role: 'superadmin', action: 'Reclaim RSV 1000', approval: true },\n  { id: 4, user: 'Vivian', role: 'enroller', action: 'Complete user profile', approval: true },\n  { id: 5, user: 'Jack', role: 'enroller', action: 'Reclaim RSV 200', approval: false },\n  { id: 6, user: 'Patience', role: 'enroller', action: 'Change user information', approval: false },\n]\n                        \n                    \n\n                \n                    \n                        A mock of actions made by the admin staff. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  'Mukuru Nairobi': [\n    'kayaba',\n    'kayba',\n    'kambi',\n    'mukuru',\n    'masai',\n    'hazina',\n    'south',\n    'tetra',\n    'tetrapak',\n    'ruben',\n    'rueben',\n    'kingston',\n    'korokocho',\n    'kingstone',\n    'kamongo',\n    'lungalunga',\n    'sinai',\n    'sigei',\n    'lungu',\n    'lunga lunga',\n    'owino road',\n    'seigei',\n  ],\n  'Kinango Kwale': [\n    'amani',\n    'bofu',\n    'chibuga',\n    'chikomani',\n    'chilongoni',\n    'chigojoni',\n    'chinguluni',\n    'chigato',\n    'chigale',\n    'chikole',\n    'chilongoni',\n    'chilumani',\n    'chigojoni',\n    'chikomani',\n    'chizini',\n    'chikomeni',\n    'chidzuvini',\n    'chidzivuni',\n    'chikuyu',\n    'chizingo',\n    'doti',\n    'dzugwe',\n    'dzivani',\n    'dzovuni',\n    'hanje',\n    'kasemeni',\n    'katundani',\n    'kibandaogo',\n    'kibandaongo',\n    'kwale',\n    'kinango',\n    'kidzuvini',\n    'kalalani',\n    'kafuduni',\n    'kaloleni',\n    'kilibole',\n    'lutsangani',\n    'peku',\n    'gona',\n    'guro',\n    'gandini',\n    'mkanyeni',\n    'myenzeni',\n    'miyenzeni',\n    'miatsiani',\n    'mienzeni',\n    'mnyenzeni',\n    'minyenzeni',\n    'miyani',\n    'mioleni',\n    'makuluni',\n    'mariakani',\n    'makobeni',\n    'madewani',\n    'mwangaraba',\n    'mwashanga',\n    'miloeni',\n    'mabesheni',\n    'mazeras',\n    'mazera',\n    'mlola',\n    'muugano',\n    'mulunguni',\n    'mabesheni',\n    'miatsani',\n    'miatsiani',\n    'mwache',\n    'mwangani',\n    'mwehavikonje',\n    'miguneni',\n    'nzora',\n    'nzovuni',\n    'vikinduni',\n    'vikolani',\n    'vitangani',\n    'viogato',\n    'vyogato',\n    'vistangani',\n    'yapha',\n    'yava',\n    'yowani',\n    'ziwani',\n    'majengo',\n    'matuga',\n    'vigungani',\n    'vidziweni',\n    'vinyunduni',\n    'ukunda',\n    'kokotoni',\n    'mikindani',\n  ],\n  'Misc Nairobi': [\n    'nairobi',\n    'west',\n    'lindi',\n    'kibera',\n    'kibira',\n    'kibra',\n    'makina',\n    'soweto',\n    'olympic',\n    'kangemi',\n    'ruiru',\n    'congo',\n    'kawangware',\n    'kwangware',\n    'donholm',\n    'dagoreti',\n    'dandora',\n    'kabete',\n    'sinai',\n    'donhom',\n    'donholm',\n    'huruma',\n    'kitengela',\n    'makadara',\n    ',mlolongo',\n    'kenyatta',\n    'mlolongo',\n    'tassia',\n    'tasia',\n    'gatina',\n    '56',\n    'industrial',\n    'kariobangi',\n    'kasarani',\n    'kayole',\n    'mathare',\n    'pipe',\n    'juja',\n    'uchumi',\n    'jogoo',\n    'umoja',\n    'thika',\n    'kikuyu',\n    'stadium',\n    'buru buru',\n    'ngong',\n    'starehe',\n    'mwiki',\n    'fuata',\n    'kware',\n    'kabiro',\n    'embakassi',\n    'embakasi',\n    'kmoja',\n    'east',\n    'githurai',\n    'landi',\n    'langata',\n    'limuru',\n    'mathere',\n    'dagoretti',\n    'kirembe',\n    'muugano',\n    'mwiki',\n    'toi market',\n  ],\n  'Kisauni Mombasa': [\n    'bamburi',\n    'mnyuchi',\n    'kisauni',\n    'kasauni',\n    'mworoni',\n    'nyali',\n    'falcon',\n    'shanzu',\n    'bombolulu',\n    'kandongo',\n    'kadongo',\n    'mshomoro',\n    'mtopanga',\n    'mjambere',\n    'majaoni',\n    'manyani',\n    'magogoni',\n    'magongoni',\n    'junda',\n    'mwakirunge',\n    'mshomoroni',\n    'mjinga',\n    'mlaleo',\n    'utange',\n  ],\n  'Misc Mombasa': [\n    'mombasa',\n    'likoni',\n    'bangla',\n    'bangladesh',\n    'kizingo',\n    'old town',\n    'makupa',\n    'mvita',\n    'ngombeni',\n    'ngómbeni',\n    'ombeni',\n    'magongo',\n    'miritini',\n    'changamwe',\n    'jomvu',\n    'ohuru',\n    'tudor',\n    'diani',\n  ],\n  Kilifi: [\n    'kilfi',\n    'kilifi',\n    'mtwapa',\n    'takaungu',\n    'makongeni',\n    'mnarani',\n    'mnarani',\n    'office',\n    'g.e',\n    'ge',\n    'raibai',\n    'ribe',\n  ],\n  Kakuma: ['kakuma'],\n  Kitui: ['kitui', 'mwingi'],\n  Nyanza: [\n    'busia',\n    'nyalgunga',\n    'mbita',\n    'siaya',\n    'kisumu',\n    'nyalenda',\n    'hawinga',\n    'rangala',\n    'uyoma',\n    'mumias',\n    'homabay',\n    'homaboy',\n    'migori',\n    'kusumu',\n  ],\n  'Misc Rural Counties': [\n    'makueni',\n    'meru',\n    'kisii',\n    'bomet',\n    'machakos',\n    'bungoma',\n    'eldoret',\n    'kakamega',\n    'kericho',\n    'kajiado',\n    'nandi',\n    'nyeri',\n    'wote',\n    'kiambu',\n    'mwea',\n    'nakuru',\n    'narok',\n  ],\n  other: ['other', 'none', 'unknown'],\n}\n                        \n                    \n\n                \n                    \n                        A mock of curated area names. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areaTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  urban: ['urban', 'nairobi', 'mombasa', 'kisauni'],\n  rural: ['rural', 'kakuma', 'kwale', 'kinango', 'kitui', 'nyanza'],\n  periurban: ['kilifi', 'periurban'],\n  other: ['other'],\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  system: ['system', 'office main', 'office main phone'],\n  education: [\n    'book',\n    'coach',\n    'teacher',\n    'sch',\n    'school',\n    'pry',\n    'education',\n    'student',\n    'mwalimu',\n    'maalim',\n    'consultant',\n    'consult',\n    'college',\n    'university',\n    'lecturer',\n    'primary',\n    'secondary',\n    'daycare',\n    'babycare',\n    'baby care',\n    'elim',\n    'eimu',\n    'nursery',\n    'red cross',\n    'volunteer',\n    'instructor',\n    'journalist',\n    'lesson',\n    'academy',\n    'headmistress',\n    'headteacher',\n    'cyber',\n    'researcher',\n    'professor',\n    'demo',\n    'expert',\n    'tution',\n    'children',\n    'headmaster',\n    'educator',\n    'Marital counsellor',\n    'counsellor',\n    'trainer',\n    'vijana',\n    'youth',\n    'intern',\n    'redcross',\n    'KRCS',\n    'danish',\n    'science',\n    'data',\n    'facilitator',\n    'vitabu',\n    'kitabu',\n  ],\n  faith: [\n    'pastor',\n    'imam',\n    'madrasa',\n    'religous',\n    'religious',\n    'ustadh',\n    'ustadhi',\n    'Marital counsellor',\n    'counsellor',\n    'church',\n    'kanisa',\n    'mksiti',\n    'donor',\n  ],\n  government: [\n    'elder',\n    'chief',\n    'police',\n    'government',\n    'country',\n    'county',\n    'soldier',\n    'village admin',\n    'ward',\n    'leader',\n    'kra',\n    'mailman',\n    'immagration',\n  ],\n  environment: [\n    'conservation',\n    'toilet',\n    'choo',\n    'garbage',\n    'fagio',\n    'waste',\n    'tree',\n    'taka',\n    'scrap',\n    'cleaning',\n    'gardener',\n    'rubbish',\n    'usafi',\n    'mazingira',\n    'miti',\n    'trash',\n    'cleaner',\n    'plastic',\n    'collection',\n    'seedling',\n    'seedlings',\n    'recycling',\n  ],\n  farming: [\n    'farm',\n    'farmer',\n    'farming',\n    'mkulima',\n    'kulima',\n    'ukulima',\n    'wakulima',\n    'jembe',\n    'shamba',\n  ],\n  labour: [\n    'artist',\n    'agent',\n    'guard',\n    'askari',\n    'accountant',\n    'baker',\n    'beadwork',\n    'beauty',\n    'business',\n    'barber',\n    'casual',\n    'electrian',\n    'caretaker',\n    'car wash',\n    'capenter',\n    'construction',\n    'chef',\n    'catering',\n    'cobler',\n    'cobbler',\n    'carwash',\n    'dhobi',\n    'landlord',\n    'design',\n    'carpenter',\n    'fundi',\n    'hawking',\n    'hawker',\n    'househelp',\n    'hsehelp',\n    'house help',\n    'help',\n    'housegirl',\n    'kushona',\n    'juakali',\n    'jualikali',\n    'juacali',\n    'jua kali',\n    'shepherd',\n    'makuti',\n    'kujenga',\n    'kinyozi',\n    'kazi',\n    'knitting',\n    'kufua',\n    'fua',\n    'hustler',\n    'biashara',\n    'labour',\n    'labor',\n    'laundry',\n    'repair',\n    'hair',\n    'posho',\n    'mill',\n    'mtambo',\n    'uvuvi',\n    'engineer',\n    'manager',\n    'tailor',\n    'nguo',\n    'mason',\n    'mtumba',\n    'garage',\n    'mechanic',\n    'mjenzi',\n    'mfugaji',\n    'painter',\n    'receptionist',\n    'printing',\n    'programming',\n    'plumb',\n    'charging',\n    'salon',\n    'mpishi',\n    'msusi',\n    'mgema',\n    'footballer',\n    'photocopy',\n    'peddler',\n    'staff',\n    'sales',\n    'service',\n    'saloon',\n    'seremala',\n    'security',\n    'insurance',\n    'secretary',\n    'shoe',\n    'shepard',\n    'shephard',\n    'tout',\n    'tv',\n    'mvuvi',\n    'mawe',\n    'majani',\n    'maembe',\n    'freelance',\n    'mjengo',\n    'electronics',\n    'photographer',\n    'programmer',\n    'electrician',\n    'washing',\n    'bricks',\n    'welder',\n    'welding',\n    'working',\n    'worker',\n    'watchman',\n    'waiter',\n    'waitress',\n    'viatu',\n    'yoga',\n    'guitarist',\n    'house',\n    'artisan',\n    'musician',\n    'trade',\n    'makonge',\n    'ujenzi',\n    'vendor',\n    'watchlady',\n    'marketing',\n    'beautician',\n    'photo',\n    'metal work',\n    'supplier',\n    'law firm',\n    'brewer',\n  ],\n  food: [\n    'avocado',\n    'bhajia',\n    'bajia',\n    'mbonga',\n    'bofu',\n    'beans',\n    'biscuits',\n    'biringanya',\n    'banana',\n    'bananas',\n    'crisps',\n    'chakula',\n    'coconut',\n    'chapati',\n    'cereal',\n    'chipo',\n    'chapo',\n    'chai',\n    'chips',\n    'cassava',\n    'cake',\n    'cereals',\n    'cook',\n    'corn',\n    'coffee',\n    'chicken',\n    'dagaa',\n    'donut',\n    'dough',\n    'groundnuts',\n    'hotel',\n    'holel',\n    'hoteli',\n    'butcher',\n    'butchery',\n    'fruit',\n    'food',\n    'fruits',\n    'fish',\n    'githeri',\n    'grocery',\n    'grocer',\n    'pojo',\n    'papa',\n    'goats',\n    'mabenda',\n    'mbenda',\n    'poultry',\n    'soda',\n    'peanuts',\n    'potatoes',\n    'samosa',\n    'soko',\n    'samaki',\n    'tomato',\n    'tomatoes',\n    'mchele',\n    'matunda',\n    'mango',\n    'melon',\n    'mellon',\n    'nyanya',\n    'nyama',\n    'omena',\n    'umena',\n    'ndizi',\n    'njugu',\n    'kamba kamba',\n    'khaimati',\n    'kaimati',\n    'kunde',\n    'kuku',\n    'kahawa',\n    'keki',\n    'muguka',\n    'miraa',\n    'milk',\n    'choma',\n    'maziwa',\n    'mboga',\n    'mbog',\n    'busaa',\n    'chumvi',\n    'cabbages',\n    'mabuyu',\n    'machungwa',\n    'mbuzi',\n    'mnazi',\n    'mchicha',\n    'ngombe',\n    'ngano',\n    'nazi',\n    'oranges',\n    'peanuts',\n    'mkate',\n    'bread',\n    'mikate',\n    'vitungu',\n    'sausages',\n    'maize',\n    'mbata',\n    'mchuzi',\n    'mchuuzi',\n    'mandazi',\n    'mbaazi',\n    'mahindi',\n    'maandazi',\n    'mogoka',\n    'meat',\n    'mhogo',\n    'mihogo',\n    'muhogo',\n    'maharagwe',\n    'miwa',\n    'mahamri',\n    'mitumba',\n    'simsim',\n    'porridge',\n    'pilau',\n    'vegetable',\n    'egg',\n    'mayai',\n    'mifugo',\n    'unga',\n    'good',\n    'sima',\n    'sweet',\n    'sweats',\n    'sambusa',\n    'snacks',\n    'sugar',\n    'suger',\n    'ugoro',\n    'sukari',\n    'soup',\n    'spinach',\n    'smokie',\n    'smokies',\n    'sukuma',\n    'tea',\n    'uji',\n    'ugali',\n    'uchuzi',\n    'uchuuzi',\n    'viazi',\n    'yoghurt',\n    'yogurt',\n    'wine',\n    'marondo',\n    'maandzi',\n    'matoke',\n    'omeno',\n    'onions',\n    'nzugu',\n    'korosho',\n    'barafu',\n    'juice',\n  ],\n  water: ['maji', 'water'],\n  health: [\n    'agrovet',\n    'dispensary',\n    'barakoa',\n    'chemist',\n    'Chemicals',\n    'chv',\n    'doctor',\n    'daktari',\n    'dawa',\n    'hospital',\n    'herbalist',\n    'mganga',\n    'sabuni',\n    'soap',\n    'nurse',\n    'heath',\n    'community health worker',\n    'clinic',\n    'clinical',\n    'mask',\n    'medicine',\n    'lab technician',\n    'pharmacy',\n    'cosmetics',\n    'veterinary',\n    'vet',\n    'sickly',\n    'emergency response',\n    'emergency',\n  ],\n  savings: ['chama', 'group', 'savings', 'loan', 'silc', 'vsla', 'credit', 'finance'],\n  shop: [\n    'bag',\n    'bead',\n    'belt',\n    'bedding',\n    'jik',\n    'bed',\n    'cement',\n    'botique',\n    'boutique',\n    'lines',\n    'kibanda',\n    'kiosk',\n    'spareparts',\n    'candy',\n    'cloth',\n    'electricals',\n    'mutumba',\n    'cafe',\n    'leso',\n    'lesso',\n    'duka',\n    'spare parts',\n    'socks',\n    'malimali',\n    'mitungi',\n    'mali mali',\n    'hardware',\n    'detergent',\n    'detergents',\n    'dera',\n    'retail',\n    'kamba',\n    'pombe',\n    'pampers',\n    'pool',\n    'phone',\n    'simu',\n    'mangwe',\n    'mikeka',\n    'movie',\n    'shop',\n    'acces',\n    'mchanga',\n    'uto',\n    'airtime',\n    'matress',\n    'mattress',\n    'mattresses',\n    'mpsea',\n    'mpesa',\n    'shirt',\n    'wholesaler',\n    'perfume',\n    'playstation',\n    'tissue',\n    'vikapu',\n    'uniform',\n    'flowers',\n    'vitenge',\n    'utencils',\n    'utensils',\n    'station',\n    'jewel',\n    'pool table',\n    'club',\n    'pub',\n    'bar',\n    'furniture',\n    'm-pesa',\n    'vyombo',\n  ],\n  transport: [\n    'kebeba',\n    'beba',\n    'bebabeba',\n    'bike',\n    'bicycle',\n    'matatu',\n    'boda',\n    'bodaboda',\n    'cart',\n    'carrier',\n    'tour',\n    'travel',\n    'driver',\n    'dereva',\n    'tout',\n    'conductor',\n    'kubeba',\n    'tuktuk',\n    'taxi',\n    'piki',\n    'pikipiki',\n    'manamba',\n    'trasportion',\n    'mkokoteni',\n    'mover',\n    'motorist',\n    'motorbike',\n    'transport',\n    'transpoter',\n    'gari',\n    'magari',\n    'makanga',\n    'car',\n  ],\n  'fuel/energy': [\n    'timber',\n    'timberyard',\n    'biogas',\n    'charcol',\n    'charcoal',\n    'kuni',\n    'mbao',\n    'fuel',\n    'makaa',\n    'mafuta',\n    'moto',\n    'solar',\n    'stima',\n    'fire',\n    'firewood',\n    'wood',\n    'oil',\n    'taa',\n    'gas',\n    'paraffin',\n    'parrafin',\n    'parafin',\n    'petrol',\n    'petro',\n    'kerosine',\n    'kerosene',\n    'diesel',\n  ],\n  other: ['other', 'none', 'unknown', 'none'],\n}\n                        \n                    \n\n                \n                    \n                        A mock of the user's business categories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : ['male', 'female', 'other']\n                        \n                    \n\n                \n                    \n                        A mock of curated genders \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MockBackendProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: HTTP_INTERCEPTORS,\n  useClass: MockBackendInterceptor,\n  multi: true,\n}\n                        \n                    \n\n                \n                    \n                        Exports the MockBackendInterceptor as an Angular provider. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transactionTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'transactions',\n  'conversions',\n  'disbursements',\n  'rewards',\n  'reclamations',\n]\n                        \n                    \n\n                \n                    \n                        A mock of curated  transaction types. \n\n                    \n                \n\n            \n        \n\n    src/app/_models/account.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAccount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountDetails\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  date_registered: Date.now(),\n  gender: 'other',\n  identities: {\n    evm: {\n      'bloxberg:8996': [''],\n      'oldchain:1': [''],\n    },\n    latitude: 0,\n    longitude: 0,\n  },\n  location: {\n    area_name: 'Kilifi',\n  },\n  products: [],\n  vcard: {\n    email: [\n      {\n        value: '',\n      },\n    ],\n    fn: [\n      {\n        value: 'Sarafu Contract',\n      },\n    ],\n    n: [\n      {\n        value: ['Sarafu', 'Contract'],\n      },\n    ],\n    tel: [\n      {\n        meta: {\n          TYP: [],\n        },\n        value: '+254700000000',\n      },\n    ],\n    version: [\n      {\n        value: '3.0',\n      },\n    ],\n  },\n}\n                        \n                    \n\n                \n                    \n                        Default account data object \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  bloxbergChainId: 8996,\n  logLevel: NgxLoggerLevel.ERROR,\n  serverLogLevel: NgxLoggerLevel.OFF,\n  loggingUrl: '',\n  cicMetaUrl: 'https://meta-auth.dev.grassrootseconomics.net',\n  publicKeysUrl: 'https://dev.grassrootseconomics.net/.well-known/publickeys/',\n  cicCacheUrl: 'https://cache.dev.grassrootseconomics.net',\n  web3Provider: 'wss://bloxberg-ws.dev.grassrootseconomics.net',\n  cicUssdUrl: 'https://user.dev.grassrootseconomics.net',\n  registryAddress: '0xea6225212005e86a4490018ded4bf37f3e772161',\n  trustedDeclaratorAddress: '0xEb3907eCad74a0013c259D5874AE7f22DcBcC95C',\n  dashboardUrl: 'https://dashboard.sarafu.network/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  bloxbergChainId: 8996,\n  logLevel: NgxLoggerLevel.ERROR,\n  serverLogLevel: NgxLoggerLevel.OFF,\n  loggingUrl: '',\n  cicMetaUrl: 'https://meta-auth.dev.grassrootseconomics.net',\n  publicKeysUrl: 'https://dev.grassrootseconomics.net/.well-known/publickeys/',\n  cicCacheUrl: 'https://cache.dev.grassrootseconomics.net',\n  web3Provider: 'wss://bloxberg-ws.dev.grassrootseconomics.net',\n  cicUssdUrl: 'https://user.dev.grassrootseconomics.net',\n  registryAddress: '0xea6225212005e86a4490018ded4bf37f3e772161',\n  trustedDeclaratorAddress: '0xEb3907eCad74a0013c259D5874AE7f22DcBcC95C',\n  dashboardUrl: 'https://dashboard.sarafu.network/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  bloxbergChainId: 8996,\n  logLevel: NgxLoggerLevel.ERROR,\n  serverLogLevel: NgxLoggerLevel.OFF,\n  loggingUrl: 'http://localhost:8000',\n  cicMetaUrl: 'https://meta-auth.dev.grassrootseconomics.net',\n  publicKeysUrl: 'https://dev.grassrootseconomics.net/.well-known/publickeys/',\n  cicCacheUrl: 'https://cache.dev.grassrootseconomics.net',\n  web3Provider: 'wss://bloxberg-ws.dev.grassrootseconomics.net',\n  cicUssdUrl: 'https://user.dev.grassrootseconomics.net',\n  registryAddress: '0xea6225212005e86a4490018ded4bf37f3e772161',\n  trustedDeclaratorAddress: '0xEb3907eCad74a0013c259D5874AE7f22DcBcC95C',\n  dashboardUrl: 'https://dashboard.sarafu.network/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/_pgp/pgp-key-store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            keyring\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new openpgp.Keyring()\n                        \n                    \n\n                \n                    \n                        An openpgp Keyring instance. \n\n                    \n                \n\n            \n        \n\n    src/app/_helpers/read-csv.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            objCsv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  size: 0,\n  dataFile: [],\n}\n                        \n                    \n\n                \n                    \n                        An object defining the properties of the data read. \n\n                    \n                \n\n            \n        \n\n    src/app/_services/transaction.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            vCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('vcard-parser')\n                        \n                    \n\n\n            \n        \n\n    src/app/_services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            vCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('vcard-parser')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
