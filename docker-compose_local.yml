version: "3"

volumes:
  postgres-db: {}
  signer-data: {}
  bloxberg-data: {}
  contract-config: {} 


services:
  evm:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/bloxberg-node:${TAG:-latest}
    build:
      context: apps/bloxbergValidatorSetup
    restart: unless-stopped
    ports:
      - ${DEV_ETH_PORT_HTTP:-63545}:8545
      - ${DEV_ETH_PORT_WS:-63546}:8546
      - 30303
    volumes:
      - ./apps/bloxbergValidatorSetup/keys:/root/keys # stores the signing key locally
      - bloxberg-data:/root/.local/share/io.parity.ethereum/

  postgres:
    image: postgres:12.5-alpine
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust # for postgres user access w/o password. Obvioulsy not safe but allows easy elevated debugging.  
      # PGDATA: /tmp/cic/postgres
    ports:
      - ${DEV_POSTGRES_PORT:-63432}:5432
    command: [ "-c", "max_connections=200" ]
    volumes:
      - ./scripts/initdb/create_db.sql:/docker-entrypoint-initdb.d/1-create_all_db.sql 
      - postgres-db:/var/lib/postgresql/data

  redis:
    image: ${DEV_DOCKER_REGISTRY:-docker.io}/redis:6.0.9-alpine
    ports:
      - ${DEV_REDIS_PORT:-63379}:6379
    command: "--loglevel verbose"

    
  bootstrap:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/contract-migration:${TAG:-latest}
    build:
      context: apps/contract-migration
      dockerfile: docker/Dockerfile
      args:
          DOCKER_REGISTRY: $DEV_DOCKER_REGISTRY
          PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.org/simple}
          EXTRA_PIP_INDEX_URL: $EXTRA_PIP_INDEX_URL
          EXTRA_PIP_ARGS: $EXTRA_PIP_ARGS
    environment:
      DEV_DATA_DIR: ${DEV_DATA_DIR:-/tmp/cic/config}
      DEV_CONFIG_RESET: $DEV_CONFIG_RESET
      RPC_PROVIDER: ${RPC_PROVIDER:-http://evm:8545}
      CHAIN_SPEC: ${CHAIN_SPEC:-"evm:byzantium:8996:bloxberg"}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DB: ${REDIS_DB:-0}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379}
      CELERY_RESULT_URL: ${CELERY_RESULT_URL:-redis://redis:6379}
      RUN_MASK: ${RUN_MASK:-0}
      TOKEN_NAME: $TOKEN_NAME
      TOKEN_SYMBOL: $TOKEN_SYMBOL
      TOKEN_TYPE: $TOKEN_TYPE
      TOKEN_DECIMALS: $TOKEN_DECIMALS
      TOKEN_REDISTRIBUTION_PERIOD: $TOKEN_REDISTRIBUTION_PERIOD
      TOKEN_SUPPLY_LIMIT: $TOKEN_SUPPLY_LIMIT
      TOKEN_DEMURRAGE_LEVEL: $TOKEN_DEMURRAGE_LEVEL
      TOKEN_SINK_ADDRESS: $TOKEN_SINK_ADDRESS
    command: ["./run_job.sh"]
    depends_on:
      - evm
      - postgres
      - redis
        #- cic-eth-tasker
    volumes:
      - contract-config:/tmp/cic/config



  cic-signer:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/funga-eth:${TAG:-latest}
    build: 
      context: apps/cic-signer
      dockerfile: Dockerfile
      target: dev
      args:
          DOCKER_REGISTRY: $DEV_DOCKER_REGISTRY
          PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.org/simple}
          EXTRA_PIP_INDEX_URL: $EXTRA_PIP_INDEX_URL
          EXTRA_PIP_ARGS: $EXTRA_PIP_ARGS
    environment:
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-cic_signer}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-tralala}
      DATABASE_USER: ${DATABASE_USER:-grassroots}
      DATABASE_ENGINE: ${DATABASE_ENGINE:-postgres}
      DATABASE_DRIVER: ${DATABASE_DRIVER:-psycopg2}
      DATABASE_DEBUG: ${DATABASE_DEBUG:-0}
      DATABASE_POOL_SIZE: 0
      SIGNER_SOCKET_PATH: ${SIGNER_SOCKET_PATH:-http://0.0.0.0:8000}
      SIGNER_SECRET: ${SIGNER_SECRET:-deadbeef}
    depends_on:
      - postgres
    volumes:
      - signer-data:/run/crypto-dev-signer
      - contract-config:/tmp/cic/config/:ro
    command: ["python", "/usr/local/bin/funga-ethd", "-vv"]


  cic-eth-tasker:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/cic-eth:${TAG:-latest}
    build: 
      context: apps/cic-eth
      dockerfile: docker/Dockerfile
      target: dev
      args:
          DOCKER_REGISTRY: $DEV_DOCKER_REGISTRY
          PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.org/simple}
          EXTRA_PIP_INDEX_URL: $EXTRA_PIP_INDEX_URL
          EXTRA_PIP_ARGS: $EXTRA_PIP_ARGS
    environment:
      CIC_REGISTRY_ADDRESS: $CIC_REGISTRY_ADDRESS
      RPC_PROVIDER: ${RPC_PROVIDER:-http://evm:8545}
      CHAIN_SPEC: ${CHAIN_SPEC:-"evm:byzantium:8996:bloxberg"}
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-cic_eth}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-tralala}
      DATABASE_USER: ${DATABASE_USER:-grassroots}
      DATABASE_ENGINE: ${DATABASE_ENGINE:-postgres}
      DATABASE_DRIVER: ${DATABASE_DRIVER:-psycopg2}
      DATABASE_DEBUG: ${DATABASE_DEBUG:-0}
      DATABASE_POOL_SIZE: 0
      REDIS_PORT: 6379
      REDIS_HOST: redis
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis}
      CELERY_RESULT_URL: ${CELERY_RESULT_URL:-redis://redis}
      CELERY_DEBUG: ${CELERY_DEBUG:-1}
      SIGNER_PROVIDER: ${SIGNER_PROVIDER:-http://cic-signer:8000}
      SIGNER_SECRET: ${SIGNER_SECRET:-deadbeef}
      TASKS_TRACE_QUEUE_STATUS: ${TASKS_TRACE_QUEUE_STATUS:-1}
    restart: unless-stopped 
    depends_on:
      - evm
      - postgres
      - redis
      - cic-signer
    volumes:
      - signer-data:/run/crypto-dev-signer
      - contract-config:/tmp/cic/config/:ro
    command:
      - /bin/bash
      - -c
      - |
        set -a
        if [[ -f /tmp/cic/config/env_reset ]]; then source /tmp/cic/config/env_reset; fi 
        set +a
        ./start_tasker.sh --aux-all -q cic-eth  -vv


  cic-eth-tracker:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/cic-eth:${TAG:-latest}
    build: 
      context: apps/cic-eth
      dockerfile: docker/Dockerfile
      target: dev
      args:
          DOCKER_REGISTRY: $DEV_DOCKER_REGISTRY
          PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.org/simple}
          EXTRA_PIP_INDEX_URL: $EXTRA_PIP_INDEX_URL
          EXTRA_PIP_ARGS: $EXTRA_PIP_ARGS
    environment:
      CIC_REGISTRY_ADDRESS: $CIC_REGISTRY_ADDRESS
      RPC_PROVIDER: ${RPC_PROVIDER:-http://evm:8545}
      CHAIN_SPEC: ${CHAIN_SPEC:-"evm:byzantium:8996:bloxberg"}
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-cic_eth}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-tralala}
      DATABASE_USER: ${DATABASE_USER:-grassroots}
      DATABASE_ENGINE: ${DATABASE_ENGINE:-postgres}
      DATABASE_DRIVER: ${DATABASE_DRIVER:-psycopg2}
      DATABASE_DEBUG: ${DATABASE_DEBUG:-0}
      DATABASE_POOL_SIZE: 0
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis}
      CELERY_RESULT_URL: ${CELERY_RESULT_URL:-redis://redis}
      CELERY_DEBUG: ${CELERY_DEBUG:-1}
      CELERY_QUEUE: ${CELERY_QUEUE:-cic-eth}
      SYNCER_LOOP_INTERVAL: ${SYNCER_LOOP_INTERVAL:-5}
      SYNCER_NO_HISTORY: ${SYNCER_NO_HISTORY:-1}
      TASKS_TRANSFER_CALLBACKS: ${TASKS_TRANSFER_CALLBACKS:-"cic-eth:cic_eth.callbacks.noop.noop,cic-ussd:cic_ussd.tasks.callback_handler.transaction_callback"}
    restart: unless-stopped 
    depends_on:
      - evm
      - postgres
      - redis
    volumes:
      - contract-config:/tmp/cic/config/:ro
    command:
      - /bin/bash
      - -c
      - |
        set -a
        if [[ -f /tmp/cic/config/env_reset ]]; then source /tmp/cic/config/env_reset; fi 
        set +a
        ./start_tracker.sh -vv


  cic-eth-dispatcher:
    image: ${DEV_DOCKER_REGISTRY:-registry.gitlab.com/grassrootseconomics/cic-internal-integration}/cic-eth:${TAG:-latest}
    build: 
      context: apps/cic-eth
      dockerfile: docker/Dockerfile
      target: dev
      args:
          DOCKER_REGISTRY: $DEV_DOCKER_REGISTRY
          PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.org/simple}
          EXTRA_PIP_INDEX_URL: $EXTRA_PIP_INDEX_URL
          EXTRA_PIP_ARGS: $EXTRA_PIP_ARGS
    environment:
      RPC_PROVIDER: ${RPC_PROVIDER:-http://evm:8545}
      CHAIN_SPEC: ${CHAIN_SPEC:-"evm:byzantium:8996:bloxberg"}
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-cic_eth}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-tralala}
      DATABASE_USER: ${DATABASE_USER:-grassroots}
      DATABASE_ENGINE: ${DATABASE_ENGINE:-postgres}
      DATABASE_DRIVER: ${DATABASE_DRIVER:-psycopg2}
      DATABASE_DEBUG: ${DATABASE_DEBUG:-0}
      DATABASE_POOL_SIZE: 0
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis}
      CELERY_RESULT_URL: ${CELERY_RESULT_URL:-redis://redis}
      CELERY_DEBUG: ${CELERY_DEBUG:-1}
      CELERY_QUEUE: ${CELERY_QUEUE:-cic-eth}
      DISPATCHER_LOOP_INTERVAL: ${DISPATCHER_LOOP_INTERVAL:-1}
    restart: unless-stopped 
    depends_on:
      - evm
      - postgres
      - redis
    volumes:
      - contract-config:/tmp/cic/config/:ro
    command:
      - /bin/bash
      - -c
      - |
        set -a
        if [[ -f /tmp/cic/config/env_reset ]]; then source /tmp/cic/config/env_reset; fi 
        set +a
        ./start_dispatcher.sh -vv
